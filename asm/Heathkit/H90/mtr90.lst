 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 1 - 2024-05-13 09:34:53 PM


       1/      0 :                              INCLUDE macros.mac
(1)    1/      0 :                      ; Macros to emulate the Heathkit HDOS assembler.
(1)    2/      0 :                      
(1)    3/      0 :                      ERRPL   MACRO EXP
(1)    4/      0 :                              IF (EXP) > 0
(1)    5/      0 :                                ERROR Expression is positive
(1)    6/      0 :                              ENDIF
(1)    7/      0 :                              ENDM
(1)    8/      0 :                      
(1)    9/      0 :                      ERRMI   MACRO EXP
(1)   10/      0 :                              IF (EXP) < 0
(1)   11/      0 :                                ERROR Expression is negative
(1)   12/      0 :                              ENDIF
(1)   13/      0 :                              ENDM
(1)   14/      0 :                      
(1)   15/      0 :                      ERRNZ   MACRO EXP
(1)   16/      0 :                              IF (EXP) != 0
(1)   17/      0 :                                ERROR Expression is not zero
(1)   18/      0 :                              ENDIF
(1)   19/      0 :                              ENDM
(1)   20/      0 :                      
(1)   21/      0 :                      ERRZR   MACRO EXP
(1)   22/      0 :                              IF (EXP) == 0
(1)   23/      0 :                                ERROR Expression is zero
(1)   24/      0 :                              ENDIF
(1)   25/      0 :                              ENDM
(1)   26/      0 :                      
       2/      0 :                      
       3/      0 :                      ;       MTR90 - H/Z-89 MONITOR                  ISSUE 09.02.01
       4/      0 :                      ;
       5/      0 :                      ;       MTR89 IS A MODIFICATION OF MTR88 BY REX CHEN IN MAY, 1980.
       6/      0 :                      ;       MTR89 IS IDENTICAL TO THE MTR88 IN THAT ALL ENTRY POINTS TO
       7/      0 :                      ;       THE CURRENT ROUTINES REMAIN UNCHANGED AND ALL ROUTINES
       8/      0 :                      ;       REMAIN UNALTERED WITH THE FOLLOWING EXCEPTIONS:
       9/      0 :                      ;
      10/      0 :                      ;         (1). 'TYPE SPACES TO DETERMINE BAUD RATE' MESSAGE IS REMOVED.
      11/      0 :                      ;         (2). THE BOOTSTRAP FOR THE Z-47 IS INSTALLED.
      12/      0 :                      ;         (3). 15 SECONDS TIME OUT FOR Z-87, OR H-17 AND Z-47 IS INSERTED.
      13/      0 :                      ;         (4). <DELETE> KEY SERVES AS AN ABORT-BOOT KEY.
      14/      0 :                      ;         (5). ALLOWS BOOT FROM SELECTED DEVICE AND UNIT.
      15/      0 :                      ;
      16/      0 :                      ;       MTR90 IS A MODIFICATION OF MTR89 TO ALLOW BOOTING FROM
      17/      0 :                      ;       THE H67, H37, AND 1 FUTURE DEVICE. ALSO THE H47 CODE WAS
      18/      0 :                      ;       CHANGED, AND HEXADECIMAL ROUTINES WERE ADDED.
      19/      0 :                      ;       SEVERAL NEW *CONVENIENCE* COMMANDS WERE ADDED, THANKS TO
      20/      0 :                      ;       THE ADDITION OF THE EXTRA 2K SPACE.
      21/      0 :                      ;
      22/      0 :                      ;       MTR90-1 Employs a software fix for a hardware deficiency in disk
      23/      0 :                      ;       drives. It seems that a disk drive head may go into the negative
      24/      0 :                      ;       track area (-1, -2, ...) and not known it, so all disk drivers
      25/      0 :                      ;       have been modified to step the head in and then issuing a second
      26/      0 :                      ;       restore command. This can be taken care of in the hardware, but
      27/      0 :                      ;       people are opposed to adjusting hardware properly.
      28/      0 :                      ;
      29/      0 :                      ;       MTR88 IS AN ADAPTATION OF PAM/8 ORIGINALLY WRITTEN FOR THE
      30/      0 :                      ;       HEATH H8 COMPUTER BY J. G. LETWIN IN 1976 AND MODIFIED BY
      31/      0 :                      ;       R. N. BORCHARDT IN 1979 FOR USE IN THE HEATH H88/H89
      32/      0 :                      ;       COMPUTERS.
      33/      0 :                      ;
      34/      0 :                      ;       MTR88 PROVIDES COMPATIBILITY WITH PAM/8 SUCH THAT ALL ROUTINES
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 2 - 2024-05-13 09:34:53 PM


      35/      0 :                      ;       HAVE RETAINED PREVIOUSLY DESCRIBED ENTRY POINTS AND ENTRY AND
      36/      0 :                      ;       EXIT CONDITIONS. ROUTINES WHICH ARE NOT APPLICABLE SUCH AS
      37/      0 :                      ;       THOSE PERTAINING TO THE FRONT PANEL DISPLAY HAVE BEEN DELETED.
      38/      0 :                      ;
      39/      0 :                      ;
      40/      0 :                      ;       COPYRIGHT  05/1976, WINTEK CORPORATION.
      41/      0 :                      ;                           902 N. 9TH ST.
      42/      0 :                      ;                           LAFAYETTE, IND.
      43/      0 :                      ;
      44/      0 :                      ;       COPYRIGHT  01/1979, HEATH COMPANY
      45/      0 :                      ;                           BENTON HARBOR, MI.
      46/      0 :                      ;
      47/      0 :                      ;       COPYRIGHT  05/1980, ZENITH DATA SYSTEMS INC.
      48/      0 :                      ;                           ST. JOSEPH, MI.
      49/      0 :                      
      50/      0 :                      
      51/      0 :                      ;       MTR88 - H88/H89 MONITOR.
      52/      0 :                      ;
      53/      0 :                      ;       THIS PROGRAM RESIDES (IN ROM) IN THE LOW 2048 BYTES OF THE HEATH
      54/      0 :                      ;       H88/H89 COMPUTERS.
      55/      0 :                      
      56/      0 :                      ;       INTERRUPTS.
      57/      0 :                      ;
      58/      0 :                      ;       MTR88 IS THE PRIMARY PROCESSOR FOR ALL INTERRUPTS.
      59/      0 :                      ;       THEY ARE PROCESSED AS FOLLOWS:
      60/      0 :                      ;
      61/      0 :                      ;       RST     USE
      62/      0 :                      ;
      63/      0 :                      ;       0       MASTER CLEAR. (NEVER USED FOR I/O OR REST)
      64/      0 :                      ;
      65/      0 :                      ;       1       CLOCK INTERRUPT. NORMALLY TAKEN BY MTR88,
      66/      0 :                      ;               SETTING BIT *UO.CLK* IN BYTE *MFLAG* ALLOWS
      67/      0 :                      ;               USER PROCESSING (VIA A JUMP THROUGH *UIVEC*).
      68/      0 :                      ;               UPON ENTRY OF THE USER ROUTINE, THE STACK
      69/      0 :                      ;               CONTAINS:
      70/      0 :                      ;               (STACK+0)  = RETURN ADDRESS (TO MTR88)
      71/      0 :                      ;               (STACK+2)  = (STACKPTR+14)
      72/      0 :                      ;               (STACK+4)  = (AF)
      73/      0 :                      ;               (STACK+6)  = (BC)
      74/      0 :                      ;               (STACK+8)  = (DE)
      75/      0 :                      ;               (STACK+10) = (HL)
      76/      0 :                      ;               (STACK+12) = (PC)
      77/      0 :                      ;               THE USER'S ROUTINE SHOULD RETURN TO MTR88 VIA
      78/      0 :                      ;               A *RET* WITHOUT ENABLING INTERRUPTS.
      79/      0 :                      ;
      80/      0 :                      ;       2       SINGLE STEP INTERRUPTS RECEIVED WHEN IN
      81/      0 :                      ;               USER MODE CAUSES A JUMP THROUGH *UIVEC*+3.
      82/      0 :                      ;               STACK UPON USER ROUTINE ENTRY:
      83/      0 :                      ;               (STACK+0)  = (STACKPTR+12)
      84/      0 :                      ;               (STACK+2)  = (AF)
      85/      0 :                      ;               (STACK+4)  = (BC)
      86/      0 :                      ;               (STACK+6)  = (DE)
      87/      0 :                      ;               (STACK+8)  = (HL)
      88/      0 :                      ;               (STACK+10) = (PC)
      89/      0 :                      ;               THE USER'S ROUTINE SHOULD HANDLE IT'S OWN RETURN
      90/      0 :                      ;               FROM THE INTERRUPT.  THAT IS, *EI* FOLLOWED BY *RET*.
      91/      0 :                      ;
      92/      0 :                      ;       THE FOLLOWING INTERRUPTS ARE VECTORED DIRECTLY THROUGH *UIVEC*.
      93/      0 :                      ;       THE USER ROUTINE MUST HAVE SETUP A JUMP IN *UIVEC* BEFORE ANY
      94/      0 :                      ;       OF THESE INTERRUPTS MAY OCCUR. RETURN IS VIA *EI* AND THEN *RET*.
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 3 - 2024-05-13 09:34:53 PM


      95/      0 :                      ;
      96/      0 :                      ;       3       I/O 3. CAUSES A DIRECT JUMP THROUGH *UIVEC*+6
      97/      0 :                      ;
      98/      0 :                      ;       4       I/O 4. CAUSES A DIRECT JUMP THROUGH *UIVEC*+9
      99/      0 :                      ;
     100/      0 :                      ;       5       I/O 5. CAUSES A DIRECT JUMP THROUGH *UIVEC*+12
     101/      0 :                      ;
     102/      0 :                      ;       6       I/O 6. CAUSES A DIRECT JUMP THROUGH *UIVEC*+15
     103/      0 :                      ;
     104/      0 :                      ;       7       I/O 7. CAUSES A DIRECT JUMP THROUGH *UIVEC*+18
     105/      0 :                      
     106/      0 :                      ;       ASSEMBLY CONSTANTS
     107/      0 :                      
     108/      0 : =331O                MI.EXX  EQU     331Q            ; Z80 EXX INSTRUCTION
     109/      0 :                      
     110/      0 :                              INCLUDE mtr88.asm       ; DEFINE MTR88 OLD EQUATES
(1)    1/      0 :                      ;       IO PORTS
(1)    2/      0 :                      
(1)    3/      0 :                      ;       ALL REFERENCES TO THE H8 FRONT PANEL PORTS ARE TRAPPED BY THE
(1)    4/      0 :                      ;       Z80 NMI OF THE H88/H89.  OP.CTL WILL STILL PERFORM AS IN AN H8
(1)    5/      0 :                      ;       IN RESPECT TO THE CLOCK AND SINGLE STEP CONTROL.  FOR MORE
(1)    6/      0 :                      ;       INFORMATION SEE THE NMI ROUTINE.
(1)    7/      0 :                      ;
(1)    8/      0 : =360O                IP.PAD  EQU     360Q            ; PAD INPUT PORT
(1)    9/      0 : =360O                OP.CTL  EQU     360Q            ; CONTROL OUTPUT PORT
(1)   10/      0 : =360O                OP.DIG  EQU     360Q            ; DIGIT SELECT OUTPUT PORT
(1)   11/      0 : =361O                OP.SEQ  EQU     361Q            ; SEGMENT SELECT OUTPUT PORT
(1)   12/      0 :                      
(1)   13/      0 :                      ;       H88/H89 CONTROL PORT
(1)   14/      0 : =362O                H88.CTL EQU     362Q            ; H88/H89 PORT FOR CLOCK AND SINGLE STEP
(1)   15/      0 : =2O                  H88B.CK EQU     00000010B       ; 2MS CLOCK ENABLE/DISABLE
(1)   16/      0 : =1O                  H88B.SS EQU     00000001B       ; SINGLE STEP ENABLE/DISABLE
(1)   17/      0 :                      
(1)   18/      0 : =362O                H88.SW  EQU     362Q            ; 8 POSITION DIP SWITCH
(1)   19/      0 : =200O                H88S.AT EQU     10000000B       ; AUTO BOOT SWITCH
(1)   20/      0 : =100O                H88S.BR EQU     01000000B       ; BAUD RATE SWITCHE        **/RNC/**
(1)   21/      0 : =40O                 H88S.M  EQU     00100000B       ; MEMORY TEST/NORMAL OPERATION SWITCH
(1)   22/      0 : =20O                 H88S.DV EQU     00010000B       ; = 0, BOOT FROM DEVICE AT 174-177Q
(1)   23/      0 :                                                      ; = 1, BOOT FROM DEVICE AT 170-173Q
(1)   24/      0 : =14O                 H88S.0  EQU     00001100B       ; = 00, NO DEVICE INSTALLED AT 170-173Q
(1)   25/      0 :                                                      ; = 01, DEVICE AT 170-173Q = Z47
(1)   26/      0 : =3O                  H88S.4  EQU     00000011B       ; = 00, DEVICE AT 174-177Q = H17
(1)   27/      0 :                                                      ; = 01, DEVICE AT 174-177Q = Z47
(1)   28/      0 :                      
(1)   29/      0 :                      ;       CASSETTE PORTS
(1)   30/      0 :                      
(1)   31/      0 : =371O                IP.TPC  EQU     371Q            ; TAPE CONTROL IN
(1)   32/      0 : =371O                OP.TPC  EQU     371Q            ; TAPE CONTROL OUT
(1)   33/      0 : =370O                IP.TPD  EQU     370Q            ; TAPE DATA IN
(1)   34/      0 : =370O                OP.TPD  EQU     370Q            ; TAPE DATA OUT
(1)   35/      0 :                      
(1)   36/      0 :                      ;       ASCII CHARACTERS
(1)   37/      0 :                      
(1)   38/      0 : =26O                 A.SYN   EQU     026Q            ; SYNC CHARACTER
(1)   39/      0 : =2O                  A.STX   EQU     002Q            ; STX CHARACTER
(1)   40/      0 : =7O                  A.BEL   EQU     007Q            ; BELL CHARACTER
(1)   41/      0 : =10O                 A.BKS   EQU     010Q            ; BACKSPACE CHARACTER
(1)   42/      0 : =12O                 A.LF    EQU     012Q            ; LINE FEED CHARACTER
(1)   43/      0 : =15O                 A.CR    EQU     015Q            ; CARRIAGE RETURN CHARACTER
(1)   44/      0 : =33O                 A.ESC   EQU     033Q            ; ESCAPE CHARACTER
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm(mtr88.asm) - Page 4 - 2024-05-13 09:34:53 PM


(1)   45/      0 : =177O                A.DEL   EQU     177Q            ; DELETE OR RUBOUT CHARACTER
(1)   46/      0 :                      
(1)   47/      0 :                      ;       FRONT PANEL HARDWARE CONTROL BITS.
(1)   48/      0 :                      
(1)   49/      0 : =20O                 CB.SSI  EQU     00010000B       ; SINGLE STEP INTERRUPT
(1)   50/      0 : =40O                 CB.MTL  EQU     00100000B       ; MONITOR LIGHT
(1)   51/      0 : =100O                CB.CLI  EQU     01000000B       ; CLOCK INTERRUPT ENABLE
(1)   52/      0 : =200O                CB.SPK  EQU     10000000B       ; SPEAKER ENABLE
(1)   53/      0 :                      
(1)   54/      0 :                      ;       DISPLAY MODE FLAGS (IN *DSPMOD*)
(1)   55/      0 :                      
(1)   56/      0 : =0O                  DM.MR   EQU     0               ; MEMORY READ
(1)   57/      0 : =1O                  DM.MW   EQU     1               ; MEMORY WRITE
(1)   58/      0 : =2O                  DM.RR   EQU     2               ; REGISTER READ
(1)   59/      0 : =3O                  DM.RW   EQU     3               ; REGISTER WRITE
(1)   60/      0 :                      
(1)   61/      0 :                              INCLUDE tape.asm
(2)    1/      0 :                      ;       TAPE EQUIVALENCES.
(2)    2/      0 :                      
(2)    3/      0 : =1O                  RT.MI   EQU     1       ; RECORD TYPE - MEMORY DUMP IMAGE
(2)    4/      0 : =2O                  RT.BP   EQU     2       ; RECORD TYPE - BASIC PROGRAM
(2)    5/      0 : =3O                  RT.CT   EQU     3       ; RECORD TYPE - COMPRESSED TEXT
(2)    6/      0 :                      
(2)    7/      0 :                      ;       BLOCK SIZE FOR INTER-PRODUCT COMMUNICATION
(2)    8/      0 :                      
(2)    9/      0 : =2.000O              BLKSIZ  EQU   512
(2)   10/      0 :                      
(1)   62/      0 :                      
(1)   63/      0 :                      ;       MACHINE INSTRUCTIONS
(1)   64/      0 :                      
(1)   65/      0 : =166O                MI.HLT  EQU     01110110B       ; HALT
(1)   66/      0 : =311O                MI.RET  EQU     11001001B       ; RETURN
(1)   67/      0 : =333O                MI.IN   EQU     11011011B       ; INPUT
(1)   68/      0 : =323O                MI.OUT  EQU     11010011B       ; OUTPUT
(1)   69/      0 : =72O                 MI.LDA  EQU     00111010B       ; LDA
(1)   70/      0 : =346O                MI.ANI  EQU     11100110B       ; ANI
(1)   71/      0 : =21O                 MI.LXID EQU     00010001B       ; LXI D
(1)   72/      0 : =303O                MI.JMP  EQU     11000011B       ; JMP
(1)   73/      0 : =335O                MI.LDXA EQU     11011101B       ; LD IX,  (BYTE A)
(1)   74/      0 : =41O                 MI.LDXB EQU     00100001B       ; LD IX,  (BYTE B)
(1)   75/      0 : =375O                MI.LDYA EQU     11111101B       ; LD IY,  (BYTE A)
(1)   76/      0 : =41O                 MI.LDYB EQU     00100001B       ; LD IY,  (BYTE B)
(1)   77/      0 : =10O                 MI.EXAF EQU     00001000B       ; EX AF,AF'
(1)   78/      0 : =335O                MI.JIXA EQU     11011101B       ; JP (IX)  (BYTE A)
(1)   79/      0 : =351O                MI.JIXB EQU     11101001B       ; JP (IX)  (BYTE B)
(1)   80/      0 : =375O                MI.JIYA EQU     11111101B       ; JP (IY)  (BYTE A)
(1)   81/      0 : =351O                MI.JIYB EQU     11101001B       ; JP (IY)  (BYTE B)
(1)   82/      0 :                      
(1)   83/      0 :                      ;       USER OPTION BITS
(1)   84/      0 :                      ;
(1)   85/      0 :                      ;       THESE BITS ARE IN SELL MFLAG.
(1)   86/      0 :                      ;
(1)   87/      0 :                      
(1)   88/      0 : =200O                UO.HLT  EQU     10000000B       ; DISABLE HALT PROCESSING
(1)   89/      0 : =100O                UO.NFR  EQU     CB.CLI          ; NO REFRESH OF FRONT PANEL
(1)   90/      0 : =2O                  UO.DDU  EQU     00000010B       ; DISABLE DISPLAY UPDATE
(1)   91/      0 : =1O                  UO.CLK  EQU     00000001B       ; ALLOW PRIVATE INTERRUPT PROCESSING
(1)   92/      0 :                      
     111/      0 :                      
     112/      0 :                              INCLUDE h17def.asm      ; EQUATES FOR H17 BOOT ROM
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm(h17def.asm) - Page 5 - 2024-05-13 09:34:53 PM


(1)    1/      0 :                      ;       H17 CONTROL INFORMATION.
(1)    2/      0 :                      
(1)    3/      0 : =177O                DP.DC   EQU     07FH            ; DISK CONTROL PORT
(1)    4/      0 :                      
(1)    5/      0 : =1O                  DF.HD   EQU     00000001B       ; HOLE DETECT
(1)    6/      0 : =2O                  DF.T0   EQU     00000010B       ; TRACK 0 DETECT
(1)    7/      0 : =4O                  DF.WP   EQU     00000100B       ; WRITE PROTECT
(1)    8/      0 : =10O                 DF.SD   EQU     00001000B       ; SYNC DETECT
(1)    9/      0 :                      
(1)   10/      0 : =1O                  DF.WQ   EQU     00000001B       ; WRITE GATE ENABLE
(1)   11/      0 : =2O                  DF.DS0  EQU     00000010B       ; DRIVE SELECT 0
(1)   12/      0 : =4O                  DF.DS1  EQU     00000100B       ; DRIVE SELECT 1
(1)   13/      0 : =10O                 DF.DS2  EQU     00001000B       ; DRIVE SELECT 2
(1)   14/      0 : =20O                 DF.MO   EQU     00010000B       ; MOTOR ON (BOTH DRIVES)
(1)   15/      0 : =40O                 DF.DI   EQU     00100000B       ; DIRECTION (0=OUT)
(1)   16/      0 : =100O                DF.ST   EQU     01000000B       ; STEP COMMAND (ACTIVE HIGH)
(1)   17/      0 : =200O                DF.WR   EQU     10000000B       ; WRITE ENABLE RAM
(1)   18/      0 :                      
(1)   19/      0 :                      ;       DISK UART PORTS AND CONTROL FLAGS.
(1)   20/      0 :                      
(1)   21/      0 : =174O                UP.DP   EQU     07CH            ; DATA PORT
(1)   22/      0 : =175O                UP.FC   EQU     07DH            ; FILL CHARACTER
(1)   23/      0 : =175O                UP.ST   EQU     07DH            ; STATUS FLAGS
(1)   24/      0 : =176O                UP.SC   EQU     07EH            ; SYN CHARACTER (OUTPUT)
(1)   25/      0 : =176O                UP.SR   EQU     07EH            ; SYNC RESET (INPUT)
(1)   26/      0 :                      
(1)   27/      0 : =1O                  UF.RDA  EQU     00000001B       ; RECEIVE DATA AVAILABLE
(1)   28/      0 : =2O                  UF.ROR  EQU     00000010B       ; RECEIVER OVERRUN
(1)   29/      0 : =4O                  UF.RPE  EQU     00000100B       ; RECEIVER PARITY ERROR
(1)   30/      0 : =100O                UF.FCT  EQU     01000000B       ; FILL CHAR TRANSMITTED
(1)   31/      0 : =200O                UF.TB   EQU     10000000B       ; TRANSMITTER BUFFER EMPTY
(1)   32/      0 :                      
(1)   33/      0 :                      ;       CHARACTER DEFINITIONS
(1)   34/      0 :                      
(1)   35/      0 : =375O                C.DSYN  EQU     0FDH            ; PREFIX SYNC CHARACTER
(1)   36/      0 :                      
     113/      0 :                      
     114/      0 :                              INCLUDE h37def.asm      ; DEFINE H37 PARAMETERS
(1)    1/      0 :                      ;;      H37DEF - H37 DISK CONTROLLER DEFINITIONS
(1)    2/      0 :                      
(1)    3/      0 : =170O                DK.PORT EQU     170Q            ; BASE UART PORT
(1)    4/      0 :                      
(1)    5/      0 : =172O                FD.STAT EQU     DK.PORT+2       ; STATUS PORT
(1)    6/      0 : =172O                FD.CMD  EQU     DK.PORT+2       ; COMMAND PORT
(1)    7/      0 : =173O                FD.TRK  EQU     DK.PORT+3       ; TRACK REGISTER
(1)    8/      0 : =172O                FD.SEC  EQU     DK.PORT+2       ; SECTOR REGISTER
(1)    9/      0 : =173O                FD.DAT  EQU     DK.PORT+3       ; DATA PORT
(1)   10/      0 : =170O                DK.CON  EQU     DK.PORT         ; CONTROL PORT
(1)   11/      0 : =171O                DK.INT  EQU     DK.PORT+1       ; INTERFACE CONTROL
(1)   12/      0 :                      
(1)   13/      0 :                      ;;      COMMANDS SENT TO FD.CMD
(1)   14/      0 :                      
(1)   15/      0 : =0O                  FDC.RST EQU      00000000B      ; RESTORE
(1)   16/      0 : =20O                 FDC.SEK EQU      00010000B      ; SEEK TRACK IN FD.TRK
(1)   17/      0 : =40O                 FDC.STP EQU      00100000B      ; STEP IN SAME DIR AS LAST
(1)   18/      0 : =100O                FDC.STI EQU      01000000B      ; STEP IN
(1)   19/      0 : =140O                FDC.STO EQU      01100000B      ; STEP OUT
(1)   20/      0 :                      
(1)   21/      0 : =200O                FDC.RDS EQU      10000000B      ; READ SECTOR
(1)   22/      0 : =240O                FDC.WTS EQU      10100000B      ; WRITE SECTOR
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm(h37def.asm) - Page 6 - 2024-05-13 09:34:53 PM


(1)   23/      0 :                      
(1)   24/      0 : =300O                FDC.RDA EQU      11000000B      ; READ ADDRESS
(1)   25/      0 : =340O                FDC.RDT EQU      11100000B      ; READ TRACK
(1)   26/      0 : =360O                FDC.WTT EQU      11110000B      ; WRITE TRACK
(1)   27/      0 :                      
(1)   28/      0 : =320O                FDC.FI  EQU      11010000B      ; FORCE INTERRUPT
(1)   29/      0 :                      
(1)   30/      0 :                      ;;      OPTIONS FOR FDC.RST THRU FDC.STO
(1)   31/      0 :                      
(1)   32/      0 : =20O                 FDF.UTR EQU     00010000B       ; UPDATE TRACK REGISTER
(1)   33/      0 : =10O                 FDF.HLB EQU     00001000B       ; LOAD HEAD AT BEGINNING
(1)   34/      0 : =4O                  FDF.VRF EQU     00000100B       ; VERIFY DESTINATION
(1)   35/      0 :                      
(1)   36/      0 : =0O                  FDF.S6  EQU     00000000B       ; STEP  6 MS
(1)   37/      0 : =1O                  FDF.S12 EQU     00000001B       ; STEP 12 MS
(1)   38/      0 : =2O                  FDF.S20 EQU     00000010B       ; STEP 20 MS
(1)   39/      0 : =3O                  FDF.S30 EQU     00000011B       ; STEP 30 MS
(1)   40/      0 :                      
(1)   41/      0 :                      ;;      OPTIONS FOR FDC.RDS THRU FDC.WTT
(1)   42/      0 :                      
(1)   43/      0 : =20O                 FDF.MRF EQU     00010000B       ; MULTI RECORD FLAG
(1)   44/      0 : =10O                 FDF.SLF EQU     00001000B       ; SECTOR LENGTH SHIFT RIGHT
(1)   45/      0 : =4O                  FDF.DLF EQU     00000100B       ; 15 (30) MS DELAY
(1)   46/      0 : =2O                  FDF.SS1 EQU     00000010B       ; SELECT SIDE 1
(1)   47/      0 : =1O                  FDF.DDM EQU     00000001B       ; DELETED DATA MARK
(1)   48/      0 :                      
(1)   49/      0 :                      ;;      STATUS BIT DEFINITIONS
(1)   50/      0 :                      
(1)   51/      0 : =200O                FDS.NRD EQU     10000000B       ; NOT READY
(1)   52/      0 : =100O                FDS.WPV EQU     01000000B       ; WRITE PROTECT
(1)   53/      0 : =40O                 FDS.HLD EQU     00100000B       ; HEAD IS LOADED
(1)   54/      0 : =40O                 FDS.RTE EQU     00100000B       ; RECORD TYPE
(1)   55/      0 : =40O                 FDS.WTF EQU     00100000B       ; WRITE FAULT
(1)   56/      0 : =20O                 FDS.SEK EQU     00010000B       ; SEEK ERROR
(1)   57/      0 : =20O                 FDS.RNF EQU     00010000B       ; RECORD NOT FOUND
(1)   58/      0 : =10O                 FDS.CRC EQU     00001000B       ; CRC ERROR
(1)   59/      0 : =4O                  FDS.TK0 EQU     00000100B       ; OVER TRACK ZERO
(1)   60/      0 : =4O                  FDS.LDT EQU     00000100B       ; LOST DATA
(1)   61/      0 : =2O                  FDS.IND EQU     00000010B       ; INDEX PULSE
(1)   62/      0 : =2O                  FDS.DRQ EQU     00000010B       ; DATA REQUEST
(1)   63/      0 : =1O                  FDS.BSY EQU     00000001B       ; BUSY
(1)   64/      0 :                      
(1)   65/      0 :                      ;       BITS SET IN DK.CON
(1)   66/      0 :                      
(1)   67/      0 : =1O                  CON.EI  EQU     00000001B       ; ENABLE INT-REQ
(1)   68/      0 : =2O                  CON.DRQ EQU     00000010B       ; ENABLE DRQ INTERRUPT
(1)   69/      0 : =4O                  CON.MFM EQU     00000100B       ; SET MFM RECORDING
(1)   70/      0 : =10O                 CON.MO  EQU     00001000B       ; ALL MOTORS ON
(1)   71/      0 : =20O                 CON.DS0 EQU     00010000B       ; DRIVE 0
(1)   72/      0 : =40O                 CON.DS1 EQU     00100000B       ; DRIVE 1
(1)   73/      0 :                      
(1)   74/      0 :                      ;       Bits set to select alternate registers
(1)   75/      0 :                      
(1)   76/      0 : =0O                  CON.CD  EQU     00000000B       ; SELECT COMMAND/DATA
(1)   77/      0 : =1O                  CON.ST  EQU     00000001B       ; SELECT SECTOR/TRACK
(1)   78/      0 :                      
     115/      0 :                      
     116/      0 :                              INCLUDE z47def.asm      ; DEFINE Z47 EQUATES
(1)    1/      0 :                      ;;      H47DEF - H47 Constant Definitions
(1)    2/      0 :                      ;
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm(z47def.asm) - Page 7 - 2024-05-13 09:34:53 PM


(1)    3/      0 :                      ;       Z80 Instructions
(1)    4/      0 :                      
(1)    5/      0 : =242.355O            M.INI   EQU     10100010B*256+11101101B ; INI Instruction
(1)    6/      0 : =243.355O            M.OUTI  EQU     10100011B*256+11101101B ; OUTI Instruction
(1)    7/      0 :                      
(1)    8/      0 :                      
(1)    9/      0 :                      ;
(1)   10/      0 :                      ;       DISK INTERFACE CONSTANTS
(1)   11/      0 :                      ;
(1)   12/      0 : =170O                D.STA   EQU     170Q            ; INTERFACE STATUS PORT
(1)   13/      0 : =171O                D.DAT   EQU     D.STA+1         ; INTERFACE DATA PORT
(1)   14/      0 :                      ;
(1)   15/      0 : =1O                  S.ERR   EQU     00000001B       ; ERROR BIT
(1)   16/      0 : =40O                 S.DON   EQU     00100000B       ; DONE
(1)   17/      0 : =100O                S.IEN   EQU     01000000B       ; INTERRUPT ENABLE
(1)   18/      0 : =200O                S.DTR   EQU     10000000B       ; DATA TRANSFER REQUEST
(1)   19/      0 :                      ;
(1)   20/      0 : =2O                  S.SW0   EQU     00000010B       ; DIP SWITCH 0
(1)   21/      0 : =4O                  S.SW1   EQU     00000100B       ; DIP SWITCH 1
(1)   22/      0 : =10O                 S.SW2   EQU     00001000B       ; DIP SWITCH 2
(1)   23/      0 : =20O                 S.SW3   EQU     00010000B       ; DIP SWITCH 3
(1)   24/      0 :                      ;
(1)   25/      0 : =2O                  W.RES   EQU     00000010B       ; RESET COMMAND
(1)   26/      0 :                      
(1)   27/      0 :                      ;;      STATUS BYTE FLAGS
(1)   28/      0 :                      ;
(1)   29/      0 :                      
(1)   30/      0 : =200O                SB.UNR  EQU     10000000B       ; UNIT NOT READY
(1)   31/      0 : =100O                SB.WPD  EQU     01000000B       ; WRITE PROTECTED DRIVE
(1)   32/      0 : =40O                 SB.DLD  EQU     00100000B       ; DELETED DATA
(1)   33/      0 : =20O                 SB.NRF  EQU     00010000B       ; NO RECORD FOUND
(1)   34/      0 : =10O                 SB.CRC  EQU     00001000B       ; CRC ERROR
(1)   35/      0 : =4O                  SB.LTD  EQU     00000100B       ; LATE DATA
(1)   36/      0 : =2O                  SB.ILC  EQU     00000010B       ; ILLEGAL COMMAND
(1)   37/      0 : =1O                  SB.BTO  EQU     00000001B       ; BAD TRACK OVERFLOW
(1)   38/      0 :                      
(1)   39/      0 :                      ;       AUXILIARY STATUS BYTE FLAGS
(1)   40/      0 :                      ;
(1)   41/      0 : =100O                AS.0DD  EQU     01000000B       ; TRACK 0 DOUBLE DENSITY
(1)   42/      0 : =40O                 AS.1DD  EQU     00100000B       ; TRACK 1-76 DOUBLE DENSITY
(1)   43/      0 : =20O                 AS.S1A  EQU     00010000B       ; SIDE 1 AVAILABLE
(1)   44/      0 : =3O                  AS.SLM  EQU     00000011B       ; SECTOR LENGTH MASK
(1)   45/      0 :                      
(1)   46/      0 :                      ;       DISK COMMANDS
(1)   47/      0 :                      ;
(1)   48/      0 :                              ORG     0
(1)   49/      0 :                      DD.BOOT DS      1               ; BOOT
(1)   50/      1 :                      DD.RST  DS      1               ; READ CONTROLLER STATUS
(1)   51/      2 :                      DD.RAS  DS      1               ; READ AUX. STATUS
(1)   52/      3 :                      DD.LSC  DS      1               ; LOAD SECTOR COUNT
(1)   53/      4 :                      DD.RAD  DS      1               ; READ ADDR. OF LAST SECTOR ADDRESSED
(1)   54/      5 :                      DD.REA  DS      1               ; READ SECTORS
(1)   55/      6 :                      DD.WRI  DS      1               ; WRITE SECTORS
(1)   56/      7 :                      DD.REAB DS      1               ; READ SECTORS BUFFERED
(1)   57/     10 :                      DD.WRIB DS      1               ; WRITE SECTORS BUFFERED
(1)   58/     11 :                      DD.WRD  DS      1               ; WRITE SECTORS & DELETE
(1)   59/     12 :                      DD.WRDB DS      1               ; WRITE SECTORS BUFFERED & DELETE
(1)   60/     13 :                      DD.CPY  DS      1               ; COPY
(1)   61/     14 :                      DD.FRM0 DS      1               ; FORMAT IBM SD
(1)   62/     15 :                      DD.FRM1 DS      1               ; FORMAT     SD
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm(z47def.asm) - Page 8 - 2024-05-13 09:34:53 PM


(1)   63/     16 :                      DD.FRM2 DS      1               ; FORMAT IBM DD
(1)   64/     17 :                      DD.FRM3 DS      1               ; FORMAT     DD
(1)   65/     20 :                      DD.RRDY DS      1               ; READ READY
(1)   66/     21 :                      
(1)   67/     21 :                      ;;      Special De-Bug functions
(1)   68/     21 :                      ;
(1)   69/     21 :                      
(1)   70/     20 :                              ORG     010H
(1)   71/     20 :                      DD.SPF0 DS      1               ; SPECIAL FUNCTION 0
(1)   72/     21 :                      DD.SPF1 DS      1               ; SPECIAL FUNCTION 1
(1)   73/     22 :                      DD.SPF2 DS      1               ; SPECIAL FUNCTION 2
(1)   74/     23 :                      DD.SPF3 DS      1               ; SPECIAL FUNCTION 3
(1)   75/     24 :                      DD.SPF4 DS      1               ; SPECIAL FUNCTION 4
(1)   76/     25 :                      DD.SPF5 DS      1               ; SPECIAL FUNCTION 5
(1)   77/     26 :                      
(1)   78/     26 :                      ;;      Special Heath Functions
(1)   79/     26 :                      ;
(1)   80/     26 :                      
(1)   81/    200 :                              ORG     080H
(1)   82/    200 :                      DD.SDC  DS      1               ; SET DRIVE CHARACTERISTIC
(1)   83/    201 :                      DD.ST   DS      1               ; SEEK TO TRACK
(1)   84/    202 :                      DD.DS   DS      1               ; DISK STATUS
(1)   85/    203 :                      DD.RDL  DS      1               ; READ LOGICAL
(1)   86/    204 :                      DD.WRL  DS      1               ; WRITE LOGICAL
(1)   87/    205 :                      DD.RDBL DS      1               ; READ BUFFERED LOGICAL
(1)   88/    206 :                      DD.WTBL DS      1               ; WRITE BUFFERED LOGICAL
(1)   89/    207 :                      DD.WTDL DS      1               ; WRITE DELETED DATA LOGICAL
(1)   90/    210 :                      DD.WDLB DS      1               ; WRITE BUFFERED DELETED DATA LOGICAL
(1)   91/    211 :                      
(1)   92/    211 :                      ;;      USEFUL FLAGS
(1)   93/    211 :                      ;
(1)   94/    211 :                      
(1)   95/    211 : =0O                  UNT.0   EQU     00000000B       ; UNIT 0
(1)   96/    211 : =40O                 UNT.1   EQU     00100000B       ; UNIT 1
(1)   97/    211 : =100O                UNT.2   EQU     01000000B       ; UNIT 2
(1)   98/    211 : =140O                UNT.3   EQU     01100000B       ; UNIT 3
(1)   99/    211 :                      
(1)  100/    211 : =140O                UNT.M   EQU     01100000B       ; Unit mask
(1)  101/    211 :                      
(1)  102/    211 :                      
(1)  103/    211 :                      
(1)  104/    211 : =0O                  SID.0   EQU     00000000B       ; Side: 0
(1)  105/    211 : =200O                SID.1   EQU     10000000B       ; Side: 1
(1)  106/    211 :                      
(1)  107/    211 : =200O                SID.M   EQU     10000000B       ; Side Mask
(1)  108/    211 :                      
(1)  109/    211 :                      
(1)  110/    211 : =37O                 SEC.M   EQU     00011111B       ; Track Mask
(1)  111/    211 :                      
(1)  112/    211 :                      
(1)  113/    211 :                      
(1)  114/    211 : =4.000O              SSIZ.M  EQU     1024            ; Maximum Sector Size
(1)  115/    211 :                      
(1)  116/    211 :                      
(1)  117/    211 : =1.000O              C.256   EQU     256             ; SECTOR SIZE = 256 BYTES
(1)  118/    211 : =200O                C.128   EQU     128             ; SECTOR SIZE
(1)  119/    211 : =32O                 C.26    EQU     26
(1)  120/    211 :                      
     117/    211 :                      
     118/    211 :                              INCLUDE h67def.asm      ; DEFINE H67 PARAMETERS
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm(h67def.asm) - Page 9 - 2024-05-13 09:34:53 PM


(1)    1/    211 :                      ;;      H67 Disk Controller Definitions
(1)    2/    211 :                      ;
(1)    3/    211 :                      
(1)    4/    211 :                      ;;      Register addresses
(1)    5/    211 :                      ;
(1)    6/    211 :                      
(1)    7/    211 : =170O                BASE    EQU     170Q            ; Controller base address
(1)    8/    211 :                      
(1)    9/    211 : =0O                  RI.DAT  EQU     0               ; Data In/Out (Read/Write)
(1)   10/    211 : =1O                  RI.CON  EQU     1               ; Control (write Only)
(1)   11/    211 : =1O                  RI.BST  EQU     1               ; Bus Status (Read Only)
(1)   12/    211 :                      
(1)   13/    211 :                      ;       Control Register Definition
(1)   14/    211 :                      
(1)   15/    211 : =100O                BC.SEL  EQU     01000000B       ; Select and data bit 0
(1)   16/    211 : =40O                 BC.IE   EQU     00100000B       ; Interrupt Enable
(1)   17/    211 : =20O                 BC.RST  EQU     00010000B       ; Reset
(1)   18/    211 : =2O                  BC.EDT  EQU     00000010B       ; Enable Data
(1)   19/    211 :                      
(1)   20/    211 :                      ;       Bus Status Register Definition
(1)   21/    211 :                      
(1)   22/    211 : =200O                BS.REQ  EQU     10000000B       ; Data Transfer Request
(1)   23/    211 : =100O                BS.DTD  EQU     01000000B       ; Data Transfer Direction
(1)   24/    211 : =0O                  BS.IN   EQU     00000000B       ;  Data to Host
(1)   25/    211 : =100O                BS.OUT  EQU     01000000B       ;  Data to Controller
(1)   26/    211 : =40O                 BS.LMB  EQU     00100000B       ; Last byte in data/command string
(1)   27/    211 : =20O                 BS.MTY  EQU     00010000B       ; Message type
(1)   28/    211 : =0O                  BS.DAT  EQU     00000000B       ;  Data
(1)   29/    211 : =20O                 BS.COM  EQU     00010000B       ;  Command
(1)   30/    211 : =10O                 BS.BSY  EQU     00001000B       ; Busy
(1)   31/    211 : =4O                  BS.INT  EQU     00000100B       ; Interrupt Pending
(1)   32/    211 : =2O                  BS.PE   EQU     00000010B       ; Parity Error
(1)   33/    211 : =1O                  BS.HID  EQU     00000001B       ; Hardware Identification
(1)   34/    211 :                      
(1)   35/    211 :                      ;       Status Byte Definitions
(1)   36/    211 :                      
(1)   37/    211 : =140O                ST.LUN  EQU     01100000B       ; Logical Unit
(1)   38/    211 : =34O                 ST.SPR  EQU     00011100B       ; Spare
(1)   39/    211 : =2O                  ST.ERR  EQU     00000010B       ; Error
(1)   40/    211 : =1O                  ST.PER  EQU     00000001B       ; Parity Error
(1)   41/    211 :                      
(1)   42/    211 :                      ;;      Commands
(1)   43/    211 :                      ;
(1)   44/    211 :                      
(1)   45/    211 : =340O                CLASSM  EQU     11100000B       ; Class Mask
(1)   46/    211 :                      
(1)   47/    211 : =0O                  CLASS0  EQU     0000000B        ; Class 0
(1)   48/    211 : =20O                 CLASS1  EQU     0010000B        ; Class 1
(1)   49/    211 : =140O                CLASS6  EQU     1100000B        ; Class 6
(1)   50/    211 :                      
(1)   51/    211 : =37O                 OPCODM  EQU     00011111B       ; Op-code Mask
(1)   52/    211 : =140O                LUNM    EQU     01100000B       ; Logical Unit Mask
(1)   53/    211 : =37O                 LSA.2   EQU     00011111B       ; Logical Sector Address (2)
(1)   54/    211 :                      
(1)   55/    211 :                      ;       Class 0 Commands
(1)   56/    211 :                      
(1)   57/    211 : =0O                  D.TDR   EQU     CLASS0+0        ; Test drive ready
(1)   58/    211 : =1O                  D.REC   EQU     CLASS0+1        ; Recalibrate drive
(1)   59/    211 : =2O                  D.RSY   EQU     CLASS0+2        ; Request Syndrome
(1)   60/    211 : =3O                  D.RSE   EQU     CLASS0+3        ; Request Sense
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm(h67def.asm) - Page 10 - 2024-05-13 09:34:53 PM


(1)   61/    211 : =4O                  D.FOR   EQU     CLASS0+4        ; Format Drive
(1)   62/    211 : =5O                  D.CTF   EQU     CLASS0+5        ; Check track format
(1)   63/    211 : =6O                  D.FT    EQU     CLASS0+6        ; Format Track
(1)   64/    211 : =7O                  D.FBS   EQU     CLASS0+7        ; Format bad sector
(1)   65/    211 : =10O                 D.REA   EQU     CLASS0+8        ; Read
(1)   66/    211 : =11O                 D.WPS   EQU     CLASS0+9        ; Write protect the sector
(1)   67/    211 : =12O                 D.WRI   EQU     CLASS0+10       ; Write
(1)   68/    211 : =13O                 D.SEK   EQU     CLASS0+11       ; Seek
(1)   69/    211 :                      
(1)   70/    211 :                      ;       Class 1 Commands
(1)   71/    211 :                      
(1)   72/    211 : =20O                 D.CPB   EQU     CLASS1+0        ; Copy block
(1)   73/    211 :                      
(1)   74/    211 :                      ;       Class 6 Commands
(1)   75/    211 :                      
(1)   76/    211 : =140O                D.FFD   EQU     CLASS6+0        ; Format floppy disk
(1)   77/    211 :                      
(1)   78/    211 :                      ;       Type 0 error codes (Drive error Codes)
(1)   79/    211 :                      
(1)   80/    211 : =0O                  TO.NST  EQU     0               ; No status
(1)   81/    211 : =1O                  TO.NIS  EQU     1               ; No Index signal
(1)   82/    211 : =2O                  TO.NSC  EQU     2               ; No seek complete
(1)   83/    211 : =3O                  TO.WFT  EQU     3               ; Write fault
(1)   84/    211 : =4O                  TO.DNR  EQU     4               ; Drive not ready
(1)   85/    211 : =5O                  TO.DNS  EQU     5               ; Drive not selected
(1)   86/    211 : =6O                  TO.NT0  EQU     6               ; No track zero
(1)   87/    211 : =7O                  TO.MDS  EQU     7               ; Multi-drive selected
(1)   88/    211 :                      
(1)   89/    211 :                      ;       Type 1 error codes (data error codes)
(1)   90/    211 :                      
(1)   91/    211 : =0O                  TI.ID   EQU     0               ; ID Read Error
(1)   92/    211 : =1O                  TI.UDE  EQU     1               ; Uncorrectable data error
(1)   93/    211 : =2O                  TI.IDNF EQU     2               ; ID Address Mark not found
(1)   94/    211 : =3O                  TI.DMNF EQU     3               ; Data Address Mark Not Found
(1)   95/    211 : =4O                  TI.RNF  EQU     4               ; Record Not Found
(1)   96/    211 : =5O                  TI.SKE  EQU     5               ; Seek Error
(1)   97/    211 : =6O                  TI.DTE  EQU     6               ; DMA Time-out Error  (not used)
(1)   98/    211 : =7O                  TI.WP   EQU     7               ; Write protected
(1)   99/    211 : =10O                 TI.CDE  EQU     8               ; Correctable Data field error
(1)  100/    211 : =11O                 TI.BBF  EQU     9               ; Bad Block Found
(1)  101/    211 : =12O                 TI.FE   EQU     10              ; Format Error
(1)  102/    211 :                      
(1)  103/    211 :                      ;       Type 2 Error Codes (Command error codes)
(1)  104/    211 :                      
(1)  105/    211 : =0O                  T2.ILC  EQU     0               ; Illegal Command
(1)  106/    211 : =1O                  T2.IDA  EQU     1               ; Illegal Disk address
(1)  107/    211 : =2O                  T2.IFN  EQU     2               ; Illegal Function
(1)  108/    211 :                      
     119/    211 :                      
     120/    211 :                              INCLUDE hosequ.asm      ; HDOS EQUATES
(1)    1/    211 :                      ;       HDOS SYSTEM EQUIVALENCES.
(1)    2/    211 :                      ;
(1)    3/    211 :                      
(1)    4/    211 : =24.000O             S.GRT   EQU     12000Q          ; SYSTEM AREA FOR GRT0
(1)    5/    211 : =25.000O             S.GRT1  EQU     12400Q          ; SYSTEM AREA FOR GRT 1
(1)    6/    211 : =26.000O             S.GRT2  EQU     13000Q          ; SYSTEM AREA FOR GRT 2
(1)    7/    211 :                      
(1)    8/    211 : =30.000O             ROMBOOT EQU     14000Q          ; ROM BOOT ENTRY
(1)    9/    211 :                      
(1)   10/    211 :                      
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm(hosequ.asm) - Page 11 - 2024-05-13 09:34:53 PM


(1)   11/ 40.100 :                              ORG     20100Q          ; FREE SPACE FROM PAM-8
(1)   12/ 40.100 :                      
(1)   13/ 40.100 :                              DS      8               ; JUMP TO SYSTEM EXIT
(1)   14/ 40.110 :                      D.CON   DS      16              ; DISK CONSTANTS
(1)   15/ 40.130 : =40.130O             SYDD    EQU     $               ; SYSTEM DISK ENTRY POINT
(1)   16/ 40.130 :                      D.VEC   DS      24*3            ; SYSTEM ROM ENTRY VECTORS
(1)   17/ 40.240 :                      D.RAM   DS      31              ; SYSTEM ROM WORK AREA
(1)   18/ 40.277 :                      S.VAL   DS      36              ; SYSTEM VALUES
(1)   19/ 40.343 :                      S.INT   DS      115             ; SYSTEM INTERNAL WORK AREAS
(1)   20/ 41.126 :                              DS      16
(1)   21/ 41.146 :                      S.OVR   DS      2               ; STACK OVERFLOW WARNING
(1)   22/ 41.150 :                              DS      280             ; SYSTEM STACK
(1)   23/ 42.200 : =1.032O              STACKL  EQU     432Q            ; STACK SIZE
(1)   24/ 42.200 :                      
(1)   25/ 42.200 : =42.200O             STACK   EQU     $               ; LWA+1 SYSTEM STACK
(1)   26/ 42.200 : =42.200O             USERFWA EQU     $               ; USER FWA
(1)   27/ 42.200 :                      
     121/ 42.200 :                      
     122/ 42.200 :                              INCLUDE dirdef.asm
(1)    1/ 42.200 :                      ;;      DIRECTORY ENTRY FORMAT.
(1)    2/ 42.200 :                      
(1)    3/      0 :                              ORG     0
(1)    4/      0 :                      
(1)    5/      0 : =377O                DF.EMP  EQU     377Q            ; FLAGS ENTRY EMPTY
(1)    6/      0 : =376O                DF.CLR  EQU     376Q            ; FLAGS ENTRY EMPTY, REST OF DIR ALSO CLEAR
(1)    7/      0 :                      
(1)    8/      0 :                      DIR.NAM DS      8               ; NAME
(1)    9/     10 :                      DIR.EXT DS      3               ; EXTENSION
(1)   10/     13 :                      DIR.PRO DS      1               ; PROJECT
(1)   11/     14 :                      DIR.VER DS      1               ; VERSION
(1)   12/     15 : =15O                 DIRIDL  EQU     $               ; FILE IDENTIFICATION LENGTH
(1)   13/     15 :                      
(1)   14/     15 :                      DIR.CLU DS      1               ; CLUSTER FACTOR
(1)   15/     16 :                      DIR.FLG DS      1               ; FLAGS
(1)   16/     17 :                              DS      1               ; RESERVED
(1)   17/     20 :                      DIR.FGN DS      1               ; FIRST GROUP NUMBER
(1)   18/     21 :                      DIR.LGN DS      1               ; LAST GROUP NUMBER
(1)   19/     22 :                      DIR.LSI DS      1               ; LAST SECTOR INDEX (IN LAST GROUP)
(1)   20/     23 :                      DIR.CRD DS      2               ; CREATION DATE
(1)   21/     25 :                      DIR.ALD DS      2               ; LAST ALTERATION DATE
(1)   22/     27 :                      
(1)   23/     27 : =27O                 DIRELEN EQU     $               ; DIRECTORY ENTRY LENGTH
(1)   24/     27 :                      
     123/     27 :                      
     124/     27 :                              INCLUDE esint.asm
(1)    1/     27 :                      ;;      S.INT - SYSTEM INTERNAL WORKAREA DEFINITIONS
(1)    2/     27 :                      ;
(1)    3/     27 :                      ;       THESE CELLS ARE REFERENCED AS OVERLAYS AMD MAIN CODE AND
(1)    4/     27 :                      ;       MUST THEREFORE RESIDE IN FIXED LOW MEMORY.
(1)    5/     27 :                      
(1)    6/     27 :                      
(1)    7/ 40.343 :                              ORG     S.INT
(1)    8/ 40.343 :                      
(1)    9/ 40.343 :                      ;;      CONSOLE STATUS FLAGS
(1)   10/ 40.343 :                      
(1)   11/ 40.343 :                      S.CDB   DS      1               ; CONSOLE DESCRIPTOR BYTE
(1)   12/ 40.344 : =0O                  CDB.H85 EQU     00000000B
(1)   13/ 40.344 : =1O                  CDB.H84 EQU     00000001B       ; =0 IF H8-5, =1 IF H8-4
(1)   14/ 40.344 :                      S.BAUD  DS      2               ; [0-14]  H8-4 BAUD RATE, =0 IF H8-5
(1)   15/ 40.346 :                      ;                               ; [15]    =1 IF 2 STOP BITS
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm(esint.asm) - Page 12 - 2024-05-13 09:34:53 PM


(1)   16/ 40.346 :                      
(1)   17/ 40.346 :                      ;;      TABLE ADDRESS WORDS
(1)   18/ 40.346 :                      
(1)   19/ 40.346 :                      S.DLINK DS      2               ; ADDRESS OF DATA IN HDOS CODE
(1)   20/ 40.350 :                      S.OFWA  DS      2               ; FWA  OVERLAY  TABLE
(1)   21/ 40.352 :                      S.CFWA  DS      2               ; FWA  CHANNEL  TABLE
(1)   22/ 40.354 :                      S.DFWA  DS      2               ; FWA  DEVICE   TABLE
(1)   23/ 40.356 :                      S.RFWA  DS      2               ; FWA  RESIDENT HDOS CODE
(1)   24/ 40.360 :                      
(1)   25/ 40.360 :                      ;;      DEVICE DRIVER DELAYED LOAD FLAGS
(1)   26/ 40.360 :                      
(1)   27/ 40.360 :                      S.DDLDA DS      2               ; DRIVER LOAD ADDRESS (HIGH BYTE=0 IF NO LOAD PENDING)
(1)   28/ 40.362 :                      S.DDLEN DS      2               ; CODE LENGTH IN BYTES
(1)   29/ 40.364 :                      S.DDGRP DS      1               ; GROUP NUMBER FOR DRIVER
(1)   30/ 40.365 :                              DS      1               ; HOLD PLACE
(1)   31/ 40.366 :                      ;S.DDSEC DS     2               ; SECTOR NUMBER FOR DRIVER ( * OBSOLETE ! * )
(1)   32/ 40.366 :                      S.DDTA  DS      2               ; DEVICE'S ADDRESS IN DEVLST +DEV.RES
(1)   33/ 40.370 :                      S.DDOPC DS      1               ; OPEN OPCODE PENDING
(1)   34/ 40.371 :                      
(1)   35/ 40.371 :                      ;;      OVERLAY MANAGEMENT FLAGS
(1)   36/ 40.371 :                      
(1)   37/ 40.371 : =1O                  OVL.IN  EQU     00000001B       ; IN MEMORY
(1)   38/ 40.371 : =2O                  OVL.RES EQU     00000010B       ; PERMANENTLY RESIDENT
(1)   39/ 40.371 : =14O                 OVL.NUM EQU     00001100B       ; OVERLAY NUMBER MASK
(1)   40/ 40.371 : =200O                OVL.UCS EQU     10000000B       ; USER CODE SWAPPED FOR OVERLAY
(1)   41/ 40.371 :                      
(1)   42/ 40.371 :                      S.OVLFL DS      1               ; OVERLAY FLAG
(1)   43/ 40.372 :                      S.UCSF  DS      2               ; FWA SWAPPED USER CODE
(1)   44/ 40.374 :                      S.UCSL  DS      2               ; LENGTH SWAPPED USER CODE
(1)   45/ 40.376 :                      S.OVLS  DS      2               ; SIZE OF OVERLAY CODE
(1)   46/ 41.000 :                      S.OVLE  DS      2               ; ENTRY POINT OF OVERLAY CODE
(1)   47/ 41.002 :                      
(1)   48/ 41.002 :                      S.SSW   DS      2               ; SWAP AREA SECTOR NUMBER
(1)   49/ 41.004 :                      S.OSN   DS      2               ; OVERLAY SECTOR NUMBER
(1)   50/ 41.006 :                      
(1)   51/ 41.006 :                      ;       SYSCALL PROCESSING WORK AREAS
(1)   52/ 41.006 :                      
(1)   53/ 41.006 :                      S.CACC  DS      1               ; (ACC) UPON SYSCALL
(1)   54/ 41.007 :                      S.CODE  DS      1               ; SYSCALL INDEX IN PROGRESS
(1)   55/ 41.010 :                      
(1)   56/ 41.010 :                      ;       JUMPS TO ROUTINES IN RESIDENT HDOS CODE
(1)   57/ 41.010 :                      
(1)   58/ 41.010 : =41.010O             S.JUMPS EQU     $               ; START OF JUMP VECTORS
(1)   59/ 41.010 :                      S.SDD   DS      3               ; JUMP TO STAND-IN DEVICE DRIVER
(1)   60/ 41.013 :                      S.FASER DS      3               ; JUMP TO FATSERR (FATAL SYSTEM ERROR)
(1)   61/ 41.016 :                      S.DIREA DS      3               ; JUMP TO DIREAD (DISK FILE READ)
(1)   62/ 41.021 :                      S.FCI   DS      3               ; JUMP TO FCI (FETCH CHANNEL INFO)
(1)   63/ 41.024 :                      S.SCI   DS      3               ; JUMP TO SCI (STORE CHANNEL INFO)
(1)   64/ 41.027 :                      S.GUP   DS      3               ; JUMP TOP GUP (GET UNIT POINTER)
(1)   65/ 41.032 :                      
(1)   66/ 41.032 :                      S.MOUNT DS      1               ; <>0 IF THE SYSTEM DISK IS MOUNTED
(1)   67/ 41.033 :                      S.DCS   DS      1               ; DEFAULT CLUSTER SIZE-1
(1)   68/ 41.034 :                      
(1)   69/ 41.034 :                      S.BOOTF DS      1               ; BOOT FLAGS
(1)   70/ 41.035 : =1O                  BOOT.P  EQU     00000001B       ; EXECUTE PROLOGUE UPON BOOTUP
(1)   71/ 41.035 : =2O                  BOOT.SY EQU     00000010B       ; SY: Device Driver loaded                 /2.1b/
(1)   72/ 41.035 :                      
(1)   73/ 41.035 :                      ;       STACK VALUE SAVED FOR OVERLAY SYSCALLS
(1)   74/ 41.035 :                      
(1)   75/ 41.035 :                      S.OVSTK DS      2               ; VALUE OF SP UPON SYSCALLS USING OVERLAY
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm(esint.asm) - Page 13 - 2024-05-13 09:34:53 PM


(1)   76/ 41.037 :                      
(1)   77/ 41.037 :                              DS      1               ; RESERVED
(1)   78/ 41.040 :                      
(1)   79/ 41.040 :                      ;;      ACTIVE I/O AREA/
(1)   80/ 41.040 :                      ;
(1)   81/ 41.040 :                      ;       THE AIO.XXX AREA CONTAINS INFORMATION ABOUT THE I/O OPERATION
(1)   82/ 41.040 :                      ;       CURRENTLY BEING PERFORMED. THE INFORMATION IS OBTAINED FROM
(1)   83/ 41.040 :                      ;       THE CHANNEL TABLE, AND WILL BE RESTORED THERE WHEN DONE.
(1)   84/ 41.040 :                      ;
(1)   85/ 41.040 :                      ;       NORMALLY, THE AIO.XXX INFORMATION WOULD BE OBTAINED DIRECTLY
(1)   86/ 41.040 :                      ;       FROM VARIOUS SYSTEM TABLES VIA POINTER REGISTERS. SINCE THE
(1)   87/ 41.040 :                      ;       8080 HAS NO GOOD INDEXED ADDRESSING, THE DATA IS MANUALLY
(1)   88/ 41.040 :                      ;       COPIES INTO THE AIO.XXX CELLS BEFORE PROCESSING, AND
(1)   89/ 41.040 :                      ;       BACKDATED AFTER PROCESSING.
(1)   90/ 41.040 :                      
(1)   91/ 41.040 :                      AIO.VEC DS      3               ; JUMP INSTRUCTION
(1)   92/ 41.043 : =41.041O             AIO.DOA EQU     $-2             ; DEVICE DRIVER INDEX
(1)   93/ 41.043 :                      AIO.FLG DS      1               ; FLAG BYTE
(1)   94/ 41.044 :                      AIO.GRT DS      2               ; ADDRESS OF GROUP RESERV TABLE
(1)   95/ 41.046 :                      AIO.SPG DS      1               ; SECTORS PER GROUP
(1)   96/ 41.047 :                      AIO.CGN DS      1               ; CURRENT GROUP NUMBER
(1)   97/ 41.050 :                      AIO.CSI DS      1               ; CURRENT SECTOR INDEX
(1)   98/ 41.051 :                      AIO.LGN DS      1               ; LAST GROUP NUMBER
(1)   99/ 41.052 :                      AIO.LSI DS      1               ; LAST SECTOR INDEX
(1)  100/ 41.053 :                      AIO.DTA DS      2               ; DEVICE TABLE ADDRESS
(1)  101/ 41.055 :                      AIO.DES DS      2               ; DIRECTORY SECTOR
(1)  102/ 41.057 :                      AIO.DEV DS      2               ; DEVICE CODE
(1)  103/ 41.061 :                      AIO.UNI DS      1               ; UNIT NUMBER (0-9)
(1)  104/ 41.062 :                      
(1)  105/ 41.062 :                      AIO.DIR DS      DIRELEN         ; DIRECTORY ENTRY
(1)  106/ 41.111 :                      
(1)  107/ 41.111 :                      AIO.CNT DS      1               ; SECTOR COUNT
(1)  108/ 41.112 :                      AIO.EOM DS      1               ; END OF MEDIA FLAG
(1)  109/ 41.113 :                      AIO.EOF DS      1               ; END OF FILE FLAG
(1)  110/ 41.114 :                      AIO.TFP DS      2               ; TEMP FILE POINTERS
(1)  111/ 41.116 :                      AIO.CHA DS      2               ; ADDRESS OF CHANNEL BLOCK (IOC.DDA)
(1)  112/ 41.120 :                      
(1)  113/ 41.120 :                      
(1)  114/ 41.120 :                      
(1)  115/ 41.120 :                      S.BDA   DS      1               ; Boot Device address (Setup by ROM) /80.09.gc/
(1)  116/ 41.121 :                      S.SCR   DS      2               ; SYSTEM SCRATCH AREA ADDRESS
(1)  117/ 41.123 :                              DS      3
(1)  118/ 41.126 : (MACRO)                      ERRNZ   $-20526Q
(1)  118/ 41.126 : =>FALSE                      IF ($-20526Q) != 0
(1)  118/ 41.126 :                                ERROR Expression is not zero
(1)  118/ 41.126 : [118]                        ENDIF
(1)  119/ 41.126 :                      S.OSI   DS      1               ; Operating System ID             /2.1b/
(1)  120/ 41.127 :                      S.OSO   DS      2               ; Operating System Occurrance      /2.1b/
(1)  121/ 41.131 :                      S.OSZ   DS      3               ; Operating System Sector Zero    /2.1b/
(1)  122/ 41.134 :                      
     125/ 41.134 :                      
     126/ 41.134 :                              INCLUDE misc.asm        ; MISCELLANEOUS EQUATES FOR H17 BOOT ROM
(1)    1/ 41.134 :                      ;; MISCELLANEOUS EQUATES FROM H17 BOOT ROM.
(1)    2/ 41.134 :                      ;  REFER TO H17 BOOT ROM IF MORE INFORMATION DESIRED
(1)    3/ 41.134 :                      
(1)    4/ 41.134 : =36.235O             WHD     EQU     17235Q          ; WAIT FOR HOLE ROUTINE ENTRY POINT
(1)    5/ 41.134 : =36.271O             WNH     EQU     17271Q          ; WAIT FOR NO HOLE ROUTINE ENTRY POINT
(1)    6/ 41.134 :                      
(1)    7/ 41.134 : =130O                BOOTAL  EQU     130Q            ; NUMBER OF RAM TO CLEAR
(1)    8/ 41.134 : =37.132O             BOOTA   EQU     17532Q          ; RAM CLEAR START LOCATION
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm(misc.asm) - Page 14 - 2024-05-13 09:34:53 PM


(1)    9/ 41.134 : =30.252O             DMOVE   EQU     14252Q          ; MOVE DATA ROUTINE
(1)   10/ 41.134 : =37O                 D.RAML  EQU     37Q
(1)   11/ 41.134 : =31.212O             DZERO   EQU     14612Q          ; ZERO RAM ROUTINE
(1)   12/ 41.134 : =40.037O             UIVEC   EQU     20037Q          ; USER INTERRUPT VECTOR
(1)   13/ 41.134 : =34.031O             CLOCK17 EQU     16031Q          ; Z17 TIMER INTERRUPT HANDLER LOCATION
(1)   14/ 41.134 : =33.366O             R.ABORT EQU     15766Q          ; RESET Z17 ROUTINE LOCATION
(1)   15/ 41.134 : =34.077O             R.READ  EQU     16077Q          ; READ Z17 ROUTINE LOCATION
(1)   16/ 41.134 : =40.206O             D.SDP   EQU     20206Q          ; SET DEVICE PARAMETER RAM LOCATION
(1)   17/ 41.134 : =40.166O             D.SDT   EQU     20166Q          ; SEEK DESIRED TRACK
(1)   18/ 41.134 : =40.240O             D.TT    EQU     20240Q          ; TARGET TRACK BYTE
(1)   19/ 41.134 : =36.073O             SDP3    EQU     17073Q          ; SET DEVICE PARAMETER ENTRY
(1)   20/ 41.134 : =34.027O             EIXIT   EQU     16027Q          ; EI/RET LOCATION
(1)   21/ 41.134 : =12O                 ERPTCNT EQU     12Q             ; ERROR COUNT
(1)   22/ 41.134 : =40.264O             D.OECNT EQU     20264Q
(1)   23/ 41.134 :                      
     127/ 41.134 :                      
     128/ 41.134 :                              INCLUDE u8251.asm       ; DEFINE 8251 USART BITS
(1)    1/ 41.134 :                      ;       8251 USART BIT DEFINITIONS.
(1)    2/ 41.134 :                      ;
(1)    3/ 41.134 :                      
(1)    4/ 41.134 :                      ;       PORT ADDRESSES
(1)    5/ 41.134 :                      
(1)    6/ 41.134 : =0O                  UDR     EQU     0               ; DATA REGISTER IS EVEN
(1)    7/ 41.134 : =1O                  USR     EQU     1               ; STATUS REGISTER IS NEXT
(1)    8/ 41.134 :                      
(1)    9/ 41.134 : =372O                SC.UART EQU     372Q            ; CONSOLE USART ADDRESS (IFF 8251)
(1)   10/ 41.134 :                      
(1)   11/ 41.134 :                      
(1)   12/ 41.134 :                      ;       MODE INSTRUCTION CONTROL BITS.
(1)   13/ 41.134 :                      
(1)   14/ 41.134 : =100O                UMI.1B  EQU     01000000B       ; 1 STOP BIT
(1)   15/ 41.134 : =200O                UMI.HB  EQU     10000000B       ; 1 1/2 STOP BITS
(1)   16/ 41.134 : =300O                UMI.2B  EQU     11000000B       ; 2 STOP BITS
(1)   17/ 41.134 : =40O                 UMI.PE  EQU     00100000B       ; EVEN PARITY
(1)   18/ 41.134 : =20O                 UMI.PA  EQU     00010000B       ; USE PARITY
(1)   19/ 41.134 : =0O                  UMI.L5  EQU     00000000B       ; 5 BIT CHARACTERS
(1)   20/ 41.134 : =4O                  UMI.L6  EQU     00000100B       ; 6 BIT CHARACTERS
(1)   21/ 41.134 : =10O                 UMI.L7  EQU     00001000B       ; 7 BIT CHARACTERS
(1)   22/ 41.134 : =14O                 UMI.L8  EQU     00001100B       ; 8 BIT CHARACTERS
(1)   23/ 41.134 : =1O                  UMI.1X  EQU     00000001B       ; CLOCK X 1
(1)   24/ 41.134 : =2O                  UMI.16X EQU     00000010B       ; CLOCK X 16
(1)   25/ 41.134 : =3O                  UMI.64X EQU     00000011B       ; CLOCK X 64
(1)   26/ 41.134 :                      
(1)   27/ 41.134 :                      ;       COMMAND INSTRUCTION BITS.
(1)   28/ 41.134 :                      
(1)   29/ 41.134 : =100O                UCI.IR  EQU     01000000B       ; INTERNAL RESET
(1)   30/ 41.134 : =40O                 UCI.RO  EQU     00100000B       ; READER-ON CONTROL FLAG
(1)   31/ 41.134 : =20O                 UCI.ER  EQU     00010000B       ; ERROR RESET
(1)   32/ 41.134 : =4O                  UCI.RE  EQU     00000100B       ; RECEIVE ENABLE
(1)   33/ 41.134 : =2O                  UCI.IE  EQU     00000010B       ; ENABLE INTERRUPTS FLAG
(1)   34/ 41.134 : =1O                  UCI.TE  EQU     00000001B       ; TRANSMIT ENABLE
(1)   35/ 41.134 :                      
(1)   36/ 41.134 :                      ;       STATUS READ BITS.
(1)   37/ 41.134 :                      
(1)   38/ 41.134 : =40O                 USR.FE  EQU     00100000B       ; FRAMING ERROR
(1)   39/ 41.134 : =20O                 USR.OE  EQU     00010000B       ; OVERRUN ERROR
(1)   40/ 41.134 : =10O                 USR.PE  EQU     00001000B       ; PARITY ERROR
(1)   41/ 41.134 : =4O                  USR.TXE EQU     00000100B       ; TRANSMITTER EMPTY
(1)   42/ 41.134 : =2O                  USR.RXR EQU     00000010B       ; RECEIVER READY
(1)   43/ 41.134 : =1O                  USR.TXR EQU     00000001B       ; TRANSMITTER READY
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm(u8251.asm) - Page 15 - 2024-05-13 09:34:53 PM


(1)   44/ 41.134 :                      
     129/ 41.134 :                      
     130/ 41.134 :                              INCLUDE u8250.asm       ; DEFINE 8250 ACE BITS
(1)    1/ 41.134 :                      ;;      8250 UART CONTROL AND BIT DEFINITIONS.
(1)    2/ 41.134 :                      
(1)    3/ 41.134 : =350O                SC.ACE  EQU     350Q            ; SYSTEM CONSOLE PORT IF 8250 ACE
(1)    4/ 41.134 : =156O                AC.DLY  EQU     110             ; 220 MIL. SEC. DELAY FOR 8250
(1)    5/ 41.134 :                      
(1)    6/ 41.134 : =0O                  UR.RBR  EQU     0               ; RECEIVE BUFFER REGISTER (READ ONLY)
(1)    7/ 41.134 :                      
(1)    8/ 41.134 : =0O                  UR.THR  EQU     0               ; TRANSMITTER HOLDING REGISTER (WRITE ONLY)
(1)    9/ 41.134 :                      
(1)   10/ 41.134 : =0O                  UR.DLL  EQU     0               ; DIVISOR LATCH (LEAST SIGNIFICANT)
(1)   11/ 41.134 :                      
(1)   12/ 41.134 : =1O                  UR.DLM  EQU     1               ; DIVISOR LATCH (MOST SIGNIFICANT)
(1)   13/ 41.134 :                      
(1)   14/ 41.134 : =1O                  UR.IER  EQU     1               ; INTERRUPT ENABLE REGISTER
(1)   15/ 41.134 : =1O                  UC.EDA  EQU     00000001B       ;  ENABLE RECEIVED DATA AVAILABLE INTERRUPT
(1)   16/ 41.134 : =2O                  UC.TRE  EQU     00000010B       ;  ENABLE TRANSMIT HOLD REGISTER EMPTY INTERRUPT
(1)   17/ 41.134 : =4O                  UC.RSI  EQU     00000100B       ;  ENABLE RECEIVE STATUS INTERRUPT
(1)   18/ 41.134 : =10O                 UC.MSI  EQU     00001000B       ;  ENABLE MODEM STATUS INTERRUPT
(1)   19/ 41.134 :                      
(1)   20/ 41.134 : =2O                  UR.IIR  EQU     2               ; INTERRUPT IDENTIFICATION REGISTER
(1)   21/ 41.134 : =1O                  UC.IIP  EQU     00000001B       ;  INVERTED INTERRUPT PENDING (0 MEANS PENDING)
(1)   22/ 41.134 : =6O                  UC.IID  EQU     00000110B       ;  INTERRUPT ID
(1)   23/ 41.134 :                      
(1)   24/ 41.134 : =3O                  UR.LCR  EQU     3               ; LINE CONTROL REGISTER
(1)   25/ 41.134 : =0O                  UC.5BW  EQU     00000000B       ;  5 BIT WORDS
(1)   26/ 41.134 : =1O                  UC.6BW  EQU     00000001B       ;  6 BIT WORDS
(1)   27/ 41.134 : =2O                  UC.7BW  EQU     00000010B       ;  7 BIT WORDS
(1)   28/ 41.134 : =3O                  UC.8BW  EQU     00000011B       ;  8 BIT WORDS
(1)   29/ 41.134 : =4O                  UC.2SB  EQU     00000100B       ;  TWO STOP BITS SELECTED
(1)   30/ 41.134 : =10O                 UC.PEN  EQU     00001000B       ;  PARITY COMPUTATION ENABLED
(1)   31/ 41.134 : =20O                 UC.EPS  EQU     00010000B       ;  EVEN PARITY SELECT
(1)   32/ 41.134 : =40O                 UC.SKP  EQU     00100000B       ;  STICK PARITY
(1)   33/ 41.134 : =100O                UC.SB   EQU     01000000B       ;  SET BREAK
(1)   34/ 41.134 : =200O                UC.DLA  EQU     10000000B       ;  DIVIDER LATCH ACCESS
(1)   35/ 41.134 :                      
(1)   36/ 41.134 : =4O                  UR.MCR  EQU     4               ; MODEM CONTROL REGISTER
(1)   37/ 41.134 : =1O                  UC.DTR  EQU     00000001B       ;  DATA TERMINAL READY
(1)   38/ 41.134 : =2O                  UC.RTS  EQU     00000010B       ;  REQUEST TO SEN
(1)   39/ 41.134 : =4O                  UC.OU1  EQU     00000100B       ;  OUT 1
(1)   40/ 41.134 : =10O                 UC.OU2  EQU     00001000B       ;  OUT 2
(1)   41/ 41.134 : =20O                 UC.LOO  EQU     00010000B       ;  LOOP
(1)   42/ 41.134 :                      
(1)   43/ 41.134 : =5O                  UR.LSR  EQU     5               ; LINE STATUS REGISTER
(1)   44/ 41.134 : =1O                  UC.DR   EQU     00000001B       ;  DATA READY
(1)   45/ 41.134 : =2O                  UC.OR   EQU     00000010B       ;  OVERRUN
(1)   46/ 41.134 : =4O                  UC.PE   EQU     00000100B       ;  PARITY ERROR
(1)   47/ 41.134 : =10O                 UC.FE   EQU     00001000B       ;  FRAMING ERROR
(1)   48/ 41.134 : =20O                 UC.BI   EQU     00010000B       ;  BREAK INTERRUPT
(1)   49/ 41.134 : =40O                 UC.THE  EQU     00100000B       ;  TRANSMITTER HOLDING REGISTER EMPTY
(1)   50/ 41.134 : =100O                UC.TSE  EQU     01000000B       ;  TRANSMITTER SHIFT REGISTER EMPTY
(1)   51/ 41.134 :                      
(1)   52/ 41.134 : =6O                  UR.MSR  EQU     6               ; MODEM STATUS REGISTER
(1)   53/ 41.134 : =1O                  UC.DCS  EQU     00000001B       ;  DELTA CLEAR TO SEND
(1)   54/ 41.134 : =2O                  UC.DDR  EQU     00000010B       ;  DELTA DATA SET READY
(1)   55/ 41.134 : =4O                  UC.TER  EQU     00000100B       ;  TRAILING EDGE OF RING
(1)   56/ 41.134 : =10O                 UC.DRL  EQU     00001000B       ;  DELTA RECEIVE LINE SIGNAL DETECT
(1)   57/ 41.134 : =20O                 UC.CTS  EQU     00010000B       ;  CLEAR TO SEND
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm(u8250.asm) - Page 16 - 2024-05-13 09:34:53 PM


(1)   58/ 41.134 : =40O                 UC.DSR  EQU     00100000B       ;  DATA SET READY
(1)   59/ 41.134 : =100O                UC.RI   EQU     01000000B       ;  RING INDICATOR
(1)   60/ 41.134 : =200O                UC.RLS  EQU     10000000B       ;  RECEIVED LINE SIGNAL DETECT
(1)   61/ 41.134 :                      
     131/ 41.134 :                      
     132/ 41.134 :                      ;       INTERRUPT VECTORS.
     133/ 41.134 :                      ;
     134/ 41.134 :                      
     135/ 41.134 :                      ;       LEVEL 0 - RESET
     136/ 41.134 :                      ;
     137/ 41.134 :                      ;       THIS 'INTERRUPT' MAY NOT BE PROCESSED BY A USER PROGRAM.
     138/ 41.134 :                      
     139/      0 :                              ORG     00Q
     140/      0 :                      
     141/      0 : 303 000 004          INIT0   JMP     INIT0X          ; DO H88 EXTENSION OF INITIALIZATION
     142/      3 : 041 012 040          INIT0.0 LXI     H,PRSRAM+PRSL-1 ; (HL) = RAM DESTINATION FOR CODE
     143/      6 : 303 073 000                  JMP     INIT            ; INITIALIZE
     144/     11 :                      
     145/     11 :                      ;       ERRPL   INIT-1000Q      ; BYTE IN WORD 10A MUST BE 0
     146/     11 :                      
     147/     11 :                      ;       LEVEL 1 - CLOCK
     148/     11 :                      
     149/     11 : =10O                 INT1    EQU     10Q             ; INTERRUPT ENTRY POINT
     150/     11 :                      
     151/     11 : (MACRO)                      ERRNZ   $-11Q           ; INT0 TAKES UP ONE BYTE
     151/     11 : =>FALSE                      IF ($-11Q) != 0
     151/     11 :                                ERROR Expression is not zero
     151/     11 : [151]                        ENDIF
     152/     11 :                      
     153/     11 : 315 132 000                  CALL    SAVALL          ; SAVE USER REGISTERS
     154/     14 : 026 000                      MVI     D,0
     155/     16 : 303 201 000                  JMP     CLOCK           ; PROCESS CLOCK INTERRUPT
     156/     21 :                      ;       ERRPL   CLOCK-1000Q     ; EXTRA BYTE MUST BE 0
     157/     21 :                      
     158/     21 :                      ;       LEVEL 2 - SINGLE STEP
     159/     21 :                      ;
     160/     21 :                      ;       IF THIS INTERRUPT IS RECEIVED WHEN NOT IN MONITOR MODE,
     161/     21 :                      ;       THEN IT IS ASSUMED TO BE GENERATED BY A USER PROGRAM
     162/     21 :                      ;       (SINGLE STEPPING OR BREAKPOINTING). IN SUCH CASE, THE
     163/     21 :                      ;       USER PROGRAM IS ENTERED THROUGH (UIVEC+3)
     164/     21 :                      
     165/     21 : =20O                 INT2    EQU     20Q             ; LEVEL 2 ENTRY
     166/     21 :                      
     167/     21 : (MACRO)                      ERRNZ   $-21Q           ; INT1 TAKES EXTRA BYTE
     167/     21 : =>FALSE                      IF ($-21Q) != 0
     167/     21 :                                ERROR Expression is not zero
     167/     21 : [167]                        ENDIF
     168/     21 :                      
     169/     21 : 315 132 000                  CALL    SAVALL          ; SAVE REGISTERS
     170/     24 : 032                          LDAX    D               ; (A) = (CTLFLG)
     171/     25 :                      ;       SET     CTLFLG
     172/     25 : 303 244 001                  JMP     STPRTN          ; STEP RETURN
     173/     30 :                      
     174/     30 :                      ;       I/O INTERRUPT VECTORS.
     175/     30 :                      ;
     176/     30 :                      ;       INTERRUPTS 3 THROUGH 7 ARE AVAILABLE FOR GENERAL I/O USE.
     177/     30 :                      ;
     178/     30 :                      ;       THESE INTERRUPTS ARE NOT SUPPORTED BY MTR88, AND SHOULD
     179/     30 :                      ;       NEVER OCCUR UNLESS THE USER HAS SUPPLIED HANDLER ROUTINES
     180/     30 :                      ;       (THROUGH UIVEC).
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 17 - 2024-05-13 09:34:53 PM


     181/     30 :                      
     182/     30 :                              ORG     30Q
     183/     30 :                      
     184/     30 : 303 045 040          INT3    JMP     UIVEC+6         ; JUMP TO USER ROUTINE
     185/     33 :                      
     186/     33 : 102 061 064 062 102          DB      102Q,61Q,64Q,62Q,102Q ; HEATH PART NUMBER 444-142
     187/     40 :                      
     188/     40 :                              ORG     40Q
     189/     40 :                      
     190/     40 : 303 050 040          INT4    JMP     UIVEC+9         ; JUMP TO USER ROUTINE
     191/     43 :                      
     192/     43 : 044 122 116 102 044          DB      44Q,122Q,116Q,102Q,44Q ; SUPPORT CODE
     193/     50 :                      
     194/     50 :                              ORG     50Q
     195/     50 :                      
     196/     50 : 303 053 040          INT5    JMP     UIVEC+12        ; JUMP TO USER ROUTINE
     197/     53 :                      
     198/     53 :                      
     199/     53 :                      ;       DLY - DELAY TIME INTERVAL
     200/     53 :                      ;
     201/     53 :                      ;       ENTRY   (A) = MILLISECOND DELAY COUNT/2
     202/     53 :                      ;       EXIT    NONE
     203/     53 :                      ;       USES    A,F
     204/     53 :                      
     205/     53 : (MACRO)                      ERRNZ   $-53Q
     205/     53 : =>FALSE                      IF ($-53Q) != 0
     205/     53 :                                ERROR Expression is not zero
     205/     53 : [205]                        ENDIF
     206/     53 :                      
     207/     53 : 365                  DLY     PUSH    PSW             ; SAVE COUNT
     208/     54 : 257                          XRA     A               ; DONT SOUND HORN
     209/     55 : 303 143 002                  JMP     HRN0            ; PROCESS AS HORN
     210/     60 :                      
     211/     60 :                              ORG     60Q
     212/     60 :                      
     213/     60 : 303 056 040          INT6    JMP     UIVEC+15        ; JUMP TO USER ROUTINE
     214/     63 :                      
     215/     63 : 076 320              GO.     MVI     A,CB.SSI+CB.CLI+CB.SPK ; OFF MONITOR MODE LIGHT
     216/     65 : 303 235 001                  JMP     SST1            ; RETURN TO USER PROGRAM
     217/     70 :                      
     218/     70 :                              ORG     70Q
     219/     70 :                      
     220/     70 : 303 061 040          INT7    JMP     UIVEC+18        ; JUMP TO USER ROUTINE
     221/     73 :                      
     222/     73 :                      ;       INIT - INITIALIZE SYSTEM
     223/     73 :                      ;
     224/     73 :                      ;       INIT IS CALLED WHENEVER A HARDWARE MASTER-CLEAR IS INITIATED.
     225/     73 :                      ;
     226/     73 :                      ;       SETUP MTR88 CONTROL CELLS IN RAM.
     227/     73 :                      ;       DECODE HOW MUCH MEMORY EXISTS. SETUP STACKPOINTER, AND
     228/     73 :                      ;       ENTER THE MONITOR LOOP.
     229/     73 :                      ;
     230/     73 :                      ;       ENTRY   FROM MASTER CLEAR
     231/     73 :                      ;       EXIT    INTO MTR88 MAIN LOOP
     232/     73 :                      
     233/     73 : (MACRO)                      ERRNZ   $-73Q
     233/     73 : =>FALSE                      IF ($-73Q) != 0
     233/     73 :                                ERROR Expression is not zero
     233/     73 : [233]                        ENDIF
     234/     73 :                      
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 18 - 2024-05-13 09:34:53 PM


     235/     73 : 032                  INIT    LDAX    D               ; COPY *PRSROM* INTO RAM
     236/     74 : 167                          MOV     M,A             ; MOVE BYTE
     237/     75 : 053                          DCX     H               ; DECREMENT DESTINATION
     238/     76 : 034                          INR     E               ; INCREMENT SOURCE
     239/     77 : 302 073 000                  JNZ     INIT            ; IF NOT DONE
     240/    102 :                      
     241/    102 : =4.000O              SINCR   EQU     2000Q           ; SEARCH INCREMENT
     242/    102 :                      
     243/    102 : 026 004                      MVI     D,SINCR/256     ; (DE) = SEARCH INCREMENT
     244/    104 : 041 000 034                  LXI     H,START-SINCR   ; (HL) = FIRST RAM - SEARCH INCREMENT
     245/    107 :                      
     246/    107 :                      ;       DETERMINE MEMORY LIMIT
     247/    107 :                      
     248/    107 : 167                  INIT1   MOV     M,A             ; RESTORE VALUE READ
     249/    110 : 031                          DAD     D               ; INCREMENT TRIAL ADDRESS
     250/    111 : 176                          MOV     A,M             ; (A) = CURRENT MEMORY VALUE
     251/    112 : 065                          DCR     M               ; TRY TO CHANGE IT
     252/    113 : 276                          CMP     M
     253/    114 : 302 107 000                  JNZ     INIT1           ; IF MEMORY CHANGED
     254/    117 :                      
     255/    117 : 053                  INIT2   DCX     H
     256/    120 :                      
     257/    120 : 371                          SPHL                    ; SET STACKPOINTER = MEMORY LIMIT -1
     258/    121 :                      
     259/    121 : 345                          PUSH    H               ; SET *PC* VALUE ON STACK
     260/    122 : 041 322 000                  LXI     H,ERROR
     261/    125 : 345                          PUSH    H               ; SET 'RETURN ADDRESS'
     262/    126 :                      
     263/    126 : 000 000 000 000              DB      0,0,0,0         ; UNUSED BYTES
     264/    132 :                      
     265/    132 :                      ;       SAVALL - SAVE ALL REGISTERS ON STACK.
     266/    132 :                      ;
     267/    132 :                      ;       SAVALL IS CALLED WHEN AN INTERRUPT IS ACCEPTED, IN ORDER TO
     268/    132 :                      ;       SAVE THE CONTENTS OF THE REGISTERS ON THE STACK.
     269/    132 :                      ;
     270/    132 :                      ;       ENTRY   CALLED DIRECTLY FROM INTERRUPT ROUTINE
     271/    132 :                      ;       EXIT    ALL REGISTERS PUSHED ON STACK.
     272/    132 :                      ;               IF NO YET IN MONITOR MODE, REGPTR = ADDRESS OF REGISTERS
     273/    132 :                      ;               ON STACK.
     274/    132 :                      ;               (DE) = ADDRESS OF CTLFLG
     275/    132 :                      
     276/    132 : (MACRO)                      ERRMI   132Q-$
     276/    132 : =>FALSE                      IF (132Q-$) < 0
     276/    132 :                                ERROR Expression is negative
     276/    132 : [1.020]                      ENDIF
     277/    132 :                              ORG     132Q
     278/    132 : 343                  SAVALL  XTHL                    ; SET H,L ON STACK TOP
     279/    133 : 325                          PUSH    D
     280/    134 : 305                          PUSH    B
     281/    135 : 365                          PUSH    PSW
     282/    136 : 353                          XCHG                    ; (D,E) = RETURN ADDRESS
     283/    137 : 041 012 000                  LXI     H,10
     284/    142 : 071                          DAD     SP              ; (H,L) = ADDRESS OF USERS SP
     285/    143 :                      
     286/    143 :                      ;       REPLACE THE INSTRUCTIONS WITH A JUMP AROUND THE NMI VECTOR JUMP
     287/    143 :                      ;
     288/    143 :                      ;       PUSH    H               ; SET ON STACK AS REGISTER
     289/    143 :                      ;       PUSH    D               ; SET RETURN ADDRESS
     290/    143 :                      ;       LXI     D,CTLFLG
     291/    143 :                      ;       LDAX    D               ; (A) = CTLFLG
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 19 - 2024-05-13 09:34:53 PM


     292/    143 :                      
     293/    143 : 303 105 004                  JMP     SAVALLX         ; GO TO SAVALL EXTENSION
     294/    146 :                      
     295/    146 :                      ;       ENTRY POINT FOR THE Z80 NMI
     296/    146 :                      ;
     297/    146 :                      
     298/    146 : (MACRO)                      ERRNZ   $-66H           ; Z80 NMI ADDRESS
     298/    146 : =>FALSE                      IF ($-66H) != 0
     298/    146 :                                ERROR Expression is not zero
     298/    146 : [1.042]                      ENDIF
     299/    146 :                      
     300/    146 : 303 116 004          NMIENT  JMP     NMI
     301/    151 :                      
     302/    151 :                      ;       ERRNZ   SAVALLR-151Q    ; DO NOT CHANGE ORGANIZATION
     303/    151 :                      
     304/    151 : =151O                SAVALLR EQU     $               ; SAVALL EXTENSION RETURN ADDRESS
     305/    151 :                      
     306/    151 : 057                          CMA
     307/    152 : 346 060                      ANI     CB.MTL+CB.SSI   ; SAVE REGISTER ADDR IF USER OR SINGLE STEP
     308/    154 : 310                          RZ                      ; RETURN IF WAS INTERRUPT OF MONITOR LOOP
     309/    155 : 041 002 000                  LXI     H,2
     310/    160 : 071                          DAD     SP              ; (H,L) = ADDRESS OF 'STACKPTR' ON STACK
     311/    161 : 042 035 040                  SHLD    REGPTR
     312/    164 : 311                          RET
     313/    165 :                      
     314/    165 :                      ;       CUI - CHECK FOR USER INTERRUPT PROCESSING.
     315/    165 :                      ;
     316/    165 :                      ;       CUI IS CALLED TO SEE IF THE USER HAS SPECIFIED PROCESSING
     317/    165 :                      ;       FOR THE CLOCK INTERRUPT.
     318/    165 :                      
     319/    165 : (MACRO)                      ERRNZ   $-165Q
     319/    165 : =>FALSE                      IF ($-165Q) != 0
     319/    165 :                                ERROR Expression is not zero
     319/    165 : [1.063]                      ENDIF
     320/    165 :                      
     321/    165 :                      ;       SET     MFLAG           ; REFERENCE TO MFLAG
     322/    165 : 012                  CUI1    LDAX    B               ; (A) = MFLAG
     323/    166 : (MACRO)                      ERRNZ   UO.CLK-1        ; CODE ASSUMED = 01
     323/    166 : =>FALSE                      IF (UO.CLK-1) != 0
     323/    166 :                                ERROR Expression is not zero
     323/    166 : [1.067]                      ENDIF
     324/    166 : 017                          RRC
     325/    167 : 334 037 040                  CC      UIVEC           ; IF SPECIFIED, TRANSFER TO USER
     326/    172 :                      
     327/    172 :                      ;       RETURN TO PROGRAM FROM INTERRUPT.
     328/    172 :                      
     329/    172 : (MACRO)                      ERRNZ  $-172Q
     329/    172 : =>FALSE                      IF ($-172Q) != 0
     329/    172 :                                ERROR Expression is not zero
     329/    172 : [1.073]                      ENDIF
     330/    172 :                      
     331/    172 : 361                  INTXIT  POP     PSW             ; REMOVE FAKE 'STACK REGISTER'
     332/    173 : 361                          POP     PSW
     333/    174 : 301                          POP     B
     334/    175 : 321                          POP     D
     335/    176 : 341                          POP     H
     336/    177 : 373                          EI
     337/    200 : 311                          RET
     338/    201 :                      
     339/    201 :                      ;       CLOCK - PROCESS CLOCK INTERRUPT
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 20 - 2024-05-13 09:34:53 PM


     340/    201 :                      ;
     341/    201 :                      ;       CLOCK IS ENTERED WHENEVER A 2-MILLISECOND CLOCK INTERRUPT IS
     342/    201 :                      ;       PROCESSED.
     343/    201 :                      ;
     344/    201 :                      ;       TICCNT IS INCREMENTED EVERY INTERRUPT.
     345/    201 :                      
     346/    201 : (MACRO)                      ERRNZ   $-201Q
     346/    201 : =>FALSE                      IF ($-201Q) != 0
     346/    201 :                                ERROR Expression is not zero
     346/    201 : [1.090]                      ENDIF
     347/    201 :                      
     348/    201 : 052 033 040          CLOCK   LHLD    TICCNT
     349/    204 : 043                          INX     H
     350/    205 : 042 033 040                  SHLD    TICCNT          ; INCREMENT TICCOUNT
     351/    210 :                      
     352/    210 : 072 011 040                  LDA     CTLFLG          ; CLEAR CLOCK INTERRUPT FLIP-FLOP
     353/    213 : 323 360                      OUT     OP.CTL
     354/    215 :                      
     355/    215 :                      ;       EXIT CLOCK INTERRUPT.
     356/    215 :                      
     357/    215 : 001 011 040                  LXI     B,CTLFLG
     358/    220 : 012                          LDAX    B               ; (A) = CTLFLG
     359/    221 : 346 040                      ANI     CB.MTL
     360/    223 : 302 172 000                  JNZ     INTXIT          ; IF IN MONITOR MODE
     361/    226 : 013                          DCX     B
     362/    227 :                      ;       ERRNZ   CTLFLG-MFLAG-1
     363/    227 : 012                          LDAX    B               ; (A) = MFLAG
     364/    230 : (MACRO)                      ERRNZ   UO.HLT-200Q     ; ASSUME HIGH-ORDER
     364/    230 : =>FALSE                      IF (UO.HLT-200Q) != 0
     364/    230 :                                ERROR Expression is not zero
     364/    230 : [1.108]                      ENDIF
     365/    230 : 027                          RAL
     366/    231 : 332 270 000                  JC      CLK4            ; SKIP IT
     367/    234 :                      
     368/    234 :                      ;       NOT IN MONITOR MODE. CHECK FOR HALT
     369/    234 :                      
     370/    234 : 076 012                      MVI     A,10            ; (A) = INDEX OF *P* REG
     371/    236 : 315 052 003                  CALL    LRA.            ; LOCATE REGISTER ADDRESS
     372/    241 : 136                          MOV     E,M
     373/    242 : 043                          INX     H
     374/    243 : 126                          MOV     D,M             ; (D,E) = PC CONTENTS
     375/    244 : 033                          DCX     D
     376/    245 : 032                          LDAX    D
     377/    246 : 376 166                      CPI     MI.HLT          ; CHECK FOR HALT
     378/    250 : 302 165 000                  JNZ     CUI1
     379/    253 :                      
     380/    253 : 076 007                      MVI     A,A.BEL         ; DING BELL
     381/    255 : 315 302 003                  CALL    WCC
     382/    260 : 076 110                      MVI     A,'H'           ; "H" FOR HALT
     383/    262 : 315 302 003                  CALL    WCC
     384/    265 : 303 322 000                  JMP     ERROR
     385/    270 :                      
     386/    270 :                      ;       JZ      ERROR           ; IF HALT, BE IN MONITOR MODE
     387/    270 :                      
     388/    270 :                      ;       NONE OF THE ABOVE, SO ALLOW USER PROCESSING OF CLOCK INTERRUPT
     389/    270 :                      
     390/    270 : 303 165 000          CLK4    JMP     CUI1            ; ALLOW USER PROCESSING OF CLOCK
     391/    273 :                      
     392/    273 :                      
     393/    273 :                      ;       THIS IS ONLY A PORTION OF THE DYNAMIC RAM TEST!!
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 21 - 2024-05-13 09:34:53 PM


     394/    273 :                      ;
     395/    273 :                      ;       WAIT BEFORE MAKING ANOTHER LOOP
     396/    273 :                      
     397/    273 : 041 000 000          DYMEM6  LXI     H,0
     398/    276 : 053                  DYMEM7  DCX     H
     399/    277 : 174                          MOV     A,H
     400/    300 : 265                          ORA     L
     401/    301 : 302 276 000                  JNZ     DYMEM7          ; IF (B,C) NOT ZERO
     402/    304 :                      
     403/    304 : 303 167 007                  JMP     DYMEM4          ; TRY AGAIN BY INCREMENTING ONCE MORE
     404/    307 :                      
     405/    307 :                      ;       HAVE A FAILURE PRIOR TO REACHING END OF MEMORY!
     406/    307 :                      ;
     407/    307 : 353                  DYMEM9  XCHG
     408/    310 : 041 336 014                  LXI     H,MSG.ERR       ; DISPLAY ERROR MESSAGE
     409/    313 :                      
     410/    313 :                              CPU     Z80
     411/    313 : 335 041 160 011              LD      IX,DY9.3        ; RETURN ADDRESS
     412/    317 :                              CPU     8080
     413/    317 :                      
     414/    317 : 303 265 007                  JMP     DYMSG
     415/    322 :                      
     416/    322 :                      ;       ERROR - COMMAND ERROR.
     417/    322 :                      ;
     418/    322 :                      ;       ERROR IS CALLED AS A 'BAIL-OUT' ROUTINE.
     419/    322 :                      ;
     420/    322 :                      ;       IT RESETS THE OPERATIONAL MODE, AND RESTORES THE STACKPOINTER.
     421/    322 :                      ;
     422/    322 :                      ;       ENTRY   NONE
     423/    322 :                      ;       EXIT    TO HTR LOOP
     424/    322 :                      ;               CTLFLG SET
     425/    322 :                      ;               MFLAG CLEARED
     426/    322 :                      ;       USES    ALL
     427/    322 :                      
     428/    322 : (MACRO)                      ERRNZ   $-322Q
     428/    322 : =>FALSE                      IF ($-322Q) != 0
     428/    322 :                                ERROR Expression is not zero
     428/    322 : [1.172]                      ENDIF
     429/    322 :                      
     430/    322 : 041 010 040          ERROR   LXI     H,MFLAG
     431/    325 : 176                          MOV     A,M             ; (A) = MFLAG
     432/    326 : 346 275                      ANI     377Q-UO.DDU-UO.NFR ; RE-ENABLE DISPLAYS
     433/    330 : 167                          MOV     M,A             ; REPLACE
     434/    331 : 043                          INX     H
     435/    332 : 066 360                      MVI     M,CB.SSI+CB.MTL+CB.CLI+CB.SPK ; RESTORE *CTLFLG*
     436/    334 :                      ;       ERRNZ   CTLFLG-.MFLAG-1
     437/    334 : 373                          EI
     438/    335 : 052 035 040                  LHLD    REGPTR
     439/    340 : 371                          SPHL                    ; RESTORE STACK POINTER TO EMPTY STATE
     440/    341 : 315 136 002                  CALL    ALARM
     441/    344 :                      
     442/    344 :                      ;       MTR - MONITOR LOOP.
     443/    344 :                      ;
     444/    344 :                      
     445/    344 : (MACRO)                      ERRNZ   $-344Q
     445/    344 : =>FALSE                      IF ($-344Q) != 0
     445/    344 :                                ERROR Expression is not zero
     445/    344 : [1.189]                      ENDIF
     446/    344 :                      
     447/    344 : 373                  MTR     EI
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 22 - 2024-05-13 09:34:53 PM


     448/    345 :                      
     449/    345 : 041 345 000          MTR1    LXI     H,MTR1
     450/    350 : 345                          PUSH    H               ; SET 'MTR1' AS RETURN ADDRESS
     451/    351 : 303 135 011                  JMP     CKAUTO          ; CHECK AUTO BOOT. IF NOT CONTROL BACK TO NEXT
     452/    354 : 315 100 006          MTR.15  CALL    TYPMSG          ; PRINT 'H:'
     453/    357 :                      
     454/    357 : 315 262 003          MTR.2   CALL    RCC             ; READ A CONSOLE CHARACTER
     455/    362 : 346 137                      ANI     01011111B       ; MAKE SURE ITS UPPER CASE TO MATCH TABLE
     456/    364 : 041 045 017                  LXI     H,MTRA          ; LOOK UP CHARACTER IN *MTRA*
     457/    367 : 006 012                      MVI     B,MTRAL         ; (B) = LENGTH OF TABLE
     458/    371 : 276                  MTR.3   CMP     M               ; SEE IF CHARACTER FROM CONSOLE = TABLE ENTRY
     459/    372 : 043                          INX     H               ; ML = ADDRESS
     460/    373 : 312 014 001                  JZ      MTR.4           ; IF EQUAL
     461/    376 :                      
     462/    376 : 043                          INX     H               ; POINT TO NEXT TABLE ENTRY
     463/    377 : 043                          INX     H
     464/  1.000 : 005                          DCR     B               ; SEE IF PAST END OF TABLE
     465/  1.001 : 302 371 000                  JNZ     MTR.3           ; IF NOT PAST
     466/  1.004 :                      
     467/  1.004 : 076 007                      MVI     A,A.BEL         ; ELSE, DING ERROR
     468/  1.006 : 315 302 003                  CALL    WCC
     469/  1.011 : 303 357 000                  JMP     MTR.2           ; TRY AGAIN
     470/  1.014 :                      
     471/  1.014 : 315 302 003          MTR.4   CALL    WCC             ; WRITE CHARACTER BACK TO CONSOLE
     472/  1.017 : 176                          MOV     A,M
     473/  1.020 : 043                          INX     H               ; GET MSB
     474/  1.021 : 146                          MOV     H,M
     475/  1.022 : 157                          MOV     L,A             ; (H,L) = ROUTINE ADDRESS
     476/  1.023 : 351                          PCHL                    ; GO TO ROUTINE
     477/  1.024 :                      
     478/  1.024 :                      ;;      GETBND1 - CONTINUATION OF GETBND
     479/  1.024 :                      ;
     480/  1.024 :                      
     481/  1.024 : 041 003 040          GETBND1 LXI     H,IOWRK+1
     482/  1.027 : 026 015                      MVI     D,A.CR
     483/  1.031 : 315 023 015                  CALL    IOA
     484/  1.034 :                      
     485/  1.034 : 052 002 040                  LHLD    IOWRK
     486/  1.037 : 115                          MOV     C,L
     487/  1.040 : 104                          MOV     B,H
     488/  1.041 : 321                          POP     D
     489/  1.042 : 341                          POP     H
     490/  1.043 : 311                          RET
     491/  1.044 :                      
     492/  1.044 :                      ;;      VIEW - VIEW MEMORY BLOCKS
     493/  1.044 :                      ;
     494/  1.044 :                      ;       VIEW START,STOP
     495/  1.044 :                      
     496/  1.044 : 041 113 002          VIEW    LXI     H,MSG.VEW
     497/  1.047 : 315 100 006                  CALL    TYPMSG
     498/  1.052 : 303 351 007                  JMP     VIEW3A          ; GET START IN DE, STOP IN BC
     499/  1.055 :                      
     500/  1.055 : 042 067 040          VIEW1   SHLD    BLKICW          ; SAVE START ADDRESS FOR ASCII STUFF
     501/  1.060 : 303 066 002                  JMP     VIEW2
     502/  1.063 :                      
     503/  1.063 :                      ;       SAE - STORE ABUSS AND EXIT.
     504/  1.063 :                      ;
     505/  1.063 :                      ;       ENTRY   (HL) = ABUSS VALUE
     506/  1.063 :                      ;       EXIT    TO (RET)
     507/  1.063 :                      ;       USES    NONE
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 23 - 2024-05-13 09:34:53 PM


     508/  1.063 :                      
     509/  1.063 : (MACRO)                      ERRMI   463Q-$
     509/  1.063 : =>FALSE                      IF (463Q-$) < 0
     509/  1.063 :                                ERROR Expression is negative
     509/  1.063 : [1.253]                      ENDIF
     510/  1.063 :                              ORG     463Q
     511/  1.063 :                      
     512/  1.063 : 042 024 040          SAE     SHLD    ABUSS
     513/  1.066 : 311                          RET
     514/  1.067 :                      
     515/  1.067 :                      ;       PIN     -       PORT IN
     516/  1.067 :                      ;
     517/  1.067 :                      ;       PIN INPUTS A BYTE FROM DISK
     518/  1.067 :                      ;
     519/  1.067 :                      ;       ENTRY:  NONE
     520/  1.067 :                      ;
     521/  1.067 :                      ;       EXIT:   (A) = INPUT BYTE FROM Z47
     522/  1.067 :                      ;
     523/  1.067 :                      ;       USE:    AF
     524/  1.067 :                      
     525/  1.067 : =1.067O              PIN     EQU     $
     526/  1.067 : 315 170 006                  CALL    IN.             ; GET STATUS
     527/  1.072 : 346 240                      ANI     S.DTR+S.DON     ; CHECK FOR DATA TERMINAL REQUEST
     528/  1.074 :                              CPU     Z80
     529/  1.074 : 050 371                      JR      Z,PIN           ; IF NOT READY, WAIT
     530/  1.076 :                              CPU     8080
     531/  1.076 : 067                          STC
     532/  1.077 : 360                          RP
     533/  1.100 : 303 150 006                  JMP     IN1.            ; INPUT A BYTE FROM PORT
     534/  1.103 :                      
     535/  1.103 :                              ORG     503Q
     536/  1.103 :                      ;       PCA - PROGRAM COUNTER ALTER
     537/  1.103 :                      ;
     538/  1.103 :                      ;       PCA INPUTS AND/OR DISPLAYS THE CURRENT USER PROGRAM VALUE AND ALLOWS
     539/  1.103 :                      ;       A NEW VALUE TO BE ENTERED OR RETAINS THE CURRENT VALUE IF
     540/  1.103 :                      ;       A CR IS TYPED
     541/  1.103 :                      ;
     542/  1.103 :                      ;       ENTRY   NONE
     543/  1.103 :                      ;       EXIT    NONE
     544/  1.103 :                      ;       USES    A,D,E,H,L,F
     545/  1.103 :                      
     546/  1.103 : 041 214 006          PCA     LXI     H,MSG.PC        ; COMPLETE PC MESSAGE
     547/  1.106 : 315 100 006                  CALL    TYPMSG
     548/  1.111 : 076 012                      MVI     A,10            ; GET LOCATION OF USER PC
     549/  1.113 : 315 052 003                  CALL    LRA.
     550/  1.116 : 136                          MOV     E,M             ; (D,E) = USER PC VALUE
     551/  1.117 : 043                          INX     H
     552/  1.120 : 126                          MOV     D,M
     553/  1.121 : 353                          XCHG                    ; (H,L) = USER PC VALUE
     554/  1.122 :                      
     555/  1.122 : 315 012 015                  CALL    IROC            ; INPUT NEXT CHARACTER
     556/  1.125 : 332 137 001                  JC      PCA1            ; IF FIRST CHARACTER WAS OCTAL, INPUT NEW PC
     557/  1.130 :                      
     558/  1.130 : 315 064 015                  CALL    TOA             ; ELSE, OUTPUT CURRENT VALUE
     559/  1.133 : 315 012 015                  CALL    IROC            ; SEE IF USER WANTS TO CHANGE IT NOW
     560/  1.136 : 320                          RNC                     ; IF NOT CHANGE, EXIT
     561/  1.137 :                      
     562/  1.137 :                      ;       ENTER NEW USER PC VALUE
     563/  1.137 :                      
     564/  1.137 : 353                  PCA1    XCHG                    ; (H,L) = ADDRESS OF USER PC VALUE
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 24 - 2024-05-13 09:34:53 PM


     565/  1.140 : 026 015                      MVI     D,A.CR          ; END BYTE WITH A RETURN
     566/  1.142 : 315 023 015                  CALL    IOA             ; INPUT NEW ADDRESS
     567/  1.145 : 311                          RET                     ; EXIT
     568/  1.146 :                      
     569/  1.146 :                      ;       GO88 - GO TO USER ROUTINE FROM H88 MONITOR
     570/  1.146 :                      ;
     571/  1.146 :                      ;       GO88 WAITS FOR A CARRIAGE RETURN OR A NEW ADDRESS TERMINATED WITH
     572/  1.146 :                      ;       A CARRIAGE RETURN.  IF NO ADDRESS IS ENTERED, GO88 TRANSFERS
     573/  1.146 :                      ;       CONTROL TO THE ADDRESS SPECIFIED BY THE USER PC VALUE
     574/  1.146 :                      
     575/  1.146 : 041 165 006          GO88    LXI     H,MSG.GO        ; COMPLETE GO MESSAGE
     576/  1.151 : 315 100 006                  CALL    TYPMSG
     577/  1.154 : 315 012 015                  CALL    IROC            ; INPUT A RETURN OR AN OCTAL CHARACTER
     578/  1.157 : 322 177 001                  JNC     GO88.1          ; IF RETURN, GO TO CURRENT USER PC
     579/  1.162 :                      
     580/  1.162 : 365                          PUSH    PSW             ; ELSE SAVE OCTAL CHARACTER AND FLAGS
     581/  1.163 : 076 012                      MVI     A,10            ; GET ADDRESS OF USER PC
     582/  1.165 : 315 052 003                  CALL    LRA.
     583/  1.170 : 043                          INX     H               ; POINT TO MSB
     584/  1.171 : 361                          POP     PSW             ; GET FIRST CHARACTER BACK
     585/  1.172 : 026 015                      MVI     D,A.CR          ; END ADDRESS WITH A RETURN
     586/  1.174 : 315 023 015                  CALL    IOA             ; INPUT NEW GO ADDRESS
     587/  1.177 : 315 370 005          GO88.1  CALL    WCR.            ; ECHO RETURN
     588/  1.202 : 303 222 001                  JMP     GO              ; EXECUTE USER ROUTINE
     589/  1.205 :                      
     590/  1.205 :                      ;       AUTOBO - AUTO BOOT
     591/  1.205 :                      ;
     592/  1.205 :                      ;       ENTRY:  NONE
     593/  1.205 :                      ;
     594/  1.205 :                      ;       EXIT:   (SEE 'DEVICE' ROUTINE)
     595/  1.205 :                      ;
     596/  1.205 :                      ;       USE:    ALL
     597/  1.205 :                      
     598/  1.205 : 257                  AUTOBO  XRA     A               ; SET TO PRIMARY FLAG
     599/  1.206 : 315 273 002                  CALL    DEVICE          ; CHECK DEVICE INFORMATION
     600/  1.211 : 303 342 001                  JMP     BOOT0           ; GOTO BOOT IT
     601/  1.214 :                      
     602/  1.214 : 000 000 000 000 000          DB      0,0,0,0,0,0     ; UNUSED BYTES
           1.221 : 000                
     603/  1.222 :                      
     604/  1.222 :                              ORG     622Q
     605/  1.222 :                      ;       GO - RETURN TO USER MODE
     606/  1.222 :                      ;
     607/  1.222 :                      ;       ENTRY   NONE
     608/  1.222 :                      
     609/  1.222 : (MACRO)                      ERRNZ   $-622Q
     609/  1.222 : =>FALSE                      IF ($-622Q) != 0
     609/  1.222 :                                ERROR Expression is not zero
     609/  1.222 : [2.097]                      ENDIF
     610/  1.222 :                      
     611/  1.222 : 303 063 000          GO      JMP     GO.             ; ROUTINE IS IN WASTE SPACE
     612/  1.225 :                      
     613/  1.225 :                      ;       SSTEP - SINGLE STEP INSTRUCTION.
     614/  1.225 :                      ;
     615/  1.225 :                      ;       ENTRY   NONE
     616/  1.225 :                      
     617/  1.225 : (MACRO)                      ERRNZ   $-625Q
     617/  1.225 : =>FALSE                      IF ($-625Q) != 0
     617/  1.225 :                                ERROR Expression is not zero
     617/  1.225 : [2.105]                      ENDIF
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 25 - 2024-05-13 09:34:53 PM


     618/  1.225 :                      
     619/  1.225 :                      SSTEP                           ; SINGLE STEP
     620/  1.225 : 363                          DI                      ; DISABLE INTERRUPTS UNTIL THE RIGHT TIME
     621/  1.226 : 072 011 040                  LDA     CTLFLG
     622/  1.231 : 356 020                      XRI     CB.SSI          ; CLEAR SINGLE STEP INHIBIT
     623/  1.233 : 323 360                      OUT     OP.CTL          ; PRIME SINGLE STEP INTERRUPT
     624/  1.235 : 062 011 040          SST1    STA     CTLFLG          ; SET NEW FLAG VALUES
     625/  1.240 : 341                          POP     H               ; CLEAN STACK
     626/  1.241 : 303 172 000                  JMP     INTXIT          ; RETURN TO USER ROUTINE FOR STEP
     627/  1.244 :                      
     628/  1.244 :                      ;       STPRTN - SINGLE STEP RETURN
     629/  1.244 :                      
     630/  1.244 : (MACRO)                      ERRNZ   $-644Q
     630/  1.244 : =>FALSE                      IF ($-644Q) != 0
     630/  1.244 :                                ERROR Expression is not zero
     630/  1.244 : [2.118]                      ENDIF
     631/  1.244 :                      
     632/  1.244 :                      STPRTN
     633/  1.244 : 366 020                      ORI     CB.SSI          ; DISABLE SINGLE STEP INTERRUPTION
     634/  1.246 : 323 360                      OUT     OP.CTL          ; TURN OFF SINGLE STEP ENABLE
     635/  1.250 :                      ;       SET     CTLFLG
     636/  1.250 : 022                          STAX    D
     637/  1.251 : 346 040                      ANI     CB.MTL          ; SEE IF IN MONITOR MODE
     638/  1.253 : 302 344 000                  JNZ     MTR
     639/  1.256 : 303 042 040                  JMP     UIVEC+3         ; TRANSFER TO USER'S ROUTINE
     640/  1.261 :                      
     641/  1.261 :                      ;       NBOOT   -               NORMAL BOOT
     642/  1.261 :                      ;
     643/  1.261 :                      ;       NBOOT IS ENTERED WHEN USER TYPES 'BOOT:' COMMAND FROM MONITOR.
     644/  1.261 :                      ;       IT WILL ACCEPT THE BOOT DEVICE AS WELL AS THE UNIT NUMBER FROM
     645/  1.261 :                      ;       CONSOLE AND GO TO THE BOOT CODE.
     646/  1.261 :                      ;
     647/  1.261 :                      ;       ENTRY:  NONE
     648/  1.261 :                      ;
     649/  1.261 :                      ;       EXIT:   (AIO.UNI) = UNIT NUMBER TO BOOT
     650/  1.261 :                      ;               (PRIM) = PORT ADDRESS OF THE BOOT DEVICE
     651/  1.261 :                      ;               (TMFG) = DEVICE TYPE, =1 IS Z47, =0 IS H17
     652/  1.261 :                      ;
     653/  1.261 :                      ;       USE:    ALL
     654/  1.261 :                      
     655/  1.261 : 257                  NBOOT   XRA     A               ; SET Z FLAG TO PRIMARY DEVICE
     656/  1.262 : 315 273 002          NBOOT0  CALL    DEVICE          ; READ SWITCH TO DETERMINE BOOT DEVICE
     657/  1.265 : 315 262 003          START1  CALL    RCC             ; INPUT FROM KB
     658/  1.270 : 376 015                      CPI     A.CR            ; IF INPUT IS CR
     659/  1.272 :                              CPU     Z80
     660/  1.272 : 050 043                      JR      Z,BOOT0.        ;     THEN TAKE IT AS DRIVE 0
     661/  1.274 :                              CPU     8080
     662/  1.274 : 315 133 016                  CALL    BOOT7
     663/  1.277 :                              CPU     Z80
     664/  1.277 : 070 007                      JR      C,WRONG
     665/  1.301 :                              CPU     8080
     666/  1.301 : 270                          CMP     B
     667/  1.302 :                              CPU     Z80
     668/  1.302 : 070 044                      JR      C,BOOT5         ;   IF WITHIN THE RANGE, BOOT IT!
     669/  1.304 : 010                          EX      AF,AF'          ; SAVE INPUT, CHECK PRIM OR SEC?
     670/  1.305 : 050 010                      JR      Z,NB7           ; IF PRIMARY, CHECK 'S'
     671/  1.307 : 010                          EX      AF,AF'          ; RESTORE (Z) FLAG
     672/  1.310 :                              CPU     8080
     673/  1.310 : =1.310O              WRONG   EQU     $
     674/  1.310 : 076 007                      MVI     A,A.BEL         ; NOT THE CASE, BEEP!
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 26 - 2024-05-13 09:34:53 PM


     675/  1.312 : 315 302 003                  CALL    WCC
     676/  1.315 :                              CPU     Z80
     677/  1.315 : 030 346                      JR      START1          ; AND TRY AGAIN
     678/  1.317 :                      
     679/  1.317 : 010                  NB7     EX      AF,AF'          ; RESTORE INPUT & PRIM. SEC FLAG
     680/  1.320 :                              CPU     8080
     681/  1.320 : 346 137                      ANI     01011111B       ; MASK TO UPPER CASE LETTER
     682/  1.322 : 376 123                      CPI     'S'             ; CHECK THE USER LIKE TO BOOT FROM
     683/  1.324 :                              CPU     Z80
     684/  1.324 : 040 362                      JR      NZ,WRONG        ; BOOT SECONDARY DEVICE
     685/  1.326 :                              CPU     8080
     686/  1.326 :                      
     687/  1.326 :                      ;       USER WISHES TO BOOT FROM SECONDARY DEVICE
     688/  1.326 :                      
     689/  1.326 : =1.326O              BSEC    EQU     $
     690/  1.326 : 041 042 014                  LXI     H,BSMSG         ; PRINT BOOT SECONDARY MESSAGE
     691/  1.331 : 315 100 006                  CALL    TYPMSG
     692/  1.334 : 074                          INR     A               ; SET (Z)=0 FOR SECONDARY DEVICE
     693/  1.335 :                              CPU     Z80
     694/  1.335 : 030 323                      JR      NBOOT0
     695/  1.337 :                              CPU     8080
     696/  1.337 :                      
     697/  1.337 :                      ;       SAVE THE AIO.UNI, CHECK IF THERE IS THE BOOT DEVICE AND GO!
     698/  1.337 :                      
     699/  1.337 : 315 370 005          BOOT0.  CALL    WCR.            ; PRINT CR FOR GOOD LOOKS
     700/  1.342 :                      
     701/  1.342 : 257                  BOOT0   XRA     A               ; TAKE CR OR AUTO BOOT AS DRIVE 0
     702/  1.343 : 061 200 042                  LXI     SP,21200Q       ; SET STACK FOR NO COMMAND LINE
     703/  1.346 :                              CPU     Z80
     704/  1.346 : 030 010                      JR      BOOT6
     705/  1.350 :                              CPU     8080
     706/  1.350 :                      
     707/  1.350 : 315 302 003          BOOT5   CALL    WCC             ; PRINT UNIT NUMBER
     708/  1.353 : 326 060                      SUI     '0'             ; MAKE IT BINARY
     709/  1.355 : 303 263 013                  JMP     CCL             ; CHECK FOR COMMAND LINE
     710/  1.360 : 062 061 041          BOOT6   STA     AIO.UNI         ; STORE THE UNIT #
     711/  1.363 : 174                          MOV     A,H             ; CHECK IF NO DEVICE AT ADDR. PORT
     712/  1.364 : 247                          ANA     A
     713/  1.365 : 373                          EI                      ; INSURE INTERRUPTS READY
     714/  1.366 : 312 171 002                  JZ      NODEV           ; NO DEVICE
     715/  1.371 : 351                          PCHL                    ; JMP TO THE EXECUTION ROUTINE
     716/  1.372 :                      
     717/  1.372 :                      ;       Z47     -               BOOT FROM Z47 DISK DRIVE
     718/  1.372 :                      ;
     719/  1.372 :                      ;       Z47 WILL LOAD DATA FROM DISK TRACK 0 SECTOR 10 thru 9 2 TO
     720/  1.372 :                      ;       USER FIRST AVAILABLE RAM LOCATION. IF THE BOOT IS SUCCEED,
     721/  1.372 :                      ;       CONTROL PASS TO THAT LOCATION.
     722/  1.372 :                      ;
     723/  1.372 :                      ;       ENTRY:  (AIO.UNI) = UNIT NUMBER TO BOOT
     724/  1.372 :                      ;
     725/  1.372 :                      ;       EXIT:   NONE
     726/  1.372 :                      ;
     727/  1.372 :                      ;       USE:    ALL
     728/  1.372 :                      
     729/  1.372 : =1.372O              Z47     EQU     $
     730/  1.372 :                      ;       LD      (STK),SP        ; SAVE STACK POINTER FOR RE-BOOT
     731/  1.372 : 355 163                      DB      355Q,163Q
     732/  1.374 : 124 041                      DW      STK
     733/  1.376 :                      
     734/  1.376 : =1.376O              Z47A    EQU     $
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 27 - 2024-05-13 09:34:53 PM


     735/  1.376 : 373                          EI                      ; LET THE TIMER FLY
     736/  1.377 : 072 061 041                  LDA     AIO.UNI         ; GET UNIT NUMBER
     737/  2.002 : 007                          RLC                     ; SET TO SIDE/UNIT/SECTOR FORMAT
     738/  2.003 : 007                          RLC
     739/  2.004 : 007                          RLC
     740/  2.005 : 007                          RLC
     741/  2.006 : 007                          RLC
     742/  2.007 : 074                          INR     A               ; SET TO SECTOR 1
     743/  2.010 : 117                          MOV     C,A             ; SAVE SIDE/UNIT/SECTOR (SIDE=0)
     744/  2.011 :                      
     745/  2.011 : 076 002              RESET   MVI     A,W.RES         ; RESET Z47
     746/  2.013 : 315 000 010                  CALL    Z47X            ; DO Z47 EXTENSION
     747/  2.016 :                      
     748/  2.016 :                      ;       READ BOOT CODE FROM Z47
     749/  2.016 :                      
     750/  2.016 : 041 200 042                  LXI     H,USERFWA       ; BOOT DESTINATION
     751/  2.021 : 315 111 006                  CALL    RDBLCK          ; READ A SECTOR FROM DISK
     752/  2.024 : 332 171 002                  JC      NODEV           ; IF READ ERROR
     753/  2.027 :                      
     754/  2.027 : 052 124 041                  LHLD    STK
     755/  2.032 : 371                          SPHL                    ; RESTORE STACK
     756/  2.033 :                      
     757/  2.033 : 303 201 016                  JMP     EUC             ; SET CLOCK AND ENTER USER CODE
     758/  2.036 :                      
     759/  2.036 :                      ;       RETRY   -               RE-BOOT Z47
     760/  2.036 :                      ;
     761/  2.036 :                      ;       RETRY IS ENTERED WHEN 3.5 SECONDS TIME OUT & BOOT Z47
     762/  2.036 :                      ;       STILL NO SUCCEED. IT RESTORE STACK & JUMP TO BOOT Z47 ROUTINE
     763/  2.036 :                      ;
     764/  2.036 :                      ;       ENTRY:  NONE
     765/  2.036 :                      ;
     766/  2.036 :                      ;       EXIT:   (HL) = (SP)
     767/  2.036 :                      ;
     768/  2.036 :                      ;       USE:    HL, SP
     769/  2.036 :                      
     770/  2.036 : 052 124 041          RETRY   LHLD    STK             ; GET OLD STACK ADDRESS
     771/  2.041 : 371                          SPHL                    ; SET TO STACK POINTER
     772/  2.042 :                              CPU     Z80
     773/  2.042 : 030 332                      JR      Z47A            ; RE-BOOT
     774/  2.044 :                              CPU     8080
     775/  2.044 :                      
     776/  2.044 :                      ;       R.SDP   - SET DEVICE PARAMETER, ALLOW TO SET DRIVE 0, 1, AND 2.
     777/  2.044 :                      ;       (MORE INFORMATION CAN BE FOUND IN H17 ROM CODE 36062A)
     778/  2.044 :                      
     779/  2.044 : =2.044O              R.SDP   EQU   $
     780/  2.044 : 076 012                      MVI     A,ERPTCNT
     781/  2.046 : 062 264 040                  STA     D.OECNT         ; SET MAX ERROR COUNT FOR OPERATION
     782/  2.051 : 072 061 041                  LDA     AIO.UNI         ; LOAD DRIVE NUMBER
     783/  2.054 : 365                          PUSH    PSW             ; SAVE IT
     784/  2.055 : 376 002                      CPI     2               ; IS IT DRIVE 2?
     785/  2.057 :                              CPU     Z80
     786/  2.057 : 070 002                      JR      C,R.SDP1        ; IF NOT JMP TO H17 ROM ROUTINE
     787/  2.061 :                              CPU     8080
     788/  2.061 : 076 003                      MVI     A,3
     789/  2.063 : 303 073 036          R.SDP1  JMP     SDP3
     790/  2.066 :                      
     791/  2.066 :                      ;;      VIEW2 - CONTINUE *VIEW* COMMAND
     792/  2.066 :                      ;
     793/  2.066 :                      
     794/  2.066 : 176                  VIEW2   MOV     A,M             ; A = BYTE
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 28 - 2024-05-13 09:34:53 PM


     795/  2.067 : 315 077 015                  CALL    TOB
     796/  2.072 : 076 040                      MVI     A,' '           ; SPACE BETWEEN
     797/  2.074 : 315 302 003                  CALL    WCC
     798/  2.077 : 315 363 007                  CALL    VIEW4           ; CHECK FOR END
     799/  2.102 : 312 355 003                  JZ      VIEW9           ; IF ALL DONE
     800/  2.105 : 315 340 003                  CALL    VIEW3.          ; CHECK FOR END OF LINE
     801/  2.110 : 303 000 006                  JMP     VIEW3
     802/  2.113 :                      
     803/  2.113 : 151 145 167 040 000  MSG.VEW DB      'iew ',0
     804/  2.120 :                      
     805/  2.120 : 000 000 000 000 000          DB      0,0,0,0,0,0,0   ; UNUSED BYTES
           2.125 : 000 000            
     806/  2.127 : 000 000 000 000 000          DB      0,0,0,0,0,0,0
           2.134 : 000 000            
     807/  2.136 :                      
     808/  2.136 : (MACRO)                      ERRMI   1136Q-$
     808/  2.136 : =>FALSE                      IF (1136Q-$) < 0
     808/  2.136 :                                ERROR Expression is negative
     808/  2.136 : [3.040]                      ENDIF
     809/  2.136 :                              ORG     1136Q
     810/  2.136 :                      ;       HORN - MAKE NOISE.
     811/  2.136 :                      ;
     812/  2.136 :                      ;       ENTRY   (A) = (MILLISECOND COUNT)/2
     813/  2.136 :                      ;       EXIT    NONE
     814/  2.136 :                      ;       USES    A,F
     815/  2.136 :                      
     816/  2.136 : (MACRO)                      ERRNZ   $-1136Q
     816/  2.136 : =>FALSE                      IF ($-1136Q) != 0
     816/  2.136 :                                ERROR Expression is not zero
     816/  2.136 : [3.048]                      ENDIF
     817/  2.136 :                      
     818/  2.136 : =2.136O              ALARM   EQU     $
     819/  2.136 :                              CPU     Z80
     820/  2.136 : 030 026                      JR      ALARMB          ; BRANCH TO A JUMP TO NOISE TO DING BELL
     821/  2.140 :                              CPU     8080
     822/  2.140 :                      
     823/  2.140 : (MACRO)                      ERRNZ   $-1140Q
     823/  2.140 : =>FALSE                      IF ($-1140Q) != 0
     823/  2.140 :                                ERROR Expression is not zero
     823/  2.140 : [3.055]                      ENDIF
     824/  2.140 :                      
     825/  2.140 : 365                  HORN    PUSH    PSW
     826/  2.141 : 076 200                      MVI     A,CB.SPK        ; TURN ON SPEAKER
     827/  2.143 :                      
     828/  2.143 : 343                  HRN0    XTHL                    ; SAVE (HL), (H) = COUNT
     829/  2.144 : 325                          PUSH    D               ; SAVE (DE)
     830/  2.145 : 353                          XCHG                    ; (D) = LOOP COUNT
     831/  2.146 : 041 011 040                  LXI     H,CTLFLG
     832/  2.151 : 256                          XRA     M
     833/  2.152 : 136                          MOV     E,M             ; (E) = OLD CTLFLG VALUE
     834/  2.153 : 167                          MOV     M,A             ; TURN ON HORN
     835/  2.154 : 056 033                      MVI     L,TICCNT#256
     836/  2.156 :                      
     837/  2.156 : 172                          MOV     A,D             ; (A) = CYCLE COUNT
     838/  2.157 : 206                          ADD     M
     839/  2.160 : 276                  HRN2    CMP     M               ; WAIT REQUIRED TICCOUNTS
     840/  2.161 :                              CPU     Z80
     841/  2.161 : 040 375                      JR      NZ,HRN2
     842/  2.163 :                              CPU     8080
     843/  2.163 :                      
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 29 - 2024-05-13 09:34:53 PM


     844/  2.163 : 303 045 006                  JMP     HRNX            ; JUMP TO AN EXTENSION OF HORN SO ROOM
     845/  2.166 :                                                      ; CAN BE MADE FOR A JUMP TO NOISE
     846/  2.166 :                      
     847/  2.166 : 303 053 006          ALARMB  JMP     NOISE           ; SEND A BELL TO THE CONSOLE
     848/  2.171 :                      
     849/  2.171 :                      
     850/  2.171 :                      ;       NODEV   - NO DEVICE AT THE UNIT USER INDICATE
     851/  2.171 :                      ;
     852/  2.171 :                      ;       NODEV IS ENTERED WHEN:  1. 15 SECONDS TIME OUT
     853/  2.171 :                      ;                            OR 2. NO DEVICE IS INDICATED ON SWITCH
     854/  2.171 :                      ;                            OR 3. USER HIT <DELETE> TO ABORT BOOT
     855/  2.171 :                      ;                            OR 4. BOOT ERROR
     856/  2.171 :                      ;       IT WILL EXIT TO 'ERROR' ROUTINE AND MONITOR LOOP
     857/  2.171 :                      ;
     858/  2.171 :                      ;       ENTRY:  NONE
     859/  2.171 :                      ;
     860/  2.171 :                      ;       EXIT:   (A) = 0
     861/  2.171 :                      ;
     862/  2.171 :                      ;       USE:    AF, HL
     863/  2.171 :                      
     864/  2.171 : =2.171O              NODEV   EQU     $
     865/  2.171 : 041 046 014                  LXI     H,ERRMSG        ; PRINT ERROR MESSAGE
     866/  2.174 : 315 100 006                  CALL    TYPMSG
     867/  2.177 : 062 010 040          NODEV1  STA     MFLAG           ; STOP TIMER
     868/  2.202 : 323 177                      OUT     DP.DC           ; OFF DISK
     869/  2.204 : 303 322 000                  JMP     ERROR           ; BACK TO MONITOR LOOP
     870/  2.207 :                      
     871/  2.207 :                      
     872/  2.207 :                      ;       H17     - BOOT FROM H17 DISK SYSTEM
     873/  2.207 :                      ;                 (THIS IS THE MODIFICATION OF THE H17 BOOT ROUTINE.
     874/  2.207 :                      ;                  MORE INFORMATION CAN BE FOUND O H17 BOOT ROM 30000 A)
     875/  2.207 :                      ;
     876/  2.207 :                      ;       ENTRY:  (AIO.UNI) = THE UNIT TO BOOT
     877/  2.207 :                      ;
     878/  2.207 :                      ;       EXIT:   NONE
     879/  2.207 :                      ;
     880/  2.207 :                      ;       USE:    ALL
     881/  2.207 :                      
     882/  2.207 : =2.207O              H17     EQU     $
     883/  2.207 : 001 130 000                  LXI     B,BOOTAL        ; SET THE COUNT TO MOVE IN CONSTANTS AND VECTORS
     884/  2.212 : 021 132 037                  LXI     D,BOOTA         ; SET THE SOURCE ADDRESS
     885/  2.215 : 041 110 040                  LXI     H,D.CON         ; SET THE DESTINATION ADDRESS
     886/  2.220 : 315 252 030                  CALL    DMOVE           ; MOVE IT
     887/  2.223 :                      
     888/  2.223 :                      ;       SET ADDRESS FOR 'SET DEVICE PARAMETER' ROUTINE
     889/  2.223 :                      ;       TO HANDLE DISK DRIVE 0, 1, AND 2.
     890/  2.223 :                      
     891/  2.223 : 041 044 002                  LXI     H,R.SDP         ; SET THIS ROM ROUTINE ADDRESS
     892/  2.226 : 042 206 040                  SHLD    D.SDP           ; SET INTO RAM JUMP VECTOR
     893/  2.231 : 373                          EI                      ; RESTORE INTERRUPT
     894/  2.232 :                      
     895/  2.232 :                      ;       WAIT TILL USER INSERT THE DISK AND CLOSE THE DOOR
     896/  2.232 :                      ;       (TIMER INTERRUPT IS AFFECTED NOW)
     897/  2.232 :                      
     898/  2.232 : 006 012                      MVI    B,10             ; LOOK FOR SOME HOLE AND NO HOLE
     899/  2.234 : 315 044 002                  CALL   R.SDP            ; SELECT UNIT & MOTOR ON
     900/  2.237 : 315 271 036          H17A    CALL   WNH              ; WAIT FOR NO HOLE
     901/  2.242 : 315 235 036                  CALL   WHD              ; WAIT FOR HOLE
     902/  2.245 :                              CPU    Z80
     903/  2.245 : 020 370                      DJNZ   H17A
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 30 - 2024-05-13 09:34:53 PM


     904/  2.247 :                              CPU    8080
     905/  2.247 :                      
     906/  2.247 :                      ;       READ BOOT CODE
     907/  2.247 :                      
     908/  2.247 : 315 024 017                  CALL   H17X             ; H17 Extension Routine
     909/  2.252 : 021 200 042                  LXI    D,USERFWA        ; SET THE LOAD LOCATION
     910/  2.255 : 001 000 011                  LXI    B,9*256          ; LOAD 9 SECTORS
     911/  2.260 : 041 000 000                  LXI    H,0              ; LOAD FROM TRACK 0 SECTOR 1
     912/  2.263 : 315 077 034                  CALL   R.READ           ; READ DISK BOOT CODE
     913/  2.266 :                              CPU    Z80
     914/  2.266 : 070 301                      JR     C,NODEV          ;   ERROR ON BOOT, BACK TO 'H:'
     915/  2.270 :                              CPU    8080
     916/  2.270 : 303 215 016                  JMP    EUC.             ; VECTORS ALREADY IN
     917/  2.273 :                      
     918/  2.273 :                      ;      DEVICE - DETERMINE BOOT WHICH DEVICE AT WHICH PORT
     919/  2.273 :                      ;
     920/  2.273 :                      ;       ENTRY:  Z FLAG ( Z=1 FOR PRIMARY, Z=0 FOR SECONDARY)
     921/  2.273 :                      ;
     922/  2.273 :                      ;       EXIT:   HL = DEVICE BOOT EXECUTION ADDRESS
     923/  2.273 :                      ;               REG B = PRIMARY MAXI. DRIVE NUMBER
     924/  2.273 :                      ;                    IF Z47 ='4'; H17 ='3';H37 ='4';H67 ='4'
     925/  2.273 :                      ;               (PRIM) = PRIMARY DEVICE PORT ADDRESS
     926/  2.273 :                      ;               (TMFG) = SET UP FROM TABLE
     927/  2.273 :                      ;
     928/  2.273 :                      ;       USE:    ALL
     929/  2.273 :                      
     930/  2.273 :                              CPU     Z80
     931/  2.273 : =2.273O              DEVICE  EQU     $
     932/  2.273 : 010                          EX      AF,AF'          ; SAVE Z FLAG
     933/  2.274 :                              CPU     8080
     934/  2.274 :                      
     935/  2.274 :                      ;       INITIAL VARIABLES
     936/  2.274 :                      
     937/  2.274 : 363                          DI                      ; NO INTERRUPT
     938/  2.275 : 041 240 040                  LXI     H,D.RAM         ; CLEAR H17 WORK RAM AREA
     939/  2.300 : 006 037                      MVI     B,D.RAML        ; LENGTH TO CLEAR
     940/  2.302 : 315 212 031                  CALL    DZERO
     941/  2.305 : 323 177                      OUT     DP.DC           ; OFF DISK
     942/  2.307 : 062 033 040                  STA     TICCNT          ; 0 TIMER COUNTER
     943/  2.312 : 062 122 041                  STA     MYCNT           ; 0.5 SECOND TIMER = 0
     944/  2.315 :                      
     945/  2.315 : 074                          INR     A               ; (A)=1
     946/  2.316 : (MACRO)                      ERRNZ   UO.CLK-1        ; TIMER INTERRUPT MUST = 1
     946/  2.316 : =>FALSE                      IF (UO.CLK-1) != 0
     946/  2.316 :                                ERROR Expression is not zero
     946/  2.316 : [3.178]                      ENDIF
     947/  2.316 : 062 010 040                  STA     MFLAG           ; ALLOW TIMER INTERRUPT
     948/  2.321 : 041 037 040                  LXI     H,UIVEC         ; SET ALL VECTOR TO EI/RET ADDRESS
     949/  2.324 : 066 303              BOOT2   MVI     M,MI.JMP
     950/  2.326 : 043                          INX     H
     951/  2.327 : 066 027                      MVI     M,EIXIT#256     ; STORE LS BYTE
     952/  2.331 : 043                          INX     H
     953/  2.332 : 066 034                      MVI     M,EIXIT/256     ; STORE MS BYTE
     954/  2.334 : 043                          INX     H
     955/  2.335 : 207                          ADD     A
     956/  2.336 : 362 324 002                  JP      BOOT2
     957/  2.341 :                      
     958/  2.341 : 041 304 004                  LXI     H,TMOUT         ; SET TIMER INTERRUPT VECTOR
     959/  2.344 : 042 040 040                  SHLD    UIVEC+1
     960/  2.347 :                      
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 31 - 2024-05-13 09:34:53 PM


     961/  2.347 :                      ;       DETERMINE BOOT DEVICE AND ITS INFORMATION
     962/  2.347 :                      
     963/  2.347 : 333 362                      IN      H88.SW          ; READ SWITCH DATA
     964/  2.351 : 346 020                      ANI     H88S.DV         ; DETERMINE WHICH TABLE IS PRIMARY
     965/  2.353 :                              CPU     Z80
     966/  2.353 : 050 012                      JR      Z,DEV174        ;   IF PORT 174 IS PRIMARY
     967/  2.355 :                              CPU     8080
     968/  2.355 :                      
     969/  2.355 :                      ;       PRIMARY DEVICE IS AT 170q
     970/  2.355 :                      
     971/  2.355 : 333 362              DEV170  IN      H88.SW          ; GET DEVICE SWITCHES
     972/  2.357 :                      
     973/  2.357 :                              CPU     Z80
     974/  2.357 : 010                          EX      AF,AF'          ; GET 'SD' FLAGS
     975/  2.360 :                              CPU     8080
     976/  2.360 : 041 103 017                  LXI     H,BT174         ; ASSUME PORT 174
     977/  2.363 :                              CPU     Z80
     978/  2.363 : 040 021                      JR      NZ,DEV2         ;    IF WAS 174
     979/  2.365 :                      
     980/  2.365 : 030 010                      JR      DEV1.           ; DO PORT 170 STUFF
     981/  2.367 :                              CPU     8080
     982/  2.367 :                      
     983/  2.367 :                      ;       DEVICE IS AT 174q
     984/  2.367 :                      
     985/  2.367 : 333 362              DEV174  IN     H88.SW           ; GET DEVICE DIPS
     986/  2.371 :                      
     987/  2.371 :                              CPU    Z80
     988/  2.371 : 010                          EX     AF,AF'           ; SAVE DIPS, RESTORE 'SD' FLAG
     989/  2.372 :                              CPU    8080
     990/  2.372 : 041 103 017                  LXI    H,BT174          ; ASSUME PRIMARY
     991/  2.375 :                              CPU    Z80
     992/  2.375 : 050 007                      JR     Z,DEV2
     993/  2.377 :                      
     994/  2.377 : 010                  DEV1.   EX     AF,AF'           ; GET SWITCHES BACK
     995/  3.000 :                              CPU    8080
     996/  3.000 : 017                          RRC
     997/  3.001 : 017                          RRC                     ; MOVE BITS DOWN
     998/  3.002 :                              CPU    Z80
     999/  3.002 : 010                          EX     AF,AF'           ; AND SAVE AGAIN
    1000/  3.003 :                              CPU    8080
    1001/  3.003 : 041 124 017                  LXI    H,BT170          ; WAS PORT 170
    1002/  3.006 :                      ;       JR     DEV2
    1003/  3.006 :                      ;       ERRNZ  $-DEV2
    1004/  3.006 :                      
    1005/  3.006 :                      ;       HL = ADDRESS OF FWA PROPER TABLE
    1006/  3.006 :                      
    1007/  3.006 : 176                  DEV2    MOV    A,M              ; FIRST BYTE IS PORT NUMBER
    1008/  3.007 : 062 120 041                  STA    PRIM             ; (A) = DEVICE ADDRESS
    1009/  3.012 :                      
    1010/  3.012 :                              CPU    Z80
    1011/  3.012 : 010                          EX     AF,AF'           ; (A) = DEVICE SPECIFIC FLAG
    1012/  3.013 :                              CPU    8080
    1013/  3.013 : 346 003                      ANI    H88S.4           ; MASK OFF UNIT BITS
    1014/  3.015 : 207                          ADD    A
    1015/  3.016 : 207                          ADD    A                ; 4 BYTE ENTRIES
    1016/  3.017 : 043                          INX    H                ; HL = FWA OF TABLE ENTRIES
    1017/  3.020 : 137                          MOV    E,A
    1018/  3.021 : 026 000                      MVI    D,0              ; DE = OFFSET
    1019/  3.023 : 031                          DAD    D                ; HL = ADDRESS OF DEVICE ENTRY
    1020/  3.024 :                      
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 32 - 2024-05-13 09:34:53 PM


    1021/  3.024 : 176                          MOV    A,M
    1022/  3.025 : 062 121 041                  STA    TMFG             ; 1ST ENTRY IS TIME-OUT FLAG
    1023/  3.030 :                      
    1024/  3.030 : 043                          INX    H
    1025/  3.031 : 106                          MOV    B,M              ; 2ND ENTRY IS UNIT NUMBER
    1026/  3.032 :                      
    1027/  3.032 : 043                          INX    H
    1028/  3.033 : 136                          MOV    E,M
    1029/  3.034 : 043                          INX    H                ; 3RD ENTRY IS BOOT ROUTINE ADDRESS
    1030/  3.035 : 126                          MOV    D,M
    1031/  3.036 : 353                          XCHG                    ; MOVE IT INTO HL
    1032/  3.037 : 311                          RET
    1033/  3.040 :                      
    1034/  3.040 : 000 000 000 000 000          DB      0,0,0,0,0,0,0   ; UNUSED BYTES
           3.045 : 000 000            
    1035/  3.047 :                      
    1036/  3.047 :                      ;       ERRMI   1447A-$
    1037/  3.047 :                              ORG     1447Q
    1038/  3.047 :                      ;       LRA - LOCATE REGISTER ADDRESS
    1039/  3.047 :                      ;
    1040/  3.047 :                      ;       ENTRY   NONE.
    1041/  3.047 :                      ;       EXIT    (A) = REGISTER INDEX
    1042/  3.047 :                      ;               (H,L) = STORAGE ADDRESS
    1043/  3.047 :                      ;               (D,E) = (O,A)
    1044/  3.047 :                      ;       USES    A,D,E,H,L,F
    1045/  3.047 :                      
    1046/  3.047 : (MACRO)                      ERRNZ   $-1447Q
    1046/  3.047 : =>FALSE                      IF ($-1447Q) != 0
    1046/  3.047 :                                ERROR Expression is not zero
    1046/  3.047 : [4.022]                      ENDIF
    1047/  3.047 :                      
    1048/  3.047 : 072 005 040          LRA     LDA     REGI
    1049/  3.052 : 137                  LRA.    MOV     E,A
    1050/  3.053 : 026 000                      MVI     D,0
    1051/  3.055 : 052 035 040                  LHLD    REGPTR
    1052/  3.060 : 031                          DAD     D               ; (DE) = (REGPTR)+(REGI)
    1053/  3.061 : 311                          RET
    1054/  3.062 :                      
    1055/  3.062 :                      ;       IOA - INPUT OCTAL ADDRESS.
    1056/  3.062 :                      ;
    1057/  3.062 :                      ;       ENTRY   (H,L) = ADDRESS OF RECEPTION DOUBLE BYTE.
    1058/  3.062 :                      ;               (D) = TERMINATING CHARACTER
    1059/  3.062 :                      ;       EXIT    NONE
    1060/  3.062 :                      ;       USES    A,D,E,H,L,F
    1061/  3.062 :                      
    1062/  3.062 : (MACRO)                      ERRNZ   $-1462Q
    1062/  3.062 : =>FALSE                      IF ($-1462Q) != 0
    1062/  3.062 :                                ERROR Expression is not zero
    1062/  3.062 : [4.038]                      ENDIF
    1063/  3.062 :                      
    1064/  3.062 : 303 166 005          IOA0    JMP     IOA1
    1065/  3.065 : 000                          NOP                     ; RETAIN H8 ORG
    1066/  3.066 :                      
    1067/  3.066 :                      ;       IOB - INPUT OCTAL BYTE
    1068/  3.066 :                      ;
    1069/  3.066 :                      ;       READ ONE OCTAL BYTE FROM THE KEYSET.
    1070/  3.066 :                      ;
    1071/  3.066 :                      ;       ENTRY   (H,L) = ADDRESS OF BYTE TO HOLD VALUE
    1072/  3.066 :                      ;               'C' SET IF FIRST DIGIT N (A)
    1073/  3.066 :                      ;       EXIT    NONE
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 33 - 2024-05-13 09:34:53 PM


    1074/  3.066 :                      ;       USES    A,D,E,H,L,F
    1075/  3.066 :                      
    1076/  3.066 : (MACRO)                      ERRNZ   $-1466Q
    1076/  3.066 : =>FALSE                      IF ($-1466Q) != 0
    1076/  3.066 :                                ERROR Expression is not zero
    1076/  3.066 : [4.052]                      ENDIF
    1077/  3.066 :                      
    1078/  3.066 : 066 000              IOB0    MVI     M,0             ; ZERO OUT OLD VALUE
    1079/  3.070 : 324 262 003          IOB1    CNC     RCC             ; READ CONSOLE CHARACTER
    1080/  3.073 :                      
    1081/  3.073 :                      ;       SEE IF CHARACTER IS A VALID OCTAL VALUE
    1082/  3.073 :                      ;
    1083/  3.073 : 376 060                      CPI     '0'             ; LESS THAN ZERO?
    1084/  3.075 : 332 135 003                  JC      IOB2            ; IF (A) < 0, SEE IF A TERMINATING CHARACTER
    1085/  3.100 : 376 070                      CPI     '8'             ; GREATER THAN 7?
    1086/  3.102 : 322 070 003                  JNC     IOB1            ; IF TOO LARGE, TRY AGAIN
    1087/  3.105 :                      
    1088/  3.105 :                      ;       HAVE AN OCTAL DIGIT
    1089/  3.105 :                      ;
    1090/  3.105 : 315 302 003                  CALL    WCC             ; ECHO CHARACTER
    1091/  3.110 : 346 007                      ANI     00000111B       ; MASK FOR BINARY VALUE
    1092/  3.112 : 137                          MOV     E,A             ; (E) = VALUE
    1093/  3.113 : 176                          MOV     A,M             ; GET OLD VALUE
    1094/  3.114 : 007                          RLC                     ; SHIFT 3
    1095/  3.115 : 007                          RLC
    1096/  3.116 : 007                          RLC
    1097/  3.117 : 303 126 003                  JMP     IOB1.5          ; JUMP AROUND AN H88/H89 TO H8 FAKE ROUTINE
    1098/  3.122 :                      
    1099/  3.122 :                      ;       FAKE OUT ROUTINE FOR CALLERS OF *DOD* FROM THE H8 FRONT PANEL
    1100/  3.122 :                      
    1101/  3.122 : (MACRO)                      ERRNZ    $-1522Q
    1101/  3.122 : =>FALSE                      IF ($-1522Q) != 0
    1101/  3.122 :                                ERROR Expression is not zero
    1101/  3.122 : [4.077]                      ENDIF
    1102/  3.122 :                      
    1103/  3.122 : 043                  DOD     INX      H
    1104/  3.123 : 043                          INX      H
    1105/  3.124 : 043                          INX      H
    1106/  3.125 : 311                          RET
    1107/  3.126 :                      
    1108/  3.126 :                      ;       CONTINUE
    1109/  3.126 :                      
    1110/  3.126 : 346 370              IOB1.5  ANI     11111000B       ; TOSS OLD LSB DIGIT
    1111/  3.130 : 263                          ORA     E               ; REPLACE WITH NEW VALUE
    1112/  3.131 : 167                          MOV     M,A
    1113/  3.132 : 303 070 003                  JMP     IOB1            ; INPUT ANOTHER CHARACTER
    1114/  3.135 :                      
    1115/  3.135 :                      ;       CHECK FOR A CARRIAGE RETURN TO TERMINATE BYTE
    1116/  3.135 :                      ;
    1117/  3.135 : 376 015              IOB2    CPI     A.CR            ; CARRIAGE RETURN?
    1118/  3.137 : 310                          RZ                      ; RETURN IF CARRIAGE RETURN         /JWT 790507/
    1119/  3.140 : 257                          XRA     A               ; CLEAR CARRY                       /JWT 790507/
    1120/  3.141 :                              CPU     Z80
    1121/  3.141 : 030 325                      JR      IOB1            ; GET A NEW CHARACTER               /JWT 790507/
    1122/  3.143 :                              CPU     8080
    1123/  3.143 :                      
    1124/  3.143 :                      
    1125/  3.143 :                      ;       DYASC - DYNAMIC RAM ASCII OUTPUT TO CONSOLE
    1126/  3.143 :                      ;
    1127/  3.143 :                      ;       ENTRY:  (A) = CHARACTER TO OUTPUT
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 34 - 2024-05-13 09:34:53 PM


    1128/  3.143 :                      ;               (IY) = RETURN ADDRESS
    1129/  3.143 :                      ;
    1130/  3.143 :                      ;       EXIT:   TO (IY)
    1131/  3.143 :                      ;       USES:   A,C,F
    1132/  3.143 :                      
    1133/  3.143 : =3.143O              DYASC   EQU     $
    1134/  3.143 :                              CPU     Z80
    1135/  3.143 : 010                          EX      AF,AF'          ; SAVE CHARACTER TO OUTPUT
    1136/  3.144 :                              CPU     8080
    1137/  3.144 : 333 355              DYASC1  IN      SC.ACE+UR.LSR   ; TERMINAL READY?
    1138/  3.146 : 346 040                      ANI     UC.THE
    1139/  3.150 : 312 144 003                  JZ      DYASC1          ; NOT YET.
    1140/  3.153 :                      
    1141/  3.153 :                              CPU     Z80
    1142/  3.153 : 010                          EX      AF,AF'          ; GET CHARACTER TO OUTPUT
    1143/  3.154 :                              CPU     8080
    1144/  3.154 : 323 350                      OUT     SC.ACE+UR.THR   ; OUTPUT TO UART
    1145/  3.156 :                              CPU     Z80
    1146/  3.156 : 375 351                      JP      (IY)            ; RETURN TO CALLER
    1147/  3.160 :                              CPU     8080
    1148/  3.160 :                      
    1149/  3.160 :                      ;       DYBYT - DYNAMIC RAM BYTE OUTPUT
    1150/  3.160 :                      ;
    1151/  3.160 :                      ;       ENTRY:  (A) = BYTE TO OUTPUT AS OCTAL
    1152/  3.160 :                      ;               (IX) = RETURN ADDRESS
    1153/  3.160 :                      ;       EXIT:   TO (IX)
    1154/  3.160 :                      ;       USES    A,C,IF.F
    1155/  3.160 :                      
    1156/  3.160 : 303 240 016          DYBYT   JMP     DYBYTX
    1157/  3.163 : 366 060              DYBYT.1 ORI     '0'             ; MAKE ASCII
    1158/  3.165 :                      
    1159/  3.165 :                              CPU     Z80
    1160/  3.165 : 375 041 174 003              LD      IY,DYBYT.2
    1161/  3.171 :                              CPU     8080
    1162/  3.171 :                      
    1163/  3.171 : 303 143 003                  JMP     DYASC
    1164/  3.174 :                      
    1165/  3.174 : 171                  DYBYT.2 MOV     A,C
    1166/  3.175 : 346 070                      ANI     00111000B
    1167/  3.177 : 017                          RRC
    1168/  3.200 : 017                          RRC
    1169/  3.201 : 017                          RRC
    1170/  3.202 : 366 060                      ORI     '0'
    1171/  3.204 :                      
    1172/  3.204 :                              CPU     Z80
    1173/  3.204 : 375 041 213 003              LD      IY,DYBYT.4      ; RETURN ADDRESS
    1174/  3.210 :                              CPU     8080
    1175/  3.210 : 303 143 003                  JMP     DYASC
    1176/  3.213 :                      
    1177/  3.213 : 171                  DYBYT.4 MOV     A,C             ; OUTPUT LAST CHARACTER
    1178/  3.214 : 346 007                      ANI     00000111B
    1179/  3.216 : 366 060                      ORI     '0'
    1180/  3.220 :                      
    1181/  3.220 :                              CPU     Z80
    1182/  3.220 : 375 041 227 003              LD      IY,DYBYT.6      ; RETURN ADDRESS
    1183/  3.224 :                              CPU     8080
    1184/  3.224 :                      
    1185/  3.224 : 303 143 003                  JMP     DYASC
    1186/  3.227 :                      
    1187/  3.227 : =3.227O              DYBYT.6 EQU     $
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 35 - 2024-05-13 09:34:53 PM


    1188/  3.227 :                              CPU     Z80
    1189/  3.227 : 335 351                      JP      (IX)            ; RETURN TO CALLER
    1190/  3.231 :                              CPU     8080
    1191/  3.231 :                      
    1192/  3.231 :                      ;       MSQ.PAS - PASS MESSAGE FOR DYNAMIC RAM TEST
    1193/  3.231 :                      ;
    1194/  3.231 :                      
    1195/  3.231 : 015 012 012          MSG.PAS DB      A.CR,A.LF,A.LF
    1196/  3.234 : 011 040 120 141 163          DB      '	 Pass =',11Q,'   '
           3.241 : 163 040 075 011 040
           3.246 : 040 040            
    1197/  3.250 : 000                          DB      0
    1198/  3.251 :                      
    1199/  3.251 : 000 000 000 000 000          DB      0,0,0,0,0,0,0   ; UNUSED BYTES
           3.256 : 000 000            
    1200/  3.260 :                      
    1201/  3.260 : (MACRO)                      ERRMI   1660Q-$
    1201/  3.260 : =>FALSE                      IF (1660Q-$) < 0
    1201/  3.260 :                                ERROR Expression is negative
    1201/  3.260 : [4.177]                      ENDIF
    1202/  3.260 :                              ORG     1660Q
    1203/  3.260 :                      ;       RCK - READ CONSOLE KEYPAD
    1204/  3.260 :                      ;
    1205/  3.260 :                      ;       RCK IS CALLED TO READ A KEYSTROKE FROM THE CONSOLE FRONT PANEL KEYPAD.
    1206/  3.260 :                      ;       SINCE THE H88/H89 DOES NOT HAVE A FRONT PANEL, THIS ROUTINE IS PROVIDED
    1207/  3.260 :                      ;       ONLY TO MAINTAIN COMPATIBILITY WITH PAM-8.
    1208/  3.260 :                      ;       RCK WILL IMMEDIATELY RETURN WITH A VALUE OF 0 (ZERO) IN THE ACCUMULATOR.
    1209/  3.260 :                      ;
    1210/  3.260 :                      ;       ENTRY   NONE
    1211/  3.260 :                      ;       EXIT    (A) = 0
    1212/  3.260 :                      ;       USES    A,F
    1213/  3.260 :                      
    1214/  3.260 :                      ;       RCK MUST HAVE SAME ENTRY AS RCK IN PAM-8
    1215/  3.260 : (MACRO)                      ERRNZ   $-1660Q
    1215/  3.260 : =>FALSE                      IF ($-1660Q) != 0
    1215/  3.260 :                                ERROR Expression is not zero
    1215/  3.260 : [4.191]                      ENDIF
    1216/  3.260 :                      
    1217/  3.260 : =3.260O              RCK     EQU     $
    1218/  3.260 : 257                          XRA     A
    1219/  3.261 : 311                          RET
    1220/  3.262 :                      
    1221/  3.262 :                      ;       RCC - READ CONSOLE CHARACTER.
    1222/  3.262 :                      ;
    1223/  3.262 :                      ;       RCC IS CALLED TO READ A KEYSTROKE FROM THE CONSOLE.
    1224/  3.262 :                      ;       IF A RUBOUT/DELETE IS RECEIVED, EXIT IT TO *ERROR*.
    1225/  3.262 :                      ;
    1226/  3.262 :                      ;       ENTRY   NONE
    1227/  3.262 :                      ;       EXIT    TO ERROR - IF A DELETE OR RUBOUT IS ENCOUNTERED
    1228/  3.262 :                      ;               TO CALLER - WHEN A KEY IS HIT
    1229/  3.262 :                      ;               (A) = ASCII KEY VALUE
    1230/  3.262 :                      ;       USES    A,F
    1231/  3.262 :                      
    1232/  3.262 : =3.262O              RCC     EQU     $
    1233/  3.262 :                      
    1234/  3.262 : 333 355              RCC1    IN      SC.ACE+UR.LSR   ; INPUT ACE LINE STATUS REGISTER
    1235/  3.264 : 346 001                      ANI     UC.DR           ; SEE IF THERE IS A DATA READY
    1236/  3.266 :                              CPU     Z80
    1237/  3.266 : 050 372                      JR      Z,RCC1
    1238/  3.270 :                              CPU     8080
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 36 - 2024-05-13 09:34:53 PM


    1239/  3.270 :                      
    1240/  3.270 : 333 350              RCC2    IN      SC.ACE+UR.RBR   ; ELSE, INPUT CHARACTER
    1241/  3.272 : 346 177                      ANI     01111111B       ; TOSS ANY PARITY
    1242/  3.274 : 376 177                      CPI     A.DEL
    1243/  3.276 : 312 322 000                  JZ      ERROR           ; IF RUBOUT, EXIT TO CALLER
    1244/  3.301 :                      
    1245/  3.301 : 311                          RET                     ; ELSE, EXIT TO CALLER
    1246/  3.302 :                      
    1247/  3.302 :                      ;       WCC - WRITE CONSOLE CHARACTER
    1248/  3.302 :                      ;
    1249/  3.302 :                      ;       WRITE A CHARACTER TO THE CONSOLE UART PORT
    1250/  3.302 :                      ;
    1251/  3.302 :                      ;       ENTRY   (A) = ASCII CHARACTER TI OUTPUT
    1252/  3.302 :                      ;       EXIT    NONE
    1253/  3.302 :                      ;       USES    NONE
    1254/  3.302 :                      
    1255/  3.302 : 365                  WCC     PUSH    PSW             ; SAVE CHARACTER
    1256/  3.303 : 333 355              WCC1    IN      SC.ACE+UR.LSR   ; INPUT ACE STATUS
    1257/  3.305 : 346 040                      ANI     UC.THE          ; SEE IF TRANSMITTER HOLDING REGISTER IS EMPTY
    1258/  3.307 :                              CPU     Z80
    1259/  3.307 : 050 372                      JR      Z,WCC1
    1260/  3.311 :                              CPU     8080
    1261/  3.311 :                      
    1262/  3.311 : 361                          POP     PSW             ; GET CHARACTER
    1263/  3.312 : 323 350                      OUT     SC.ACE+UR.THR   ; OUTPUT TO CONSOLE
    1264/  3.314 : 311                          RET
    1265/  3.315 :                      
    1266/  3.315 :                      ;       THE FOLLOWING IS ONLY A PORTION OF THE DYNAMIC RAM TEST!!
    1267/  3.315 :                      ;
    1268/  3.315 : 353                  DY9.5   XCHG                    ; SAVE ERROR ADDRESS
    1269/  3.316 : 041 341 007                  LXI     H,MSG.EQ        ; OUTPUT ' = '
    1270/  3.321 :                      
    1271/  3.321 :                              CPU     Z80
    1272/  3.321 : 335 041 330 003              LD      IX,DY9.8        ; RETURN ADDRESS
    1273/  3.325 :                              CPU     8080
    1274/  3.325 :                      
    1275/  3.325 : 303 265 007                  JMP     DYMSG           ; OUTPUT STRING
    1276/  3.330 :                      
    1277/  3.330 : 032                  DY9.8   LDAX    D               ; OUTPUT RAM CONTENTS
    1278/  3.331 :                      
    1279/  3.331 :                              CPU     Z80
    1280/  3.331 : 335 041 252 013              LD      IX,DYMEM10      ; RETURN ADDRESS
    1281/  3.335 :                              CPU     8080
    1282/  3.335 :                      
    1283/  3.335 : 303 160 003                  JMP     DYBYT
    1284/  3.340 :                      
    1285/  3.340 :                      ;;      VIEW3. - CONTINUATION OF *VIEW*
    1286/  3.340 :                      ;
    1287/  3.340 :                      ;       SEE IF END OF BYTES
    1288/  3.340 :                      ;
    1289/  3.340 :                      
    1290/  3.340 : 043                  VIEW3.  INX     H               ; BUMP POINTER
    1291/  3.341 : 315 112 015                  CALL    CHKRAD          ; GET RADIX
    1292/  3.344 : 076 360                      MVI     A,11110000B     ; ASSUME HEX
    1293/  3.346 :                              CPU     Z80
    1294/  3.346 : 040 002                      JR      NZ,VIEW3.A      ; IF IT WAS HEX
    1295/  3.350 :                              CPU     8080
    1296/  3.350 : 076 370                      MVI     A,11111000B
    1297/  3.352 : 245                  VIEW3.A ANA     L               ; (A) = MASKWS ddr lsb
    1298/  3.353 : 275                          CMP     L               ; SAME?
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 37 - 2024-05-13 09:34:53 PM


    1299/  3.354 : 311                          RET                     ; LET CALLER DECIDE
    1300/  3.355 :                      
    1301/  3.355 :                      ;;      VIEW9 = DP THE ASCII
    1302/  3.355 :                      ;
    1303/  3.355 :                      
    1304/  3.355 : 052 067 040          VIEW9   LHLD    BLKICW          ; RESTORE REGISTERS
    1305/  3.360 : 303 171 010                  JMP     VIEW5
    1306/  3.363 :                      
    1307/  3.363 : 000 000 000 000 000          DB      0,0,0,0,0,0     ; UNUSED BYTES
           3.370 : 000                
    1308/  3.371 :                      
    1309/  3.371 :                      ;       IO ROUTINES TO BE COPIED INTO AND USED IN RAM.
    1310/  3.371 :                      ;
    1311/  3.371 :                      ;       MUST CONTINUE TO 3777A FOR PROPER COPY.
    1312/  3.371 :                      ;       THE TABLE MUST ALSO BE BACKWARDS TO THE FINAL RAM
    1313/  3.371 :                      
    1314/  3.371 : (MACRO)                      ERRMI   2000Q-7-$
    1314/  3.371 : =>FALSE                      IF (2000Q-7-$) < 0
    1314/  3.371 :                                ERROR Expression is negative
    1314/  3.371 : [5.034]                      ENDIF
    1315/  3.371 :                              ORG     2000Q-7
    1316/  3.371 :                      
    1317/  3.371 : =3.371O              PRSROM  EQU     $
    1318/  3.371 : 001                          DB      1               ; REFIND
    1319/  3.372 : 000                          DB      0               ; CTLFLG
    1320/  3.373 : 000                          DB      0               ; MFLAG
    1321/  3.374 : 000                          DB      0               ; DSPMOD
    1322/  3.375 : 000                          DB      0               ; DSPROT
    1323/  3.376 : 012                          DB      10              ; REGI
    1324/  3.377 : 311                          DB      MI.RET
    1325/  4.000 :                      
    1326/  4.000 : (MACRO)                      ERRNZ   $-2000Q
    1326/  4.000 : =>FALSE                      IF ($-2000Q) != 0
    1326/  4.000 :                                ERROR Expression is not zero
    1326/  4.000 : [5.046]                      ENDIF
    1327/  4.000 :                      
    1328/  4.000 :                      ;       INIT0X - EXTENSION OF INIT0 TO SUPPORT H88
    1329/  4.000 :                      
    1330/  4.000 : 076 002              INIT0X  MVI     A,H88B.CK       ; ENABLE LOCL
    1331/  4.002 : 323 362                      OUT     H88.CTL
    1332/  4.004 :                      
    1333/  4.004 :                      ;       SET UP ACE FOR CONSOLE COMMUNICATIONS
    1334/  4.004 :                      ;
    1335/  4.004 : 076 200                      MVI     A,UC.DLA        ; SET DIVISOR LATCH ACCESS BIT
    1336/  4.006 : 323 353                      OUT     SC.ACE+UR.LCR
    1337/  4.010 : 041 101 004                  LXI     H,BRTAB         ; (H,L) = BEGINNING OF BAUD RATE TABLE
    1338/  4.013 : 333 362                      IN      H88.SW          ; INPUT SWITCHES FOR DESIRED BAUD RATE
    1339/  4.015 : 346 100                      ANI     H88S.BR         ; MASK FOR BAUD RATE SWITCHES ONLY
    1340/  4.017 : 017                          RRC                     ; SHIFT FOR A *2 FOR TABLE
    1341/  4.020 : 017                          RRC
    1342/  4.021 : 017                          RRC
    1343/  4.022 : 017                          RRC
    1344/  4.023 : 017                          RRC
    1345/  4.024 : 205                          ADD     L               ; ADD DISPLACEMENT FROM BEGINNING OF TABLE
    1346/  4.025 : 157                          MOV     L,A
    1347/  4.026 : 176                          MOV     A,M             ; GET MSB OF DIVISOR
    1348/  4.027 : 323 351                      OUT     SC.ACE+UR.DLM
    1349/  4.031 : 043                          INX     H               ; GET LSB
    1350/  4.032 : 176                          MOV     A,M
    1351/  4.033 : 323 350                      OUT     SC.ACE+UR.DLL
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 38 - 2024-05-13 09:34:53 PM


    1352/  4.035 : 076 003                      MVI     A,UC.8BW        ; SET 8 BITS, 1 STOP BIT, NO PARITY
    1353/  4.037 : 323 353                      OUT     SC.ACE+UR.LCR
    1354/  4.041 : 076 000                      MVI     A,0             ; SET NO INTERRUPTS
    1355/  4.043 : 323 351                      OUT     SC.ACE+UR.IER
    1356/  4.045 :                      
    1357/  4.045 :                      ;       WAIT A WHILE TO ALLOW THE CONSOLE RESET TO FINISH SO IT CAN
    1358/  4.045 :                      ;       ACCEPT THE FIRST PROMPT
    1359/  4.045 :                      ;
    1360/  4.045 : 303 113 016                  JMP     INT0X0          ; DO OTHER STUFF FIRST
    1361/  4.050 : 015                  INIT0X1 DCR     C
    1362/  4.051 :                              CPU     Z80
    1363/  4.051 : 040 375                      JR      NZ,INIT0X1
    1364/  4.053 :                      
    1365/  4.053 : 020 373                      DJNZ    INIT0X1
    1366/  4.055 :                              CPU     8080
    1367/  4.055 :                      
    1368/  4.055 :                      ;       INPUT SWITCH TO SEE IF TO BEGIN OPERATION OR MEMORY TEST
    1369/  4.055 :                      ;
    1370/  4.055 : 333 362                      IN      H88.SW          ; GET SWITCHES
    1371/  4.057 : 346 040                      ANI     H88S.M          ; MASK FOR MEMORY TEST ONLY
    1372/  4.061 : 312 032 016                  JZ      MEMORY.         ; IF TO PERFORM MEMORY TESTS
    1373/  4.064 :                      
    1374/  4.064 :                      ;       REPLACE WHAT WAS ORIGINALLY AT THE JUMP WHICH GOT US HERE
    1375/  4.064 :                      ;
    1376/  4.064 : 021 371 003                  LXI     D,PRSROM        ; (DE) = ROM COPY OF PRS CODE
    1377/  4.067 : 257                          XRA     A
    1378/  4.070 : 062 123 041                  STA     AUTOB           ; INITIAL AUTO BOOT FLAG
    1379/  4.073 : 062 066 040                  STA     DATA            ; INITIAL 362Q PORT DATA SAVE BYTE
    1380/  4.076 : 303 003 000                  JMP     INIT0.0         ; RETURN TO ORIGINAL CODE
    1381/  4.101 :                      
    1382/  4.101 :                      ;       BRTAB - BAUD RATE DIVISOR TABLE
    1383/  4.101 :                      ;
    1384/  4.101 : =4.101O              BRTAB   EQU     $
    1385/  4.101 :                      
    1386/  4.101 : 000 014              BR96    DB      0,12            ;   9600 BAUD
    1387/  4.103 : 000 006              BR19.2  DB      0,6             ; 19,200 BAUD
    1388/  4.105 :                      ;BR38.4 DB      0,3             ; 38,400 BAUD
    1389/  4.105 :                      ;BR56.0 DB      0,2             ; 56,000 BAUD
    1390/  4.105 :                      
    1391/  4.105 :                      ;       SET     */256
    1392/  4.105 :                      ;       ERRNZ   ERTAB/256-.     ; TABLE MUST BE IN ONE PAGE
    1393/  4.105 :                      
    1394/  4.105 :                      ;       SAVALLX - SAVALL EXTENSION TO MAKE ROOM FOR A JUMP TO THE NMI HANDLER
    1395/  4.105 :                      
    1396/  4.105 :                      SAVALLX                         ; REPLACE OLD CODE
    1397/  4.105 : 345                          PUSH     H              ; SET ON STACK AS 'REGISTER'
    1398/  4.106 : 325                          PUSH     D              ; SET RETURN ADDRESS
    1399/  4.107 : 021 011 040                  LXI      D,CTLFLG
    1400/  4.112 : 032                          LDAX     D
    1401/  4.113 : 303 151 000                  JMP      SAVALLR        ; RETURN TO OLD CODE
    1402/  4.116 :                      
    1403/  4.116 :                      ;       NMI - NON MASKABLE INTERRUPT
    1404/  4.116 :                      ;
    1405/  4.116 :                      ;       NMI IS USED AS THE TRAP FOR ALL ILLEGAL PORT REQUESTS
    1406/  4.116 :                      ;
    1407/  4.116 :                      ;       PORT ADDRESSES TRAPPED ARE:
    1408/  4.116 :                      ;
    1409/  4.116 :                      ;                       IN 360Q FRONT PANEL KEYBOARD INPUT
    1410/  4.116 :                      ;                      OUT 360Q FRONT PANEL CONTROL
    1411/  4.116 :                      ;                      OUT 361Q FRONT PANEL DISPLAY CONTROL
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 39 - 2024-05-13 09:34:53 PM


    1412/  4.116 :                      ;                   IN/OUT 372Q CONSOLE DATA FOR AN 8251A
    1413/  4.116 :                      ;                      OUT 373Q CONSOLE CONTROL FOR AN 8251A
    1414/  4.116 :                      ;
    1415/  4.116 :                      ;
    1416/  4.116 :                      ;               THESE PORT REQUESTS ARE RESPONDED TO AS FOLLOWS:
    1417/  4.116 :                      ;
    1418/  4.116 :                      ;                       IN 360Q RETURNS WITH (A) = 377Q TO SHOW THAT
    1419/  4.116 :                      ;                               NO FRONT PANEL SWITCHES ARE PRESSED
    1420/  4.116 :                      ;
    1421/  4.116 :                      ;                      OUT 360Q MOVES BIT 6 (CB.CLI) TO BIT 1, AND
    1422/  4.116 :                      ;                              BIT 4 (CB.SSI) INVERTED, TO BIT 0. AND
    1423/  4.116 :                      ;                              OUTPUTS THESE BITS TO PORT 362Q TO
    1424/  4.116 :                      ;                              CONTROL THE CLOCK AND SINGLE STEP INTERRUPTS
    1425/  4.116 :                      ;
    1426/  4.116 :                      ;                      OUTPUTS TO 361Q, 372Q, AND 373Q JUST RETURN
    1427/  4.116 :                      ;
    1428/  4.116 :                      ;                      INPUTS FROM 361Q, 372Q, AND 373Q RETURN WITH (A) = 0
    1429/  4.116 :                      ;                              TO INDICATE AN EMPTY BUSS
    1430/  4.116 :                      ;
    1431/  4.116 :                      ;
    1432/  4.116 :                      ;       ENTRY   NONE
    1433/  4.116 :                      ;
    1434/  4.116 :                      ;       EXIT    NONE
    1435/  4.116 :                      ;
    1436/  4.116 :                      ;       USES    (A) ONLY IF 'FAKING' AN INPUT
    1437/  4.116 :                      
    1438/  4.116 : 343                  NMI     XTHL                    ; GET RETURN ADDRESS FROM STACK
    1439/  4.117 : 042 064 040                  SHLD    NMIRET          ; SAVE FOR LATER USE
    1440/  4.122 : 343                          XTHL                    ; PUT RETURN ADDRESS BACK ON STACK
    1441/  4.123 :                      
    1442/  4.123 : 345                          PUSH    H               ; SAVE REGISTERS
    1443/  4.124 : 305                          PUSH    B
    1444/  4.125 : 365                          PUSH    PSW
    1445/  4.126 : 107                          MOV     B,A             ; SAVE (A) PRIOR TO I/O
    1446/  4.127 : 052 064 040                  LHLD    NMIRET          ; GET RETURN ADDRESS
    1447/  4.132 : 053                          DCX     H               ; BACK UP TO PORT # WHICH GOT US HERE
    1448/  4.133 : 176                          MOV     A,M             ; GET PORT #
    1449/  4.134 :                      
    1450/  4.134 : 376 360                      CPI     360Q            ; PORT 360?
    1451/  4.136 :                              CPU     Z80
    1452/  4.136 : 050 033                      JR      Z,NMI1          ; IF PORT WAS 360Q
    1453/  4.140 :                              CPU     8080
    1454/  4.140 :                      
    1455/  4.140 :                      ;       PORT REFERENCED WAS 361Q, 372Q, OR 373Q
    1456/  4.140 :                      ;
    1457/  4.140 : 376 361                      CPI     361Q            ; MAKE SURE PORT IS LEGAL
    1458/  4.142 :                              CPU     Z80
    1459/  4.142 : 050 010                      JR      Z,NMI0.5        ; IF LEGAL
    1460/  4.144 :                              CPU     8080
    1461/  4.144 :                      
    1462/  4.144 : 376 372                      CPI     372Q
    1463/  4.146 :                              CPU     Z80
    1464/  4.146 : 050 004                      JR      Z,NMI0.5
    1465/  4.150 :                              CPU     8080
    1466/  4.150 :                      
    1467/  4.150 : 376 373                      CPI     373Q
    1468/  4.152 :                              CPU     Z80
    1469/  4.152 : 040 062                      JR      NZ,NMI2.5       ; IF NONE OF THE ABOVE, EXIT
    1470/  4.154 :                              CPU     8080
    1471/  4.154 :                      
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 40 - 2024-05-13 09:34:53 PM


    1472/  4.154 : 053                  NMI0.5  DCX     H               ; POINT TO IN/OUT INSTRUCTION
    1473/  4.155 : 176                          MOV     A,M             ; SEE IF INPUT OR OUTPUT
    1474/  4.156 : 376 323                      CPI     MI.OUT
    1475/  4.160 :                              CPU     Z80
    1476/  4.160 : 050 054                      JR      Z,NMI2.5        ; IF OUTPUT, JUST EXIT
    1477/  4.162 :                              CPU     8080
    1478/  4.162 :                      
    1479/  4.162 : 376 333                      CPI     MI.IN
    1480/  4.164 :                              CPU     Z80
    1481/  4.164 : 040 050                      JR      NZ,NMI2.5       ; IF NOT INPUT EITHER, ILLEGAL SO EXIT
    1482/  4.166 :                              CPU     8080
    1483/  4.166 :                      
    1484/  4.166 : 361                          POP     PSW             ; RESTORE FLAGS
    1485/  4.167 : 076 000                      MVI     A,0             ; ELSE, RETURN LIKE AN EMPTY BUSS
    1486/  4.171 :                              CPU     Z80
    1487/  4.171 : 030 044                      JR      NMI3            ; EXIT
    1488/  4.173 :                              CPU     8080
    1489/  4.173 :                      
    1490/  4.173 : 053                  NMI1    DCX     H               ; POINT TO IN/OUT INSTRUCTION
    1491/  4.174 : 176                          MOV     A,M             ; GET I/O INSTRUCTION
    1492/  4.175 : 376 333                      CPI     MI.IN           ; INPUT?
    1493/  4.177 :                              CPU     Z80
    1494/  4.177 : 040 005                      JR      NZ,NMI1.5       ; IF NOT 'IN'
    1495/  4.201 :                              CPU     8080
    1496/  4.201 :                      
    1497/  4.201 : 361                          POP     PSW             ; RESTORE FLAGS
    1498/  4.202 : 076 377                      MVI     A,11111111B     ; SHOW 'NO KEYS PRESSED'
    1499/  4.204 :                              CPU     Z80
    1500/  4.204 : 030 031                      JR      NMI3            ; EXIT
    1501/  4.206 :                              CPU     8080
    1502/  4.206 :                      
    1503/  4.206 : 376 323              NMI1.5  CPI     MI.OUT          ; MAKE SURE INSTRUCTION IF AN 'OUT'
    1504/  4.210 :                              CPU     Z80
    1505/  4.210 : 040 024                      JR      NZ,NMI2.5       ; IF NOT
    1506/  4.212 :                              CPU     8080
    1507/  4.212 :                      
    1508/  4.212 : 170                  NMI2    MOV     A,B             ; GET OUTPUT DATA AGAIN
    1509/  4.213 : 346 120                      ANI     CB.CLI+CB.SSI   ; MOVE CLOCK INFO TO BIT 1
    1510/  4.215 : 017                          RRC
    1511/  4.216 : 017                          RRC
    1512/  4.217 : 017                          RRC
    1513/  4.220 : 017                          RRC
    1514/  4.221 : 017                          RRC
    1515/  4.222 :                              CPU     Z80
    1516/  4.222 : 070 001                      JR      C,NMI2.2
    1517/  4.224 :                              CPU     8080
    1518/  4.224 : 074                          INR     A
    1519/  4.225 : 041 066 040          NMI2.2  LXI     H,DATA          ; OR WITH THE BYTE IN RAM
    1520/  4.230 : 266                          ORA     M               ; BEFORE OUTPUT IT
    1521/  4.231 : 323 362                      OUT     H88.CTL         ; SET IN HARDWARE
    1522/  4.233 : 346 374                      ANI     11111100B
    1523/  4.235 : 167                          MOV     M,A
    1524/  4.236 :                      
    1525/  4.236 : 361                  NMI2.5  POP     PSW             ; RESTORE (A,F)
    1526/  4.237 :                      
    1527/  4.237 : 301                  NMI3    POP     B
    1528/  4.240 : 341                          POP     H
    1529/  4.241 :                      ;       RET                     ; Z80 RETURN FROM NMI
    1530/  4.241 : 355 105                      DB      355Q,105Q
    1531/  4.243 :                      
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 41 - 2024-05-13 09:34:53 PM


    1532/  4.243 :                      ;       ATB     - AUTO BOOT ROUTINE CONTINUE
    1533/  4.243 :                      
    1534/  4.243 : 167                  ATB     MOV     M,A             ; SET AUTO BOOT FLAG
    1535/  4.244 : 076 012                      MVI     A,10            ; SET TO AUTO BOOT ROUTINE
    1536/  4.246 : 315 052 003                  CALL    LRA.
    1537/  4.251 : 021 205 001                  LXI     D,AUTOBO        ; SET AUTO BOOT ROUTINE
    1538/  4.254 :                              CPU     Z80
    1539/  4.254 : 030 017                      JR      BOOTX
    1540/  4.256 :                              CPU     8080
    1541/  4.256 :                      
    1542/  4.256 : (MACRO)                      ERRMI   2256-$
    1542/  4.256 : =>FALSE                      IF (2256-$) < 0
    1542/  4.256 :                                ERROR Expression is negative
    1542/  4.256 : [6.006]                      ENDIF
    1543/  4.256 :                              ORG     2256Q
    1544/  4.256 :                      ;       BOOT H-17 OR Z47 ENTRY POINT FOR H88
    1545/  4.256 :                      ;
    1546/  4.256 :                      ;       ENTRY   NONE
    1547/  4.256 :                      ;
    1548/  4.256 :                      ;       EXIT    (DE) = NORMAL BOOT ROUTINE ADDRESS
    1549/  4.256 :                      ;
    1550/  4.256 :                      ;       USES    ALL
    1551/  4.256 :                      
    1552/  4.256 : 041 234 006          BOOT    LXI     H,MSG.BT        ; COMPLETE BOOT MESSAGE
    1553/  4.261 : 315 100 006                  CALL    TYPMSG
    1554/  4.264 : 363                          DI
    1555/  4.265 : 076 012                      MVI     A,10
    1556/  4.267 : 315 052 003                  CALL    LRA.            ; GET LOCATION OF USER PC
    1557/  4.272 : 021 261 001                  LXI     D,NBOOT         ; SET ITS VALUE TO THE NORMAL BOOT ROUTINE
    1558/  4.275 : 163                  BOOTX   MOV     M,E
    1559/  4.276 : 043                          INX     H
    1560/  4.277 : 162                          MOV     M,D
    1561/  4.300 : 373                          EI
    1562/  4.301 : 303 063 000                  JMP     GO.             ; DO IT
    1563/  4.304 :                      
    1564/  4.304 :                      
    1565/  4.304 :                      ;       TMOUT   - BOOT CODE TIME OUT ROUTINE
    1566/  4.304 :                      ;
    1567/  4.304 :                      ;       TMOUT IS ENTERED FROM TIMER INTERRUPT EVER 100MS. AND IT WILL
    1568/  4.304 :                      ;       EXIT:   IF BOOT SUCCESS THEN TIMER OFF.
    1569/  4.304 :                      ;               IF 15 SECONDS TIME OUT AND BOOT IS NOT SUCCESS YES
    1570/  4.304 :                      ;                  THEN ABORT BOOT Z47 & TO MONITOR LOOP
    1571/  4.304 :                      ;               IF < 15S & 3.5S THEN RE-BOOT
    1572/  4.304 :                      ;
    1573/  4.304 :                      ;       NOTE: Because the H37 and H67 run with interrupts disabled
    1574/  4.304 :                      ;             during portions of the code, they handle their own
    1575/  4.304 :                      ;             time outs.
    1576/  4.304 :                      ;
    1577/  4.304 :                      ;       ENTRY:  (TMFG)  = 1 IF THE TIME OUT IS FOR Z47
    1578/  4.304 :                      ;                       = 0 IF THE TIME OUT IS FOR H17
    1579/  4.304 :                      ;
    1580/  4.304 :                      ;       EXIT:   NONE
    1581/  4.304 :                      ;
    1582/  4.304 :                      ;       USE:    ALL (WHEN RETURN, ALL REGISTERS ARE RESTORED)
    1583/  4.304 :                      
    1584/  4.304 : =4.304O              TMOUT   EQU     $
    1585/  4.304 : 333 355                      IN      SC.ACE+UR.LSR   ; INPUT ACE LINE STATUS REGISTER
    1586/  4.306 : 346 001                      ANI     UC.DR           ; SEE IF THERE IS A DATA READY
    1587/  4.310 :                              CPU     Z80
    1588/  4.310 : 050 011                      JR      Z,TMOUT4        ; CHECK IF IT IS <DELETE>
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 42 - 2024-05-13 09:34:53 PM


    1589/  4.312 :                              CPU     8080
    1590/  4.312 :                      
    1591/  4.312 : 333 350                      IN      SC.ACE+UR.RBR   ; INPUT DATA FROM KB
    1592/  4.314 : 346 177                      ANI     01111111B       ; IS IT <DEL>?
    1593/  4.316 : 376 177                      CPI     A.DEL
    1594/  4.320 : 312 171 002                  JZ      NODEV           ; IF IT, ABORT THE BOOT
    1595/  4.323 :                                                      ; ELSE IGNORE THE INPUT
    1596/  4.323 :                      
    1597/  4.323 : 041 121 041          TMOUT4  LXI     H,TMFG
    1598/  4.326 : 176                          MOV     A,M
    1599/  4.327 : 247                          ANA     A
    1600/  4.330 :                              CPU     Z80
    1601/  4.330 : 010                          EX      AF,AF'          ; SAVE Z FLAG
    1602/  4.331 :                              CPU     8080
    1603/  4.331 : 072 033 040                  LDA     TICCNT          ; GET TIC
    1604/  4.334 : 247                          ANA     A               ; SET ZERO FLAG
    1605/  4.335 :                              CPU     Z80
    1606/  4.335 : 040 024                      JR      NZ,TMOUT2       ; NOT IN 0.5 SECOND
    1607/  4.337 :                              CPU     8080
    1608/  4.337 : 043                          INX     H               ; SET TO MYCNT
    1609/  4.340 :                      ;       ERRNZ   MYCNT-TMFG-1    ; MYCNT MUST FOLLOW TMFG
    1610/  4.340 : 064                          INR     M               ; INCREASE THE COUNT FOR 0.5 SECOND
    1611/  4.341 : 176                          MOV     A,M
    1612/  4.342 : 376 036                      CPI     30              ; CHECK IF MORE THAN 15 SECONDS
    1613/  4.344 : 322 171 002                  JNC     NODEV           ; NO DEVICE?
    1614/  4.347 : 336 007              TMOUT1  SBI     7               ; IS IT 3.5 SECONDS?
    1615/  4.351 :                              CPU     Z80
    1616/  4.351 : 070 010                      JR      C,TMOUT2        ; IF NOT, WAIT
    1617/  4.353 : 040 372                      JR      NZ,TMOUT1       ; CHECK MORE
    1618/  4.355 : 010                          EX      AF,AF'
    1619/  4.356 :                              CPU     8080
    1620/  4.356 : 302 036 002                  JNZ     RETRY           ; IF IT IS Z47, THEN RE-BOOT
    1621/  4.361 :                              CPU     Z80
    1622/  4.361 : 030 002                      JR      TMOUT3          ; IT IS H-17, CONTINUE IT CLOCK ROUTINE
    1623/  4.363 : 010                  TMOUT2  EX      AF,AF'          ; CHECK IT IS Z47 OR H17
    1624/  4.364 :                              CPU     8080
    1625/  4.364 : 300                          RNZ                     ; Z47, THEN RETURN
    1626/  4.365 : 303 031 034          TMOUT3  JMP     CLOCK17         ; CONTINUE H17 CLOCK ROUTINE
    1627/  4.370 :                      
    1628/  4.370 : (MACRO)                      ERRMI   2370Q-4
    1628/  4.370 : =>FALSE                      IF (2370Q-4) < 0
    1628/  4.370 :                                ERROR Expression is negative
    1628/  4.370 : [6.092]                      ENDIF
    1629/  4.370 :                              ORG     2370Q
    1630/  4.370 :                      ;       SUBM - SUBSTITUTE MEMORY
    1631/  4.370 :                      ;
    1632/  4.370 :                      ;       SUBM INPUTS A MEMORY ADDRESS FROM THE CONSOLE AND THEN DISPLAYS
    1633/  4.370 :                      ;       THAT ADDRESS AND ITS CONTENTS.  IF A CARRIAGE RETURN IS THEN TYPED,
    1634/  4.370 :                      ;       CONTROL RETURNS TO THE MONITOR.  IF A SPACE IS TYPED, THE NEXT
    1635/  4.370 :                      ;       MEMORY LOCATION AND CONTENTS ARE DISPLAYED.  IF A MINUS SIGN IS
    1636/  4.370 :                      ;       TYPED, THE PREVIOUS MEMORY LOCATION AND CONTENTS ARE DISPLAYED.
    1637/  4.370 :                      ;       IF AN OCTAL CHARACTER IS TYPED, A BYTE IS ENTERED AN PLACED AT THE
    1638/  4.370 :                      ;       CURRENT MEMORY LOCATION.
    1639/  4.370 :                      ;
    1640/  4.370 :                      ;       ENTRY   NONE
    1641/  4.370 :                      ;       EXIT    NONE
    1642/  4.370 :                      ;       USES    A,E,H,L,F
    1643/  4.370 :                      
    1644/  4.370 : 041 201 006          SUBM    LXI     H,MSG.SUB       ; COMPLETE SUBSTITUTE MESSAGE
    1645/  4.373 : 315 100 006                  CALL    TYPMSG
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 43 - 2024-05-13 09:34:53 PM


    1646/  4.376 : 315 012 015                  CALL    IROC            ; INPUT FIRST CHARACTER
    1647/  5.001 : 320                          RNC                     ; IF A RETURN EXIT
    1648/  5.002 :                      
    1649/  5.002 : 041 003 040                  LXI     H,IOWRK+1       ; ELSE, INPUT A STARTING ADDRESS
    1650/  5.005 : 026 015                      MVI     D,A.CR          ; ENDING WITH A RETURN
    1651/  5.007 : 315 023 015                  CALL    IOA
    1652/  5.012 : 353                          XCHG                    ; (H,L) = INPUT ADDRESS
    1653/  5.013 :                      
    1654/  5.013 : 315 064 015          SUBM1   CALL    TOA             ; TYPE CRLF, ADDRESS, AND A SPACE
    1655/  5.016 : 176                          MOV     A,M             ; GET MEMORY CONTENTS FOR DISPLAY
    1656/  5.017 : 315 077 015                  CALL    TOB
    1657/  5.022 : 076 040                      MVI     A,' '           ; SPACE
    1658/  5.024 : 315 302 003                  CALL    WCC
    1659/  5.027 :                      
    1660/  5.027 : 315 051 015          SUBM2   CALL    IOC             ; INPUT FIRST CHARACTER
    1661/  5.032 : 322 075 005                  JNC     SUBM7           ; IF FIRST CHARACTER IS OCTAL
    1662/  5.035 :                      
    1663/  5.035 : 376 040                      CPI     ' '             ; SPACE?
    1664/  5.037 : 302 046 005                  JNZ     SUBM4           ; IF NOT A SPACE
    1665/  5.042 :                      
    1666/  5.042 : 043                  SUBM3   INX     H               ; POINT TO NEXT ADDRESS
    1667/  5.043 : 303 013 005                  JMP     SUBM1           ; DISPLAY NEXT
    1668/  5.046 :                      
    1669/  5.046 : 376 055              SUBM4   CPI     '-'             ; MINUS?
    1670/  5.050 : 302 062 005                  JNZ     SUBM6           ; IF NOT
    1671/  5.053 :                      
    1672/  5.053 : 315 302 003          SUBM5   CALL    WCC             ; ECHO HYPHEN
    1673/  5.056 : 053                          DCX     H               ; POINT TO PREVIOUS ADDRESS
    1674/  5.057 : 303 013 005                  JMP     SUBM1           ; DISPLAY PREVIOUS
    1675/  5.062 :                      
    1676/  5.062 : 376 015              SUBM6   CPI     A.CR            ; RETURN?
    1677/  5.064 : 310                          RZ                      ; IF RETURN, EXIT
    1678/  5.065 :                      
    1679/  5.065 : 076 007                      MVI     A,A.BEL         ; ELSE, DING BELL
    1680/  5.067 : 315 302 003                  CALL    WCC
    1681/  5.072 : 303 027 005                  JMP     SUBM2           ; TRY AGAIN
    1682/  5.075 :                      
    1683/  5.075 : 066 000              SUBM7   MVI     M,0             ; ZERO BYTE TO BE BUILT
    1684/  5.077 :                      
    1685/  5.077 : 315 302 003          SUBM8   CALL    WCC             ; ECHO OCTAL CHARACTER
    1686/  5.102 : 315 352 014                  CALL    SUBM10
    1687/  5.105 : 315 051 015          SUBM9   CALL    IOC             ; INPUT NEXT CHARACTER
    1688/  5.110 : 322 077 005                  JNC     SUBM8           ; IF OCTAL
    1689/  5.113 :                      
    1690/  5.113 : 376 040                      CPI     ' '             ; SPACE?
    1691/  5.115 : 312 042 005                  JZ      SUBM3           ; IF SPACE, DISPLAY NEXT BYTE
    1692/  5.120 :                      
    1693/  5.120 : 376 055                      CPI     '-'             ; MINUS?
    1694/  5.122 : 312 053 005                  JZ      SUBM5           ; IF MINUS, DISPLAY PREVIOUS
    1695/  5.125 :                      
    1696/  5.125 : 376 015                      CPI     A.CR            ; RETURN?
    1697/  5.127 : 310                          RZ                      ; IF RETURN, EXIT
    1698/  5.130 :                      
    1699/  5.130 : 076 007                      MVI     A,A.BEL         ; ELSE, DING BELL
    1700/  5.132 : 315 302 003                  CALL    WCC
    1701/  5.135 : 303 105 005                  JMP     SUBM9           ; TRY AGAIN
    1702/  5.140 :                      
    1703/  5.140 :                      ;       IROC - INPUT A RETURN OR AN OCTAL CHARACTER
    1704/  5.140 :                      ;
    1705/  5.140 :                      ;       IROC INPUTS A CHARACTER FROM THE CONSOLE AND WAITS UNTIL IT
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 44 - 2024-05-13 09:34:53 PM


    1706/  5.140 :                      ;       RECEIVES EITHER A VALID OCTAL CHARACTER OR A CARRIAGE RETURN
    1707/  5.140 :                      ;
    1708/  5.140 :                      ;       ENTRY   NONE
    1709/  5.140 :                      ;       EXIT    (A) = INPUT CHARACTER
    1710/  5.140 :                      ;               'C' = SET IF CHARACTER IS OCTAL
    1711/  5.140 :                      ;       USES    A,F
    1712/  5.140 :                      
    1713/  5.140 : 315 262 003          IROCO   CALL    RCC             ; INPUT CHARACTER
    1714/  5.143 : 376 015                      CPI     A.CR            ; RETURN?
    1715/  5.145 : 310                          RZ                      ; IF A CR
    1716/  5.146 :                      
    1717/  5.146 : 376 060                      CPI     '0'             ; < 0?
    1718/  5.150 : 332 156 005                  JC      IROC1           ; IF < OCTAL
    1719/  5.153 :                      
    1720/  5.153 : 376 070                      CPI     '8'             ; > 8?
    1721/  5.155 : 330                          RC                      ; IF OCTAL
    1722/  5.156 :                      
    1723/  5.156 : 076 007              IROC1   MVI     A,A.BEL         ; ELSE, RING BELL
    1724/  5.160 : 315 302 003                  CALL    WCC
    1725/  5.163 : 303 012 015                  JMP     IROC            ; TRY AGAIN
    1726/  5.166 :                      
    1727/  5.166 :                      ;       IOA1 - INPUT OCTAL ADDRESS
    1728/  5.166 :                      ;
    1729/  5.166 :                      ;       IOA1 IS A CONTINUATION OF *IOA* AND INPUTS A SPLIT OCTAL ADDRESS
    1730/  5.166 :                      ;       WITHOUT REQUIRING LEADING ZEROS
    1731/  5.166 :                      ;
    1732/  5.166 :                      ;       ENTRY   (H,L) = ADDRESS + 1 WHERE INPUT ADDRESS IS TO BE PLACED
    1733/  5.166 :                      ;               (A) = FIRST OCTAL CHARACTER IF 'C' IS SET
    1734/  5.166 :                      ;       EXIT    (D,E) = INPUT ADDRESS
    1735/  5.166 :                      ;               (A) = LAST INPUT CHARACTER
    1736/  5.166 :                      ;       USES    A,D,E,H,L,F
    1737/  5.166 :                      
    1738/  5.166 : 305                  IOA1    PUSH    B               ; SAVE (B,C)
    1739/  5.167 : 102                          MOV     B,D             ; (B) = TERMINATION CHARACTER
    1740/  5.170 : 036 000                      MVI     E,0             ; CLEAR PSEUDO FLAGS
    1741/  5.172 : 345                          PUSH    H               ; SAVE ADDRESS WHERE INPUT IS TO BE PLACED
    1742/  5.173 : 041 000 000                  LXI     H,0             ; SET NEW VALUE TO ZERO
    1743/  5.176 : 324 262 003          IOA2    CNC     RCC             ; IF CARRY SET, FIRST CHARACTER IS IN ACC
    1744/  5.201 : 315 271 005                  CALL    IOC.            ; CHECK VALIDITY
    1745/  5.204 : 332 230 005                  JC      IOA3            ; IF < OCTAL
    1746/  5.207 :                      
    1747/  5.207 : 315 302 003                  CALL    WCC             ; ECHO OCTAL CHARACTER
    1748/  5.212 : 346 007                      ANI     00000111B       ; GET BINARY VALUE
    1749/  5.214 : 365                          PUSH    PSW             ; SAVE NEW CHARACTER VALUE
    1750/  5.215 : 051                          DAD     H               ; SHIFT THREE TO MAKE ROOM FOR NEW CHARACTER
    1751/  5.216 : 051                          DAD     H
    1752/  5.217 : 051                          DAD     H
    1753/  5.220 : 365                          PUSH    PSW             ; SAVE CARRY FORM DAD
    1754/  5.221 : 321                          POP     D               ; SAVE FLAG RESULT IN E
    1755/  5.222 : 361                          POP     PSW             ; RETURN NEW CHARACTER VALUE TO (A)
    1756/  5.223 : 205                          ADD     L
    1757/  5.224 : 157                          MOV     L,A
    1758/  5.225 : 303 176 005                  JMP     IOA2            ; SEE IF MORE CHARACTERS
    1759/  5.230 :                      
    1760/  5.230 : 270                  IOA3    CMP     B               ; TERMINATING CHARACTER?
    1761/  5.231 : 312 245 005                  JZ      IOA4            ; IF EQUAL
    1762/  5.234 :                      
    1763/  5.234 : 076 007                      MVI     A,A.BEL         ; ELSE, DING BELL
    1764/  5.236 : 315 302 003                  CALL    WCC
    1765/  5.241 : 247                          ANA     A               ; CLEAR CARRY
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 45 - 2024-05-13 09:34:53 PM


    1766/  5.242 : 303 176 005                  JMP     IOA2
    1767/  5.245 :                      
    1768/  5.245 :                      ;       END OF INPUT, PUT VALUE IN MEMORY AND EXIT
    1769/  5.245 :                      
    1770/  5.245 : 315 302 003          IOA4    CALL    WCC             ; ECHO CHARACTER
    1771/  5.250 : 127                          MOV     D,A             ; LAST CHARACTER TO D
    1772/  5.251 : 325                          PUSH    D
    1773/  5.252 : 361                          POP     PSW             ; (PSW) = RESULT OF DAD
    1774/  5.253 : 174                          MOV     A,H             ; MAKE (A) INTO SPLIT OCTAL
    1775/  5.254 : 037                          RAR
    1776/  5.255 : 147                          MOV     H,A
    1777/  5.256 : 172                          MOV     A,D             ; RESTORE LAST INPUT CHARACTER
    1778/  5.257 : 353                          XCHG                    ; (D,E) = INPUT ADDRESS
    1779/  5.260 : 341                          POP     H               ; (H,L) = LOCATION TO PLACE THIS ADDRESS
    1780/  5.261 : 162                          MOV     M,D
    1781/  5.262 : 053                          DCX     H
    1782/  5.263 : 163                          MOV     M,E
    1783/  5.264 : 301                          POP     B               ; RESTORE (B,C)
    1784/  5.265 : 311                          RET
    1785/  5.266 :                      
    1786/  5.266 :                      ;       IOC - INPUT OCTAL CHARACTER
    1787/  5.266 :                      ;
    1788/  5.266 :                      ;
    1789/  5.266 :                      ;       ENTRY   NONE
    1790/  5.266 :                      ;       EXIT    (A) = INPUT CHARACTER
    1791/  5.266 :                      ;               'X' SET IF CHARACTER IS NOT OCTAL
    1792/  5.266 :                      ;       USES    A,F
    1793/  5.266 :                      
    1794/  5.266 : 315 262 003          IOC0    CALL    RCC             ; INPUT CHARACTER
    1795/  5.271 : 376 060              IOC.    CPI     '0'
    1796/  5.273 : 330                          RC                      ; IF CHARACTER < OCTAL
    1797/  5.274 :                      
    1798/  5.274 : 376 070                      CPI     '8'             ; CHARACTER > OCTAL?
    1799/  5.276 : 077                          CMC                     ; 'C' IF GREATER THAN
    1800/  5.277 : 311                          RET
    1801/  5.300 :                      
    1802/  5.300 :                      ;       TOA - TYPE OCTAL ADDRESS
    1803/  5.300 :                      ;
    1804/  5.300 :                      ;       TOA OUTPUTS TO THE CONSOLE A CRLF, THE SPECIFIED ADDRESS AND A SPACE
    1805/  5.300 :                      ;
    1806/  5.300 :                      ;       ENTRY   (H,L) = ADDRESS TO BE DISPLAYED
    1807/  5.300 :                      ;       EXIT    NONE
    1808/  5.300 :                      ;       USES    A,B,C,F
    1809/  5.300 :                      
    1810/  5.300 : 076 015              TOA0    MVI     A,A.CR          ; CRLF
    1811/  5.302 : 315 370 005                  CALL    WCR.
    1812/  5.305 :                      
    1813/  5.305 : 174                  TOA.    MOV     A,H             ; ADDRESS
    1814/  5.306 : 315 322 005                  CALL    TOB0
    1815/  5.311 : 175                          MOV     A,L
    1816/  5.312 : 315 322 005                  CALL    TOB0
    1817/  5.315 :                      
    1818/  5.315 : 076 040                      MVI     A,' '           ; SPACE
    1819/  5.317 : 303 302 003                  JMP     WCC
    1820/  5.322 :                      
    1821/  5.322 :                      ;       TOB - TYPE OCTAL BYTE
    1822/  5.322 :                      ;
    1823/  5.322 :                      ;       TOB OUTPUTS TO THE CONSOLE IN OCTAL, THE BYTE IN A
    1824/  5.322 :                      ;
    1825/  5.322 :                      ;       ENTRY   (A) = BYTE TO BE OUTPUT
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 46 - 2024-05-13 09:34:53 PM


    1826/  5.322 :                      ;       EXIT    NONE
    1827/  5.322 :                      ;       USES    A,F
    1828/  5.322 :                      
    1829/  5.322 : 305                  TOB0    PUSH    B
    1830/  5.323 : 006 002                      MVI     B,2             ; NUMBER OF CHARACTERS - 1
    1831/  5.325 : 117                          MOV     C,A             ; SAVE ORIGINAL BYTE
    1832/  5.326 : 247                          ANA     A               ; CLEAR CARRY
    1833/  5.327 : 037                          RAR
    1834/  5.330 : 037                          RAR                     ; SHIFT TOP BYTE TO LSB
    1835/  5.331 : 037                          RAR
    1836/  5.332 : 037                  TOB1    RAR                     ; SHIFT MIDDLE BYTE TO LSB
    1837/  5.333 : 037                          RAR
    1838/  5.334 : 037                          RAR
    1839/  5.335 : 346 007                      ANI     00000111B       ; MASK FOR HALF ASCII
    1840/  5.337 : 366 060                      ORI     00110000B       ; MASK FOR WHOLE ASCII
    1841/  5.341 : 315 302 003                  CALL    WCC             ; OUTPUT TO CONSOLE
    1842/  5.344 : 171                          MOV     A,C             ; GET ORIGINAL BYTE
    1843/  5.345 : 005                          DCR     B
    1844/  5.346 : 302 332 005                  JNZ     TOB1            ; IF SECOND BYTE STILL NEEDS TO BE OUTPUT
    1845/  5.351 :                      
    1846/  5.351 : 346 007                      ANI     00000111B       ; ELSE, OUTPUT LAST CHARACTER
    1847/  5.353 : 366 060                      ORI     00110000B
    1848/  5.355 : 301                          POP     B
    1849/  5.356 : 303 302 003                  JMP     WCC
    1850/  5.361 :                      
    1851/  5.361 :                      ;       WCR - WAIT FOR A CARRIAGE RETURN
    1852/  5.361 :                      ;
    1853/  5.361 :                      ;       WCR INPUTS CHARACTERS FROM THE CONSOLE UNTIL A CARRIAGE RETURN
    1854/  5.361 :                      ;       IS RECEIVED AND THEN ECHOS A CRLF
    1855/  5.361 :                      ;
    1856/  5.361 :                      ;       ENTRY   NONE
    1857/  5.361 :                      ;       EXIT    NONE
    1858/  5.361 :                      ;       USES    A,F
    1859/  5.361 :                      
    1860/  5.361 : 315 262 003          WCR     CALL    RCC             ; INPUT CHARACTER
    1861/  5.364 : 376 015                      CPI     A.CR
    1862/  5.366 :                              CPU     Z80
    1863/  5.366 : 040 371                      JR      NZ,WCR          ; IF NOT A CR
    1864/  5.370 :                              CPU     8080
    1865/  5.370 :                      
    1866/  5.370 : 315 302 003          WCR.    CALL    WCC             ; ELSE ECHO CR
    1867/  5.373 : 076 012                      MVI     A,A.LF          ; LINE FEED
    1868/  5.375 : 303 302 003                  JMP     WCC
    1869/  6.000 :                      
    1870/  6.000 :                      
    1871/  6.000 :                      ;;      VIEW3 - *VIEW* CONTINUATION
    1872/  6.000 :                      ;
    1873/  6.000 :                      
    1874/  6.000 : 302 066 002          VIEW3   JNZ     VIEW2           ; IF NOT END OF LINE
    1875/  6.003 : 315 355 003                  CALL    VIEW9           ; END OF LINE, RESTORE ADDRESS
    1876/  6.006 : 076 015                      MVI     A,A.CR
    1877/  6.010 : 303 355 007                  JMP     VIEW3A.         ; DO ASCII STUFF
    1878/  6.013 :                      
    1879/  6.013 : 000 000 000 000 000          DB      0,0,0,0,0,0,0,0 ; FILL UNUSED BYTES
           6.020 : 000 000 000        
    1880/  6.023 :                      
    1881/  6.023 : (MACRO)                      ERRMI   3023Q-$
    1881/  6.023 : =>FALSE                      IF (3023Q-$) < 0
    1881/  6.023 :                                ERROR Expression is negative
    1881/  6.023 : [7.089]                      ENDIF
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 47 - 2024-05-13 09:34:53 PM


    1882/  6.023 :                              ORG     3023Q
    1883/  6.023 :                      
    1884/  6.023 :                      ;       DAT     - DATA BYTE OUTPUT TO Z-47
    1885/  6.023 :                      ;
    1886/  6.023 :                      ;       ENTRY:  (A) = BYTE TO OUTPUT
    1887/  6.023 :                      ;
    1888/  6.023 :                      ;       EXIT:   (A) = BYTE TO OUTPUT
    1889/  6.023 :                      ;               (D) = S.DTR
    1890/  6.023 :                      ;
    1891/  6.023 :                      ;       USES:   AF, D
    1892/  6.023 :                      
    1893/  6.023 : =6.023O              DAT     EQU     $
    1894/  6.023 : 026 200                      MVI     D,S.DTR         ; SET MATCH CONDITION TO DATA TRANSFER
    1895/  6.025 :                              CPU     Z80
    1896/  6.025 : 030 002                      JR      COM1            ; REQUEST BIT
    1897/  6.027 :                              CPU     8080
    1898/  6.027 : (MACRO)                      ERRMI   3027Q-$
    1898/  6.027 : =>FALSE                      IF (3027Q-$) < 0
    1898/  6.027 :                                ERROR Expression is negative
    1898/  6.027 : [7.106]                      ENDIF
    1899/  6.027 :                              ORG     3027Q
    1900/  6.027 :                      
    1901/  6.027 :                      ;       COM      - OUTPUT COMMAND BYTE TO Z-47
    1902/  6.027 :                      ;
    1903/  6.027 :                      ;       ENTRY:  (A) = COMMAND BYTE
    1904/  6.027 :                      ;
    1905/  6.027 :                      ;       EXIT:   (A) = COMMAND BYTE
    1906/  6.027 :                      ;               (D) = S.DON
    1907/  6.027 :                      ;
    1908/  6.027 :                      ;       USES:   AF, D
    1909/  6.027 :                      
    1910/  6.027 : =6.027O              COM     EQU     $
    1911/  6.027 : 026 040                      MVI     D,S.DON         ; SET MATCH CONDITION TO DONE BIT
    1912/  6.031 : 365                  COM1    PUSH    PSW
    1913/  6.032 : 315 170 006          WTDON1  CALL    IN.             ; READ CONTROLLER STATUS REGISTER
    1914/  6.035 : 242                          ANA     D               ; GET MATCH BIT ONLY
    1915/  6.036 :                              CPU     Z80
    1916/  6.036 : 050 372                      JR      Z,WTDON1        ; IF NO MATCH, WAIT
    1917/  6.040 :                              CPU     8080
    1918/  6.040 : 361                          POP     PSW
    1919/  6.041 : 303 156 010                  JMP     COM2            ; CONTINUE *COM* ROUTINE
    1920/  6.044 :                      
    1921/  6.044 : 000                          DB      0               ; FILL UNUSED BYTES
    1922/  6.045 :                      
    1923/  6.045 : (MACRO)                      ERRMI   3045Q-$
    1923/  6.045 : =>FALSE                      IF (3045Q-$) < 0
    1923/  6.045 :                                ERROR Expression is negative
    1923/  6.045 : [7.131]                      ENDIF
    1924/  6.045 :                              ORG     3045Q
    1925/  6.045 :                      ;       HRNX - HORN EXTENSION ROUTINE
    1926/  6.045 :                      ;
    1927/  6.045 :                      ;       THIS IS AN EXTENSION TO *HORN* TO MAKE ROOM FOR A JUMP
    1928/  6.045 :                      ;
    1929/  6.045 :                      
    1930/  6.045 : 056 011              HRNX    MVI     L,CTLFLG#256
    1931/  6.047 : 163                          MOV     M,E             ; TURN OFF HORN
    1932/  6.050 : 321                          POP     D
    1933/  6.051 : 341                          POP     H
    1934/  6.052 : 311                          RET
    1935/  6.053 :                      
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 48 - 2024-05-13 09:34:53 PM


    1936/  6.053 :                      ;       NOISE - DING BELL ON CONSOLE
    1937/  6.053 :                      ;
    1938/  6.053 :                      ;       THIS IS A MODIFICATION TO ALLOW THE H88/H89 TO USE THE CONSOLE BELL
    1939/  6.053 :                      ;
    1940/  6.053 :                      
    1941/  6.053 : 076 007              NOISE   MVI     A,A.BEL
    1942/  6.055 : 315 302 003                  CALL    WCC
    1943/  6.060 : 303 140 002                  JMP     HORN            ; CONTINUE WITH NORMAL HORN DELAY
    1944/  6.063 :                      
    1945/  6.063 :                      
    1946/  6.063 :                      ;       OUT.    - OUTPUT BYTE TO Z-47
    1947/  6.063 :                      ;
    1948/  6.063 :                      ;       ENTRY:  (A) = OUTPUT BYTE
    1949/  6.063 :                      ;
    1950/  6.063 :                      ;       EXIT:   NONE
    1951/  6.063 :                      ;
    1952/  6.063 :                      ;       USES:   NONE
    1953/  6.063 :                      
    1954/  6.063 : =6.063O              OUT.    EQU     $
    1955/  6.063 : 305                          PUSH    B
    1956/  6.064 : 107                          MOV     B,A             ; SAVE THE OUTPUT DATA
    1957/  6.065 : 072 120 041                  LDA     PRIM            ; GET PORT ADDRESS
    1958/  6.070 : 117                  OUT.1   MOV     C,A             ; SET TO REG C
    1959/  6.071 : 170                          MOV     A,B             ; GET OUTPUT BYTE DATA BACK
    1960/  6.072 :                              CPU     Z80
    1961/  6.072 : 355 171                      OUT     (C),A           ; OUTPUT BYTE
    1962/  6.074 :                              CPU     8080
    1963/  6.074 : 301                          POP     B
    1964/  6.075 : 311                          RET
    1965/  6.076 :                      
    1966/  6.076 : 000 000                      DB      0,0             ; FILL UNUSED BYTES
    1967/  6.100 :                      
    1968/  6.100 : (MACRO)                      ERRMI   3100Q-$
    1968/  6.100 : =>FALSE                      IF (3100Q-$) < 0
    1968/  6.100 :                                ERROR Expression is negative
    1968/  6.100 : [7.176]                      ENDIF
    1969/  6.100 :                              ORG     3100Q
    1970/  6.100 :                      ;       TYPMSG - TYPE MESSAGE TO CONSOLE
    1971/  6.100 :                      ;
    1972/  6.100 :                      ;       TYPMSG OUTPUTS AN ASCII MESSAGE FROM MEMORY TO THE CONSOLE
    1973/  6.100 :                      ;       UNTIL A NULL IS SENSED
    1974/  6.100 :                      ;
    1975/  6.100 :                      ;       ENTRY   (H,L) = ADDRESS OF MESSAGE
    1976/  6.100 :                      ;       EXIT    NONE
    1977/  6.100 :                      ;       USES    A,H,L,F
    1978/  6.100 :                      
    1979/  6.100 : 176                  TYPMSG  MOV     A,M             ; GET CHARACTER
    1980/  6.101 : 267                          ORA     A               ; SEE IF NULL
    1981/  6.102 : 310                          RZ                      ; IF NULL, EXIT
    1982/  6.103 :                      
    1983/  6.103 : 315 302 003                  CALL    WCC             ; ELSE OUTPUT CHARACTER TO CONSOLE
    1984/  6.106 : 043                          INX     H               ; POINT TO NEXT CHARACTER
    1985/  6.107 :                              CPU     Z80
    1986/  6.107 : 030 367                      JR      TYPMSG          ; OUTPUT IT
    1987/  6.111 :                              CPU     8080
    1988/  6.111 :                      
    1989/  6.111 :                      ;       RDBLCK  - INPUT A BLOCK FROM Z-47
    1990/  6.111 :                      ;
    1991/  6.111 :                      ;       RDBLCK READS IN A BLOCK FROM THE DISK CONTROLLER
    1992/  6.111 :                      ;
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 49 - 2024-05-13 09:34:53 PM


    1993/  6.111 :                      ;       ENTRY:
    1994/  6.111 :                      ;               HL = LOAD ADDRESS
    1995/  6.111 :                      ;               C  = SIDE/UNIT/SECTOR
    1996/  6.111 :                      ;
    1997/  6.111 :                      ;       EXIT:   BLOCK IN READ IN MEMORY
    1998/  6.111 :                      ;
    1999/  6.111 :                      ;       USE:    ALL
    2000/  6.111 :                      
    2001/  6.111 : 076 007              RDBLCK  MVI     A,DD.REAB
    2002/  6.113 : 315 027 006                  CALL    COM             ; SEND THE COMMAND
    2003/  6.116 : 257                          XRA     A               ; FOR TRACK 0
    2004/  6.117 : 315 023 006                  CALL    DAT             ; SEND IT TO DISK
    2005/  6.122 : 171                          MOV     A,C             ; LOAD SIDE/UNIT/SECTOR
    2006/  6.123 : 315 023 006                  CALL    DAT             ; SEND IT TO DISK
    2007/  6.126 :                      
    2008/  6.126 : 315 067 001          RD2     CALL    PIN             ; INPUT A BYTE FROM DISK
    2009/  6.131 : 332 104 010                  JC      WDN             ; 'C' SET IF S.DON
    2010/  6.134 :                      
    2011/  6.134 : 167                          MOV     M,A
    2012/  6.135 : 043                          INX     H 
    2013/  6.136 :                              CPU     Z80
    2014/  6.136 : 030 366                      JR      RD2             ; CONTINUE TRANSFER
    2015/  6.140 :                              CPU     8080
    2016/  6.140 :                      
    2017/  6.140 :                      
    2018/  6.140 :                      ;       OUT1.   - OUTPUT A BYTE TO PORT (PRIM+1)
    2019/  6.140 :                      ;
    2020/  6.140 :                      ;       ENTRY:  (A) = OUTPUT PORT
    2021/  6.140 :                      ;
    2022/  6.140 :                      ;       EXIT:   NONE
    2023/  6.140 :                      ;
    2024/  6.140 :                      ;       USE:    NONE
    2025/  6.140 :                      
    2026/  6.140 : =6.140O              OUT1.   EQU     $
    2027/  6.140 : 305                          PUSH    B
    2028/  6.141 : 107                          MOV     B,A             ; SAVE THE OUTPUT DATA
    2029/  6.142 : 072 120 041                  LDA     PRIM            ; GET PORT ADDRESS
    2030/  6.145 : 074                          INR     A               ; SET TO (PRIM+1)
    2031/  6.146 :                              CPU     Z80
    2032/  6.146 : 030 320                      JR      OUT.1           ; GO TO OUTPUT ROUTINE
    2033/  6.150 :                              CPU     8080
    2034/  6.150 :                      
    2035/  6.150 :                      ;       IN1.    - INPUT BYTE FROM (PRIM+1) PORT
    2036/  6.150 :                      ;
    2037/  6.150 :                      ;       ENTRY:  NONE
    2038/  6.150 :                      ;
    2039/  6.150 :                      ;       EXIT:   (A) = INPUT BYTE
    2040/  6.150 :                      ;
    2041/  6.150 :                      ;       USES:   A
    2042/  6.150 :                      
    2043/  6.150 : =6.150O              IN1.    EQU     $
    2044/  6.150 : 305                          PUSH    B
    2045/  6.151 : 072 120 041                  LDA     PRIM            ; GET PORT ADDRESS
    2046/  6.154 : 074                          INR     A               ; SET TO (PRIM+1)
    2047/  6.155 : 247                          ANA     A
    2048/  6.156 :                              CPU     Z80
    2049/  6.156 : 030 014                      JR      IN.1
    2050/  6.160 :                              CPU     8080
    2051/  6.160 :                      
    2052/  6.160 : 000 000 000 000 000          DB      0,0,0,0,0       ; FILL UNUSED BYTES
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 50 - 2024-05-13 09:34:53 PM


    2053/  6.165 :                      
    2054/  6.165 : (MACRO)                      ERRMI   3165Q-$
    2054/  6.165 : =>FALSE                      IF (3165Q-$) < 0
    2054/  6.165 :                                ERROR Expression is negative
    2054/  6.165 : [8.006]                      ENDIF
    2055/  6.165 :                              ORG     3165Q
    2056/  6.165 :                      ;       MSG.GO - (G)O
    2057/  6.165 :                      ;
    2058/  6.165 :                      ;       "GO"
    2059/  6.165 :                      
    2060/  6.165 : 157 040 000          MSG.GO  DB      "o ",0
    2061/  6.170 :                      
    2062/  6.170 :                      ;       IN.     - INPUT BYTE FROM PORT (PRIM)
    2063/  6.170 :                      ;
    2064/  6.170 :                      ;       ENTRY:  NONE
    2065/  6.170 :                      ;
    2066/  6.170 :                      ;       EXIT:   (A) = INPUT BYTE
    2067/  6.170 :                      ;
    2068/  6.170 :                      ;       USES:   A
    2069/  6.170 :                      
    2070/  6.170 : =6.170O              IN.     EQU     $
    2071/  6.170 : 305                          PUSH    B
    2072/  6.171 : 072 120 041                  LDA     PRIM            ; GET PORT ADDRESS
    2073/  6.174 : 117                  IN.1    MOV     C,A             ; SET ADDR. TO REG C.
    2074/  6.175 :                              CPU     Z80
    2075/  6.175 : 355 170                      IN      A,(C)
    2076/  6.177 :                              CPU     8080
    2077/  6.177 : 301                          POP     B
    2078/  6.200 : 311                          RET
    2079/  6.201 :                      
    2080/  6.201 : (MACRO)                      ERRMI   3201Q-$
    2080/  6.201 : =>FALSE                      IF (3201Q-$) < 0
    2080/  6.201 :                                ERROR Expression is negative
    2080/  6.201 : [8.032]                      ENDIF
    2081/  6.201 :                              ORG     3201Q
    2082/  6.201 :                      ;       MSG.SUB - (S)UBSTITUTE
    2083/  6.201 :                      ;
    2084/  6.201 :                      ;       "SUBSTITUTE"
    2085/  6.201 :                      
    2086/  6.201 : 165 142 163 164 151  MSG.SUB DB      "ubstitute ",0
           6.206 : 164 165 164 145 040
           6.213 : 000                
    2087/  6.214 :                      
    2088/  6.214 :                      ;       MSG.PC - (P)ROGRAM COUNTER
    2089/  6.214 :                      ;
    2090/  6.214 :                      ;       "PROGRAM COUNTER"
    2091/  6.214 :                      
    2092/  6.214 : 162 157 147 162 141  MSG.PC  DB       "rogram Counter ",0
           6.221 : 155 040 103 157 165
           6.226 : 156 164 145 162 040
           6.233 : 000                
    2093/  6.234 :                      
    2094/  6.234 :                      ;       MSG.BT - (B)OOT
    2095/  6.234 :                      ;
    2096/  6.234 :                      ;       "BOOT"
    2097/  6.234 :                      
    2098/  6.234 : 157 157 164 000      MSG.BT  DB      "oot",0
    2099/  6.240 :                      
    2100/  6.240 :                      
    2101/  6.240 :                      ;       SPEED - ROTATIONAL SPEED TEST FOR 5.25 INCH DISK DRIVE
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 51 - 2024-05-13 09:34:53 PM


    2102/  6.240 :                      ;
    2103/  6.240 :                      ;       *SPEED* IS USED ONLY FOR GROSS ADJUSTMENT OF DRIVE ROTATIONAL
    2104/  6.240 :                      ;       SPEED IF THE FIRST READ/WRITE TEST OF THE UNIT FAILS DURING SETUP.
    2105/  6.240 :                      ;
    2106/  6.240 :                      ;               USE OF *SPEED* IS AS FOLLOWS:
    2107/  6.240 :                      ;
    2108/  6.240 :                      ;                        1.  ENTER 'GO AND THE ENTRY ADDRESS OF *SPEED*
    2109/  6.240 :                      ;                        2.  ADJUST DRIVE SPEED UNTIL DATA AT DISPLAYED
    2110/  6.240 :                      ;                            EQUALS 200
    2111/  6.240 :                      ;                                A,  IF SPEED < 200, TURN ADJUSTMENT CLOCKWISE
    2112/  6.240 :                      ;                                B,  IF SPEED < 200, TURN COUNTERCLOCKWISE
    2113/  6.240 :                      ;
    2114/  6.240 :                      ;       THE ABOVE TEST ADJUSTS SY0:.  TO ADJUST SY1:, USE HDOS
    2115/  6.240 :                      
    2116/  6.240 :                      ;       LABEL EQUIVALENCES
    2117/  6.240 :                      ;
    2118/  6.240 :                      ;       I/O PORTS
    2119/  6.240 : =177O                OP.DC   EQU     177Q            ; DRIVE CONTROL OUTPUT PORT
    2120/  6.240 : =177O                IP.DS   EQU     177Q            ; DRIVE STATUS INPUT PORT
    2121/  6.240 :                      
    2122/  6.240 :                      ;       MASKS
    2123/  6.240 :                      ;
    2124/  6.240 : =1O                  DS.HOLE EQU     00000001B       ; DRIVE STATUS SECTOR/INDEX HOLD
    2125/  6.240 :                      
    2126/  6.240 :                      ;       CONSTANTS
    2127/  6.240 :                      ;
    2128/  6.240 : =22O                 ONDR0   EQU     022Q            ; TURN ON SY0:
    2129/  6.240 :                      
    2130/  6.240 :                      
    2131/  6.240 : 041 371 006          SPEED   LXI     H,MSG.SPD       ; OUTPUT SPEED MESSAGE
    2132/  6.243 : 315 100 006                  CALL    TYPMSG
    2133/  6.246 : 076 000                      MVI     A,0             ; SET FLAG AT IOWRK FOR "WORKING" MESSAGE
    2134/  6.250 : 062 002 040                  STA     IOWRK
    2135/  6.253 : 076 022                      MVI     A,ONDR0         ; TURN ON DRIVE ZERO
    2136/  6.255 : 323 177                      OUT     OP.DC
    2137/  6.257 : 052 033 040          SPEED1  LHLD    TICCNT          ; GET TICK COUNTER
    2138/  6.262 : 174                          MOV     A,H             ; FORM TWO'S COMPLEMENT OF TICK COUNTER
    2139/  6.263 : 057                          CMA
    2140/  6.264 : 127                          MOV     D,A             ; (D,E) = NEGATIVE TICK COUNTER
    2141/  6.265 : 175                          MOV     A,L
    2142/  6.266 : 057                          CMA
    2143/  6.267 : 074                          INR     A
    2144/  6.270 : 137                          MOV     E,A
    2145/  6.271 : 322 275 006                  JNC     SPEED2          ; IF NO CARRY FROM LSB
    2146/  6.274 :                      
    2147/  6.274 : 024                          INR     D               ; ELSE, INCREMENT MSB
    2148/  6.275 : 001 000 000          SPEED2  LXI     B,0             ; ZERO REV COUNTERS
    2149/  6.300 : 333 177              SPEED3  IN      IP.DS           ; INPUT DISK STATUS
    2150/  6.302 : 346 001                      ANI     DS.HOLE         ; MASK FOR SECTOR/INDEX PULSES
    2151/  6.304 : 312 300 006                  JZ      SPEED3          ; IF NO HOLE PRESENT
    2152/  6.307 :                      
    2153/  6.307 :                      ; HOLE PRESENT, WAIT FOR IT TO LEAVE
    2154/  6.307 :                      ;
    2155/  6.307 : 333 177              SPEED4  IN      IP.DS           ; GET DISK STATUS
    2156/  6.311 : 346 001                      ANI     DS.HOLE         ; GET HOLE PULSES
    2157/  6.313 : 302 307 006                  JNZ     SPEED4          ; WAIT UNTIL HOLE IS GONE AND WE HAVE MEDIA
    2158/  6.316 :                      
    2159/  6.316 : 004                          INR     B               ; INCREMENT HOLE COUNTER
    2160/  6.317 : 170                          MOV     A,B             ; TEST FOR FIVE REVOLUTIONS
    2161/  6.320 : 376 070                      CPI     56
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 52 - 2024-05-13 09:34:53 PM


    2162/  6.322 : 302 300 006                  JNZ     SPEED3          ; NOT FIVE, WAIT FOR MORE HOLES
    2163/  6.325 :                      
    2164/  6.325 :                      ;       HAVE FIVE REVS, DISPLAY DIFFERENCE OF TICK COUNTER AND EXPECTED TIME DIF
    2165/  6.325 :                      
    2166/  6.325 : 052 033 040                  LHLD    TICCNT          ; GET CURRENT TICK VALUE
    2167/  6.330 : 031                          DAD     D               ; SUBTRACT START VALUE
    2168/  6.331 : 021 214 376                  LXI     D,177777Q-500+1+200Q ; SUBTRACT 500 FOR REVS, +200Q FOR OFFSET
    2169/  6.334 : 031                          DAD     D               ; (H,L) = OFFSET RESULT
    2170/  6.335 : 345                          PUSH    H               ; SAVE RESULT
    2171/  6.336 : 041 062 007                  LXI     H,MSG.WRK       ; POINT TO 'WORKING' MESSAGE
    2172/  6.341 : 072 002 040                  LDA     IOWRK           ; GET 'WORKING' FLAG
    2173/  6.344 : 356 001                      XRI     1               ; INVERT LOWER BIT
    2174/  6.346 : 062 002 040                  STA     IOWRK           ; SAVE NEW VALUE
    2175/  6.351 : 302 357 006                  JNZ     SPEED5          ; IF TO DISPLAY 'WORKING'
    2176/  6.354 :                      
    2177/  6.354 : 041 100 007                  LXI     H,MSG.HSS       ; POINT TO 'HOME', 'SPACES', AND SPEED MSG
    2178/  6.357 : 315 100 006          SPEED5  CALL    TYPMSG          ; OUTPUT MESSAGE
    2179/  6.362 : 341                          POP     H               ; GET TEST RESULT
    2180/  6.363 : 315 305 005                  CALL    TOA.            ; OUTPUT RESULT TO CONSOLE
    2181/  6.366 : 303 257 006                  JMP     SPEED1          ; PERFORM ANOTHER SAMPLE
    2182/  6.371 :                      
    2183/  6.371 :                      ;       MSG.SPD - SPEED TEST MESSAGE
    2184/  6.371 :                      ;
    2185/  6.371 :                      ;       '       Disk drive rotational speed test.
    2186/  6.371 :                      ;
    2187/  6.371 :                      ;
    2188/  6.371 :                      ;                       Drive speed = '
    2189/  6.371 : 033 105 012          MSG.SPD DB      A.ESC,'E',A.LF
    2190/  6.374 : 011 104 151 163 153          DB      '	Disk drive rotational speed test.',A.CR,A.LF,A.LF
           7.001 : 040 144 162 151 166
           7.006 : 145 040 162 157 164
           7.013 : 141 164 151 157 156
           7.020 : 141 154 040 163 160
           7.025 : 145 145 144 040 164
           7.032 : 145 163 164 056 015
           7.037 : 012 012            
    2191/  7.041 : 011 011 104 162 151          DB      '		Drive speed = '
           7.046 : 166 145 040 163 160
           7.053 : 145 145 144 040 075
           7.060 : 040                
    2192/  7.061 : 000                          DB      0
    2193/  7.062 :                      
    2194/  7.062 :                      ;       MSG.WRK - 'WORKING' MESSAGE FOR SPEED TEST
    2195/  7.062 :                      ;
    2196/  7.062 :                      ;       DISPLAYS 'WORKING' AT HOME POSITION AND RETURNS CURSOR TO SPEED =
    2197/  7.062 :                      
    2198/  7.062 : 033 110              MSG.WRK DB      A.ESC,'H'       ; CURSOR HOME
    2199/  7.064 : 127 157 162 153 151          DB      'Working'
           7.071 : 156 147            
    2200/  7.073 : 033 131 043 076              DB      A.ESC,'Y#>'     ; CURSOR ADDRESS OF SPEED = VALUE
    2201/  7.077 : 000                          DB      0               ; END MESSAGE
    2202/  7.100 :                      
    2203/  7.100 :                      ;       MSG.HSS - BLANKS 'WORKING' MESSAGE
    2204/  7.100 :                      ;
    2205/  7.100 :                      
    2206/  7.100 : 033 110              MSG.HSS DB      A.ESC,'H'       ; CURSOR HOME
    2207/  7.102 : 040 040 040 040 040          DB      '       '       ; BLANKS
           7.107 : 040 040            
    2208/  7.111 : 033 131 043 076              DB      A.ESC,'Y#>'     ; CURSOR ADDRESS OF SPEED = VALUE
    2209/  7.115 : 000                          DB      0               ; END MESSAGE
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 53 - 2024-05-13 09:34:53 PM


    2210/  7.116 :                      
    2211/  7.116 :                      
    2212/  7.116 :                      ;       DYMEM - DYNAMIC MEMORY TEST
    2213/  7.116 :                      ;
    2214/  7.116 :                      ;       DYMEM TEST THE DYNAMIC MEMORY IN THE H88/H89 BY PLACING
    2215/  7.116 :                      ;       A KNOWN PATTERN IN EACH DYNAMIC MEMORY CELL AND THEN
    2216/  7.116 :                      ;       PERFORMING A READ, INCREMENT, READ SEQUENCE WITH A DELAY
    2217/  7.116 :                      ;       BETWEEN EACH PASS OF THE TEST.
    2218/  7.116 :                      ;
    2219/  7.116 :                      ;       ENTRY:  NONE
    2220/  7.116 :                      ;
    2221/  7.116 :                      ;       EXIT:   ON RESET
    2222/  7.116 :                      ;
    2223/  7.116 :                      ;       USES:   A,B,C,D,E,H,L,F,A',F',IX,IY
    2224/  7.116 :                      
    2225/  7.116 : 076 000              DYMEM   MVI     A,0             ; MAKE SURE CLOCK AND SINGLE STEP ARE OFF
    2226/  7.120 : 323 362                      OUT     H88.CTL
    2227/  7.122 :                      
    2228/  7.122 :                      ;       DETERMINE END OF MEMORY
    2229/  7.122 :                      
    2230/  7.122 : 041 000 040          DYMEM1  LXI     H,START
    2231/  7.125 : 076 001                      MVI     A,1
    2232/  7.127 : 066 000              DYMEM2  MVI     M,0             ; SET RAM TO ZERO
    2233/  7.131 : 064                          INR     M               ; SET MEMORY TO ONE
    2234/  7.132 : 276                          CMP     M               ; SEE IF (A) = ((H,L))
    2235/  7.133 :                              CPU     Z80
    2236/  7.133 : 040 003                      JR      NZ,DYMEM3       ; IF NOT EQUAL, THE END OF RAM HAS BEEN REACHED
    2237/  7.135 :                              CPU     8080     
    2238/  7.135 :                      
    2239/  7.135 : 043                          INX     H               ; ELSE, POINT TO NEXT LOCATION IN RAM
    2240/  7.136 :                              CPU     Z80
    2241/  7.136 : 030 367                      JR      DYMEM2
    2242/  7.140 :                              CPU     8080
    2243/  7.140 :                      
    2244/  7.140 : 053                  DYMEM3  DCX     H               ; POINT TO LAST GOOD LOCATION
    2245/  7.141 : 353                          XCHG                    ; PUT ENDING ADDRESS IN D,E
    2246/  7.142 : 041 303 007                  LXI     H,MSG.RAM       ; OUTPUT ENDING ADDRESS
    2247/  7.145 :                      
    2248/  7.145 :                              CPU     Z80
    2249/  7.145 : 335 041 201 011              LD      IX,DY3.3        ; RETURN ADDRESS
    2250/  7.151 :                      
    2251/  7.151 : 030 112                      JR      DYMSG
    2252/  7.153 :                              CPU     8080
    2253/  7.153 : 023                  DY3.7   INX     D               ; (D,E) = LAST BYTE OF RAM + 1
    2254/  7.154 :                      
    2255/  7.154 :                      ;       TEST MEMORY
    2256/  7.154 :                      ;
    2257/  7.154 : 006 001                      MVI     B,1             ; (B) = CONTENTS OF RAM AFTER SIZING
    2258/  7.156 : 041 231 003                  LXI     H,MSG.PAS       ; OUTPUT PASS MESSAGE
    2259/  7.161 :                      
    2260/  7.161 :                              CPU     Z80
    2261/  7.161 : 335 041 167 007              LD      IX,DYMEM4       ; RETURN ADDRESS
    2262/  7.165 :                      
    2263/  7.165 : 030 076                      JR      DYMSG
    2264/  7.167 :                              CPU     8080
    2265/  7.167 :                      
    2266/  7.167 : 041 000 040          DYMEM4  LXI     H,START         ; POINT BACK TO BEGINNING OF RAM
    2267/  7.172 : 176                  DYMEM5  MOV     A,M             ; READ CURRENT CONTENTS
    2268/  7.173 : 270                          CMP     B               ; SEE IF CURRENT CONTENTS STILL REMAIN
    2269/  7.174 : 302 307 000                  JNZ     DYMEM9          ; FAILURE, SEE IF AT END OF RAM
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 54 - 2024-05-13 09:34:53 PM


    2270/  7.177 :                      
    2271/  7.177 : 074                          INR     A
    2272/  7.200 : 167                          MOV     M,A             ; INCREMENT RAM
    2273/  7.201 : 276                          CMP     M               ; SEE IF WRITE WAS SUCCESSFUL
    2274/  7.202 : 302 307 000                  JNZ     DYMEM9
    2275/  7.205 :                      
    2276/  7.205 : 043                          INX     H
    2277/  7.206 : 175                          MOV     A,L             ; GET LSB AND TEST FOR REACHING END OF RAM
    2278/  7.207 : 273                          CMP     E
    2279/  7.210 :                              CPU     Z80
    2280/  7.210 : 040 360                      JR      NZ,DYMEM5       ; IF LSB NOT EQUAL
    2281/  7.212 :                              CPU     8080
    2282/  7.212 :                      
    2283/  7.212 : 174                          MOV     A,H             ; CHECK LSB
    2284/  7.213 : 272                          CMP     D
    2285/  7.214 :                              CPU     Z80
    2286/  7.214 : 040 354                      JR      NZ,DYMEM5
    2287/  7.216 :                              CPU     8080
    2288/  7.216 :                      
    2289/  7.216 :                      ;       HAVE REACHED THE END OF MEMORY!
    2290/  7.216 :                      ;       OUTPUT LAST VALUE TESTED
    2291/  7.216 :                      
    2292/  7.216 : 303 336 016                  JMP     DYMM5           ; HOW MANY TO BACK SPACE?
    2293/  7.221 :                      
    2294/  7.221 : =7.221O              DYME5.5 EQU     $
    2295/  7.221 :                              CPU     Z80
    2296/  7.221 : 375 041 230 007              LD      IY,DY5.53       ; RETURN ADDRESS
    2297/  7.225 :                              CPU     8080
    2298/  7.225 :                      
    2299/  7.225 : 303 143 003                  JMP     DYASC
    2300/  7.230 :                      
    2301/  7.230 : 045                  DY5.53  DCR     H
    2302/  7.231 :                              CPU     Z80
    2303/  7.231 : 040 366                      JR      NZ,DYME5.5
    2304/  7.233 :                              CPU     8080
    2305/  7.233 : 004                          INR     B               ; SHOW NEXT PASS VALUE
    2306/  7.234 : 170                          MOV     A,B             ; VALUE TESTED
    2307/  7.235 :                      
    2308/  7.235 :                              CPU     Z80
    2309/  7.235 : 335 041 273 000              LD      IX,DYMEM6       ; RETURN ADDRESS
    2310/  7.241 :                              CPU     8080
    2311/  7.241 :                      
    2312/  7.241 : 303 160 003                  JMP     DYBYT
    2313/  7.244 :                      
    2314/  7.244 :                      ;       THE DYNAMIC RAM TEST CONTINUES ELSEWHERE!!
    2315/  7.244 :                      ;       AND THEN RETURNS TO HERE!!!!!!!!!!!!!!!!!!
    2316/  7.244 :                      
    2317/  7.244 : 041 000 000          DY10.5  LXI      H,0            ; DELAY AND DING BELL AGAIN
    2318/  7.247 : 006 002                      MVI      B,2            ; 2 LOOPS
    2319/  7.251 : 045                  DYMEM11 DCR      H
    2320/  7.252 :                              CPU      Z80
    2321/  7.252 : 040 375                      JR       NZ,DYMEM11
    2322/  7.254 :                              CPU      8080
    2323/  7.254 :                      
    2324/  7.254 : 055                          DCR      L
    2325/  7.255 :                              CPU      Z80
    2326/  7.255 : 040 372                      JR       NZ,DYMEM11
    2327/  7.257 :                              CPU      8080
    2328/  7.257 :                      
    2329/  7.257 : 005                          DCR      B
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 55 - 2024-05-13 09:34:53 PM


    2330/  7.260 :                              CPU      Z80
    2331/  7.260 : 040 367                      JR       NZ,DYMEM11
    2332/  7.262 :                              CPU      8080
    2333/  7.262 :                      
    2334/  7.262 : 303 252 013                  JMP      DYMEM10        ; AGAIN
    2335/  7.265 :                      
    2336/  7.265 :                      ;       DYMSG - DYNAMIC RAM TEST MESSAGE OUTPUT ROUTINE
    2337/  7.265 :                      ;
    2338/  7.265 :                      ;       ENTRY:  (H,L) = MESSAGE ADDRESS
    2339/  7.265 :                      ;               (IX) = RETURN ADDRESS
    2340/  7.265 :                      ;
    2341/  7.265 :                      ;       EXIT:   TI (IX)
    2342/  7.265 :                      ;
    2343/  7.265 :                      ;       USES:   A,H,L,F,IY
    2344/  7.265 :                      
    2345/  7.265 : 176                  DYMSG   MOV     A,M             ; GET MESSAGE BYTE
    2346/  7.266 :                      
    2347/  7.266 :                              CPU      Z80
    2348/  7.266 : 375 041 275 007              LD      IY,DYMSG.5      ; RETURN ADDRESS
    2349/  7.272 :                              CPU      8080
    2350/  7.272 :                      
    2351/  7.272 : 303 143 003                  JMP     DYASC           ; OUTPUT ASCII
    2352/  7.275 :                      
    2353/  7.275 : 267                  DYMSG.5 ORA     A               ; SEE IF NULL TO END STRING
    2354/  7.276 : 043                          INX     H               ; POINT TO NEXT CHARACTER
    2355/  7.277 :                              CPU     Z80
    2356/  7.277 : 040 364                      JR      NZ,DYMSG        ; IF NOT DONE YET
    2357/  7.301 :                      
    2358/  7.301 : 335 351                      JP      (IX)            ; RETURN TO CALLER
    2359/  7.303 :                              CPU     8080
    2360/  7.303 :                      
    2361/  7.303 :                      
    2362/  7.303 :                      ;       MSG.RAM - RAM TEST MESSAGE
    2363/  7.303 :                      ;
    2364/  7.303 :                      
    2365/  7.303 : 033 105              MSG.RAM DB      A.ESC,'E'
    2366/  7.305 : 104 171 156 141 155          DB      'Dynamic RAM test'
           7.312 : 151 143 040 122 101
           7.317 : 115 040 164 145 163
           7.324 : 164                
    2367/  7.325 : 015 012 012                  DB      A.CR,A.LF,A.LF
    2368/  7.330 : 011 040 114 127 101          DB      '	 LWA = '
           7.335 : 040 075 040        
    2369/  7.340 : 000                          DB      0
    2370/  7.341 :                      
    2371/  7.341 :                      ;       MSG.EQ - EQUALS MESSAGE
    2372/  7.341 :                      ;
    2373/  7.341 :                      
    2374/  7.341 : 040 075 040          MSG.EQ  DB      ' = '
    2375/  7.344 : 000                          DB      0
    2376/  7.345 :                      
    2377/  7.345 : 107 101 103 056              DB      'GAC.'
    2378/  7.351 :                      
    2379/  7.351 :                      ;;      VIEW3A - *VIEW* CONTINUED
    2380/  7.351 :                      ;
    2381/  7.351 :                      
    2382/  7.351 : 315 032 011          VIEW3A  CALL    VIEW8           ; GET BOUNDARIES
    2383/  7.354 : 353                          XCHG
    2384/  7.355 : 315 111 011          VIEW3A. CALL    VIEW12          ; PRINT CRLF AND ADDRESS
    2385/  7.360 : 303 055 001                  JMP     VIEW1           ; AND START NEXT LINE
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 56 - 2024-05-13 09:34:53 PM


    2386/  7.363 :                      
    2387/  7.363 : 174                  VIEW4   MOV     A,H
    2388/  7.364 : 270                          CMP     B               ; Compare BC and DE
    2389/  7.365 : 300                          RNZ
    2390/  7.366 : 175                          MOV     A,L
    2391/  7.367 : 271                          CMP     C
    2392/  7.370 : 311                          RET
    2393/  7.371 :                      
    2394/  7.371 : 000                          DB      0               ; FILL UNUSED BYTES
    2395/  7.372 :                      
    2396/  7.372 :                      ;       ENTRY POINT FOR FLOPPY DISK ROTATIONAL SPEED TEST
    2397/  7.372 :                      ;
    2398/  7.372 : (MACRO)                      ERRMI   4000Q-6-$       ; MUST BE 6 BYTES BEFORE END
    2398/  7.372 : =>FALSE                      IF (4000Q-6-$) < 0
    2398/  7.372 :                                ERROR Expression is negative
    2398/  7.372 : [9.094]                      ENDIF
    2399/  7.372 :                              ORG     4000Q-6
    2400/  7.372 :                      
    2401/  7.372 : 303 240 006          ESPEED  JMP     SPEED
    2402/  7.375 :                      
    2403/  7.375 :                      ;       ENTRY POINT FOR DYNAMIC MEMORY TEST
    2404/  7.375 :                      ;
    2405/  7.375 : (MACRO)                      ERRNZ   4000Q-3-$      ; MUST BE 3 BYTES BEFORE END
    2405/  7.375 : =>FALSE                      IF (4000Q-3-$) != 0
    2405/  7.375 :                                ERROR Expression is not zero
    2405/  7.375 : [9.101]                      ENDIF
    2406/  7.375 :                      
    2407/  7.375 : 303 032 016          EDYMEM  JMP     MEMORY.
    2408/ 10.000 :                      
    2409/ 10.000 :                      ;;      Z47X - EXTENSION TO Z47 ROUTINE
    2410/ 10.000 :                      ;
    2411/ 10.000 :                      
    2412/ 10.000 : 315 063 006          Z47X    CALL    OUT.           ; SEND RESET COMMAND
    2413/ 10.003 :                      
    2414/ 10.003 : 315 104 010                  CALL    WDN            ; WAIT FOR HIM TO WAKE UP
    2415/ 10.006 : 332 171 002                  JC      NODEV          ; ERROR WAITING FOR DONE
    2416/ 10.011 :                      
    2417/ 10.011 : 315 142 010          Z47X.   CALL    RRDY
    2418/ 10.014 : 332 171 002                  JC      NODEV
    2419/ 10.017 : 315 142 010                  CALL    RRDY
    2420/ 10.022 : 332 171 002                  JC      NODEV
    2421/ 10.025 :                      
    2422/ 10.025 : 072 061 041                  LDA     AIO.UNI        ; (A)=UNIT NUMBER
    2423/ 10.030 : 107                          MOV     B,A
    2424/ 10.031 : 257                          XRA     A
    2425/ 10.032 : 315 155 012                  CALL    BITS           ; SET UNIT BIT MASK
    2426/ 10.035 : 245                          ANA     L
    2427/ 10.036 :                              CPU     Z80
    2428/ 10.036 : 040 351                      JR      NZ,Z47X.
    2429/ 10.040 :                              CPU     8080
    2430/ 10.040 :                      
    2431/ 10.040 : 076 002                      MVI     A,DD.RAS
    2432/ 10.042 : 315 027 006                  CALL    COM            ; READ AUX STAT
    2433/ 10.045 : 171                          MOV     A,C
    2434/ 10.046 : 315 023 006                  CALL    DAT
    2435/ 10.051 : 315 067 001                  CALL    PIN
    2436/ 10.054 : 332 171 002                  JC      NODEV          ; PREMATURE DONE
    2437/ 10.057 :                      
    2438/ 10.057 :                      ;       SET TRANSFER COUNT O 9 SECTORS
    2439/ 10.057 :                      
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 57 - 2024-05-13 09:34:53 PM


    2440/ 10.057 : 076 003                      MVI     A,DD.LSC
    2441/ 10.061 : 315 027 006                  CALL    COM            ; SEND 'LOAD COUNT'
    2442/ 10.064 :                      
    2443/ 10.064 : 257                          XRA     A
    2444/ 10.065 : 315 023 006                  CALL    DAT            ; SEND HIGH ORDER BYTE
    2445/ 10.070 :                      
    2446/ 10.070 : 076 012                      MVI     A,10
    2447/ 10.072 : 315 023 006                  CALL    DAT            ; SEND LOW ORDER BYTE
    2448/ 10.075 :                      
    2449/ 10.075 : 315 104 010                  CALL    WDN            ; WAIT FOR DONE, THEN EXIT
    2450/ 10.100 : 332 171 002                  JC      NODEV
    2451/ 10.103 :                      
    2452/ 10.103 : 311                          RET
    2453/ 10.104 :                      
    2454/ 10.104 :                      ;;      WDB - WAIT FOR DONE
    2455/ 10.104 :                      ;
    2456/ 10.104 :                      ;       WDN waits for the done bit to be set.
    2457/ 10.104 :                      ;
    2458/ 10.104 :                      ;       time-out is in effect at this point
    2459/ 10.104 :                      ;
    2460/ 10.104 :                      ;       ENTRY:  NONE
    2461/ 10.104 :                      ;
    2462/ 10.104 :                      ;       EXIT:   PSG     'C' SET IF ERROR
    2463/ 10.104 :                      ;                       'C' CLEAR IF DONE
    2464/ 10.104 :                      ;
    2465/ 10.104 :                      ;       USES:   PSW
    2466/ 10.104 :                      ;
    2467/ 10.104 :                      
    2468/ 10.104 : 363                  WDN     DI
    2469/ 10.105 : 305                          PUSH    B              ; SAVE BC
    2470/ 10.106 : 001 000 175                  LXI     B,WDNA
    2471/ 10.111 :                      
    2472/ 10.111 : 013                  WDN1    DCX     B
    2473/ 10.112 : 170                          MOV     A,B
    2474/ 10.113 : 261                          ORA     C              ; IF TIMED-OUT
    2475/ 10.114 : 067                          STC
    2476/ 10.115 :                              CPU     Z80
    2477/ 10.115 : 050 020                      JR      Z,WDN2
    2478/ 10.117 :                              CPU     8080
    2479/ 10.117 :                      
    2480/ 10.117 : 315 170 006                  CALL    IN.
    2481/ 10.122 : 346 040                      ANI     S.DON
    2482/ 10.124 :                              CPU     Z80
    2483/ 10.124 : 050 363                      JR      Z,WDN1         ; IF NOT DONE YET
    2484/ 10.126 :                              CPU     8080
    2485/ 10.126 :                      
    2486/ 10.126 : 315 170 006                  CALL    IN.            ; S.ERR VALID ONLY IF S.DONE SET
    2487/ 10.131 : 346 001                      ANI     S.ERR
    2488/ 10.133 : 067                          STC
    2489/ 10.134 :                              CPU     Z80
    2490/ 10.134 : 040 001                      JR      NZ,WDN2        ; IF ERROR BIT SET
    2491/ 10.136 :                              CPU     8080
    2492/ 10.136 :                      
    2493/ 10.136 : 247                          ANA     A              ; CLEAR CARRY
    2494/ 10.137 :                      
    2495/ 10.137 : 301                  WDN2    POP     B
    2496/ 10.140 : 373                          EI
    2497/ 10.141 : 311                          RET                    ; ALL OK.
    2498/ 10.142 :                      
    2499/ 10.142 : =175.000O            WDNA    EQU     32000          ; TIME OUT COUNTER
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 58 - 2024-05-13 09:34:53 PM


    2500/ 10.142 :                      
    2501/ 10.142 :                      ;;      RRDY - CHECK DEVICE READY
    2502/ 10.142 :                      ;
    2503/ 10.142 :                      ;       RRDY RETURNS THE DEVICE READY BITS IN
    2504/ 10.142 :                      ;       THE L REGISTER. BITS 'ON' INDICATE
    2505/ 10.142 :                      ;       UNIT NOT READY.
    2506/ 10.142 :                      ;
    2507/ 10.142 :                      
    2508/ 10.142 : 076 020              RRDY    MVI     A,DD.RRDY
    2509/ 10.144 : 315 027 006                  CALL    COM
    2510/ 10.147 :                      
    2511/ 10.147 : 315 067 001                  CALL    PIN
    2512/ 10.152 :                      
    2513/ 10.152 : 157                          MOV     L,A
    2514/ 10.153 : 303 104 010                  JMP     WDN
    2515/ 10.156 :                      
    2516/ 10.156 :                      ;;      COM2 - *COM* ROUTINE CONTINUATION
    2517/ 10.156 :                      ;
    2518/ 10.156 :                      ;       OUTPUT COMMAND TO 47 AND THEN DELAY
    2519/ 10.156 :                      ;
    2520/ 10.156 :                      
    2521/ 10.156 : 315 140 006          COM2    CALL    OUT1.           ; SEND COMMAND BYTE
    2522/ 10.161 : 076 040                      MVI     A,40Q
    2523/ 10.163 : 247                          ANA     A               ; CLEAR 'Z'
    2524/ 10.164 :                      
    2525/ 10.164 : 075                  COM3    DCR     A
    2526/ 10.165 : 302 164 010                  JNZ     COM3            ; SHORT DELAY
    2527/ 10.170 :                      
    2528/ 10.170 : 311                          RET
    2529/ 10.171 :                      
    2530/ 10.171 :                      ;;      VIEW5 - *VIEW* CONTINUED
    2531/ 10.171 :                      ;
    2532/ 10.171 :                      ;       VIEW5 DOES THE ASCII PORTION OF THE *VIEW* ROUTINE
    2533/ 10.171 :                      ;
    2534/ 10.171 :                      
    2535/ 10.171 : 315 316 010          VIEW5   CALL    PCFA            ; POSITION CURSOR FOR ASCII
    2536/ 10.174 : 176                  VIEW5A  MOV     A,M             ; GET A BYTE
    2537/ 10.175 : 247                          ANA     A               ; CHECK PARITY
    2538/ 10.176 : 372 241 010                  JM      VIEW7
    2539/ 10.201 : 376 177                      CPI     177Q
    2540/ 10.203 : 312 212 010                  JZ      VIEW5.          ; IF DELETE
    2541/ 10.206 : 376 040                      CPI     ' '             ; PRINTABLE?
    2542/ 10.210 :                              CPU     Z80
    2543/ 10.210 : 060 012                      JR      NC,VIEW6        ; YES
    2544/ 10.212 :                              CPU     8080
    2545/ 10.212 : 345                  VIEW5.  PUSH    H
    2546/ 10.213 : 041 024 011                  LXI     H,VEW.NPC       ; NON-PRINTABLE CHARACTER
    2547/ 10.216 : 315 100 006                  CALL    TYPMSG
    2548/ 10.221 : 341                          POP     H
    2549/ 10.222 :                              CPU     Z80
    2550/ 10.222 : 030 003                      JR      VIEW6.
    2551/ 10.224 :                              CPU     8080
    2552/ 10.224 : 315 302 003          VIEW6   CALL    WCC             ; PRINT IT
    2553/ 10.227 : 315 363 007          VIEW6.  CALL    VIEW4
    2554/ 10.232 : 310                          RZ                      ; IF LAST BYTE DONE
    2555/ 10.233 : 315 340 003                  CALL    VIEW3.          ; CHECK FOR END
    2556/ 10.236 :                              CPU     Z80
    2557/ 10.236 : 040 334                      JR      NZ,VIEW5A       ; NO, DO MORE
    2558/ 10.240 :                              CPU     8080
    2559/ 10.240 : 311                          RET
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 59 - 2024-05-13 09:34:53 PM


    2560/ 10.241 :                      
    2561/ 10.241 : 346 177              VIEW7   ANI     177Q            ; STRIP PARITY
    2562/ 10.243 : 365                          PUSH    PSW             ; SAVE IT
    2563/ 10.244 : 076 033                      MVI     A,33Q
    2564/ 10.246 : 315 302 003                  CALL    WCC
    2565/ 10.251 : 076 160                      MVI     A,'p'
    2566/ 10.253 : 315 302 003                  CALL    WCC             ; GO TO REVERSE VIDEO
    2567/ 10.256 : 361                          POP     PSW
    2568/ 10.257 : 376 177                      CPI     177Q
    2569/ 10.261 : 312 270 010                  JZ      VIEW7A
    2570/ 10.264 : 376 040                      CPI     ' '
    2571/ 10.266 :                              CPU     Z80
    2572/ 10.266 : 060 012                      JR      NC,VIEW7.
    2573/ 10.270 :                              CPU     8080
    2574/ 10.270 : 345                  VIEW7A  PUSH    H
    2575/ 10.271 : 041 024 011                  LXI     H,VEW.NPC
    2576/ 10.274 : 315 100 006                  CALL    TYPMSG
    2577/ 10.277 : 341                          POP     H
    2578/ 10.300 :                              CPU     Z80
    2579/ 10.300 : 030 003                      JR      VIEW7..
    2580/ 10.302 :                              CPU     8080
    2581/ 10.302 : 315 302 003          VIEW7.  CALL    WCC             ; PRINT IT
    2582/ 10.305 : 076 033              VIEW7.. MVI     A,33Q
    2583/ 10.307 : 315 302 003                  CALL    WCC
    2584/ 10.312 : 076 161                      MVI     A,'q'           ; EXIT REVERSE VIDEO
    2585/ 10.314 :                              CPU     Z80
    2586/ 10.314 : 030 306                      JR      VIEW6           ; AND FINISH UP
    2587/ 10.316 :                              CPU     8080
    2588/ 10.316 :                      
    2589/ 10.316 : 345                  PCFA    PUSH    H
    2590/ 10.317 : 315 112 015                  CALL    CHKRAD
    2591/ 10.322 : 041 017 011                  LXI     H,PCF.MO        ; ASSUME OCTAL
    2592/ 10.325 : 312 333 010                  JZ      PCFAA
    2593/ 10.330 : 041 012 011                  LXI     H,PCF.MH        ; WAS HEX
    2594/ 10.333 : 315 100 006          PCFAA   CALL    TYPMSG
    2595/ 10.336 : 341                          POP     H
    2596/ 10.337 : 076 001                      MVI     A,1             ; Skip 1 space per letter
    2597/ 10.341 :                      
    2598/ 10.341 :                      
    2599/ 10.341 : 345                  PCFA.   PUSH    H
    2600/ 10.342 : 305                          PUSH    B
    2601/ 10.343 : 107                          MOV     B,A             ; B=SKIP COUNT
    2602/ 10.344 : 315 112 015                  CALL    CHKRAD
    2603/ 10.347 : 312 357 010                  JZ      PCFA1
    2604/ 10.352 :                      
    2605/ 10.352 : 076 360                      MVI     A,11110000B     ; MASK FOR HEX
    2606/ 10.354 : 303 361 010                  JMP     PCFA2
    2607/ 10.357 :                      
    2608/ 10.357 :                      
    2609/ 10.357 : 076 370              PCFA1   MVI     A,11111000B     ; MASK FOR OCTAL
    2610/ 10.361 :                      
    2611/ 10.361 : 245                  PCFA2   ANA     L               ; MASK LOW ORDER, RESULT IN A
    2612/ 10.362 :                      
    2613/ 10.362 : 275                  PCFA3   CMP     L
    2614/ 10.363 : 312 007 011                  JZ      PCFA4           ; IF A=L, DONE
    2615/ 10.366 : 055                          DCR     L
    2616/ 10.367 : 365                          PUSH    PSW
    2617/ 10.370 : 305                          PUSH    B
    2618/ 10.371 : 076 040              PCFA3.  MVI     A,' '
    2619/ 10.373 : 315 302 003                  CALL    WCC
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 60 - 2024-05-13 09:34:53 PM


    2620/ 10.376 : 005                          DCR     B
    2621/ 10.377 : 302 371 010                  JNZ     PCFA3.
    2622/ 11.002 :                      
    2623/ 11.002 : 301                          POP     B
    2624/ 11.003 : 361                          POP     PSW
    2625/ 11.004 : 303 362 010                  JMP     PCFA3           ; PRINT (B) SPACES AND CHECK AGAIN
    2626/ 11.007 :                      
    2627/ 11.007 : 301                  PCFA4   POP     B
    2628/ 11.010 : 341                          POP     H
    2629/ 11.011 : 311                          RET
    2630/ 11.012 :                      
    2631/ 11.012 : 033 131 001 125 000  PCF.MH  DB      33Q,'Y',1,54+31,0 ; Hex Version
    2632/ 11.017 : 033 131 001 107 000  PCF.MO  DB      33Q,'Y',1,40+31,0 ; Octal Version
    2633/ 11.024 :                      
    2634/ 11.024 : 033 106 136 033 107  VEW.NPC DB      33Q,'F^',33Q,'G',0 ; ESC,GRAPHICS,|,ESC,NO-GRAPHICS
          11.031 : 000                
    2635/ 11.032 :                      
    2636/ 11.032 :                      ;;      VIEW8 - GET BOUNDARIES
    2637/ 11.032 :                      ;
    2638/ 11.032 :                      
    2639/ 11.032 : 315 012 015          VIEW8   CALL    IROC            ; GET CHARACTER OR RETURN
    2640/ 11.035 :                              CPU     Z80
    2641/ 11.035 : 040 012                      JR      NZ,VIEW8A
    2642/ 11.037 :                              CPU     8080
    2643/ 11.037 :                      
    2644/ 11.037 : 052 072 040                  LHLD    VEWHLD          ; GET LAST ONE
    2645/ 11.042 : 043                          INX     H               ; START AT NEXT ONE
    2646/ 11.043 : 353                          XCHG
    2647/ 11.044 : 001 000 000                  LXI     B,0             ; SET LENGTH TO 0
    2648/ 11.047 :                              CPU     Z80
    2649/ 11.047 : 030 003                      JR      VIEW8B
    2650/ 11.051 :                              CPU     8080
    2651/ 11.051 :                      
    2652/ 11.051 : 315 073 016          VIEW8A  CALL    GETBND.         ; 'C' IS SET, FIRST CHARACTER IN A
    2653/ 11.054 :                      
    2654/ 11.054 : 151                  VIEW8B  MOV     L,C
    2655/ 11.055 : 140                          MOV     H,B
    2656/ 11.056 : 042 072 040                  SHLD    VEWHLD          ; SAVE LAST
    2657/ 11.061 :                      
    2658/ 11.061 : 170                          MOV     A,B
    2659/ 11.062 : 261                          ORA     C               ; LAST = 0
    2660/ 11.063 : 300                          RNZ                     ; NO, OK
    2661/ 11.064 : 041 177 000                  LXI     H,200Q-1        ; ADD 177Q TO VALUE
    2662/ 11.067 : 031                          DAD     D               ; HL = DE + 177Q
    2663/ 11.070 :                      
    2664/ 11.070 : 315 112 015                  CALL    CHKRAD
    2665/ 11.073 :                              CPU     Z80
    2666/ 11.073 : 050 006                      JR      Z,VIEW8.
    2667/ 11.075 :                              CPU     8080
    2668/ 11.075 :                      
    2669/ 11.075 : 325                          PUSH    D
    2670/ 11.076 : 021 200 000                  LXI     D,200Q
    2671/ 11.101 : 031                          DAD     D               ; ADD IN ANOTHER
    2672/ 11.102 : 321                          POP     D
    2673/ 11.103 :                      
    2674/ 11.103 : 042 072 040          VIEW8.  SHLD    VEWHLD          ; UPDATE END ADDRESS
    2675/ 11.106 : 115                          MOV     C,L
    2676/ 11.107 : 104                          MOV     B,H
    2677/ 11.110 : 311                          RET
    2678/ 11.111 :                      
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 61 - 2024-05-13 09:34:53 PM


    2679/ 11.111 :                      ;;      VIEW12 - Print address and position cursor
    2680/ 11.111 :                      ;
    2681/ 11.111 :                      
    2682/ 11.111 : =11.111O             VIEW12  EQU     $
    2683/ 11.111 : 315 064 015                  CALL    TOA
    2684/ 11.114 : 315 112 015                  CALL    CHKRAD
    2685/ 11.117 : 312 127 011                  JZ      VIEW3B
    2686/ 11.122 : 076 003                      MVI     A,3             ; NUMBER OF ASCII FOR BYTES
    2687/ 11.124 : 303 131 011                  JMP     VIEW3C
    2688/ 11.127 : 076 004              VIEW3B  MVI     A,4
    2689/ 11.131 : 315 341 010          VIEW3C  CALL    PCFA.           ; SKIP TO START IN SCREEN
    2690/ 11.134 : 311                          RET
    2691/ 11.135 :                      
    2692/ 11.135 :                      ;;      CKAUTO - CHECK FOR AUTO BOOT
    2693/ 11.135 :                      ;
    2694/ 11.135 :                      ;       CKAUTO IS ENTERED DURING THE MONITOR LOOP TO CHECK
    2695/ 11.135 :                      ;       IF THE AUTO BOOT SWITCH IS SET.
    2696/ 11.135 :                      ;
    2697/ 11.135 :                      ;       THIS ROUTINE WAS MOVED FROM UP FRONT TO MAKE ROOM
    2698/ 11.135 :                      ;
    2699/ 11.135 :                      
    2700/ 11.135 : 333 362              CKAUTO  IN      H88.SW
    2701/ 11.137 : 346 200                      ANI     H88S.AT         ; CHECK SWITCH
    2702/ 11.141 :                              CPU     Z80
    2703/ 11.141 : 050 007                      JR      Z,CHAT2         ; NOT AUTO BOOT
    2704/ 11.143 :                              CPU     8080
    2705/ 11.143 : 041 123 041                  LXI     H,AUTOB
    2706/ 11.146 : 276                          CMP     M               ; HAVE WE BEEN HERE BEFORE?
    2707/ 11.147 : 302 243 004                  JNZ     ATB             ; NO, DO AUTO BOOT
    2708/ 11.152 :                      
    2709/ 11.152 : 041 062 014          CHAT2   LXI     H,MSG.PR
    2710/ 11.155 : 303 354 000                  JMP     MTR.15          ; RETURN TO MONITOR LOOP
    2711/ 11.160 :                      
    2712/ 11.160 :                      ;;      DYMEM EXTENSION
    2713/ 11.160 :                      ;
    2714/ 11.160 :                      
    2715/ 11.160 : 353                  DY9.3   XCHG
    2716/ 11.161 : 174                          MOV     A,H
    2717/ 11.162 :                              CPU     Z80
    2718/ 11.162 : 335 041 171 011              LD      IX,DY9.4
    2719/ 11.166 :                              CPU     8080
    2720/ 11.166 : 303 160 003                  JMP     DYBYT
    2721/ 11.171 :                      
    2722/ 11.171 : 175                  DY9.4   MOV     A,L
    2723/ 11.172 :                              CPU     Z80
    2724/ 11.172 : 335 041 315 003              LD      IX,DY9.5
    2725/ 11.176 :                              CPU     8080
    2726/ 11.176 : 303 160 003                  JMP     DYBYT
    2727/ 11.201 :                      
    2728/ 11.201 :                      ;       ANOTHER EXTENSION!
    2729/ 11.201 :                      
    2730/ 11.201 : 172                  DY3.3   MOV     A,D
    2731/ 11.202 :                              CPU     Z80
    2732/ 11.202 : 335 041 211 011              LD      IX,DY3.5
    2733/ 11.206 :                              CPU     8080
    2734/ 11.206 : 303 160 003                  JMP     DYBYT
    2735/ 11.211 :                      
    2736/ 11.211 : 173                  DY3.5   MOV     A,E
    2737/ 11.212 :                              CPU     Z80
    2738/ 11.212 : 335 041 153 007              LD      IX,DY3.7
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 62 - 2024-05-13 09:34:53 PM


    2739/ 11.216 :                              CPU     8080
    2740/ 11.216 : 303 160 003                  JMP     DYBYT
    2741/ 11.221 :                      
    2742/ 11.221 :                      ;;      H37 - ENTRY POINT TO BOOT FROM H37
    2743/ 11.221 :                      ;
    2744/ 11.221 :                      
    2745/ 11.221 : 257                  H37     XRA     A
    2746/ 11.222 : 323 171                      OUT     DK.INT          ; SET FLIP LATCH
    2747/ 11.224 :                      
    2748/ 11.224 : 076 320                      MVI     A,FDC.FI
    2749/ 11.226 : 323 172                      OUT     FD.CMD          ; SET NOT BUSY
    2750/ 11.230 :                      
    2751/ 11.230 : 076 001                      MVI     A,1
    2752/ 11.232 : 315 053 000                  CALL    DLY             ; DLY 2 MILLISECONDS
    2753/ 11.235 :                      
    2754/ 11.235 : 333 172                      IN      FD.STAT         ; CLEAR INTERRUPTS
    2755/ 11.237 :                      
    2756/ 11.237 : 041 145 012                  LXI     H,MYINT
    2757/ 11.242 : 042 051 040                  SHLD    UIVEC+9+1       ; SET INTERRUPT ROUTINE
    2758/ 11.245 : 076 303                      MVI     A,MI.JMP
    2759/ 11.247 : 062 050 040                  STA     UIVEC+9
    2760/ 11.252 :                      
    2761/ 11.252 : 072 061 041                  LDA     AIO.UNI
    2762/ 11.255 : 306 004                      ADI     4
    2763/ 11.257 : 107                          MOV     B,A
    2764/ 11.260 : 257                          XRA     A
    2765/ 11.261 : 315 155 012                  CALL    BITS            ; GET DEVICE CODE
    2766/ 11.264 :                      
    2767/ 11.264 : 366 015                      ORI     CON.MO+CON.EI+CON.MFM
    2768/ 11.266 : 323 170                      OUT     DK.CON
    2769/ 11.270 : 107                          MOV     B,A
    2770/ 11.271 : 305                          PUSH    B
    2771/ 11.272 :                      
    2772/ 11.272 : 373                          EI                      ; Insure Interrupts on
    2773/ 11.273 :                      
    2774/ 11.273 : 076 226                      MVI     A,150           ; 300MS ON DELAY
    2775/ 11.275 : 315 053 000                  CALL    DLY
    2776/ 11.300 :                      
    2777/ 11.300 : 041 335 011                  LXI     H,H371
    2778/ 11.303 : 042 067 040                  SHLD    BLKICW          ; SET RETURN ADDRESS
    2779/ 11.306 : 076 003                      MVI     A,FDC.RST+FDF.S30
    2780/ 11.310 : 323 172                      OUT     FD.CMD
    2781/ 11.312 :                      
    2782/ 11.312 : 001 377 377                  LXI     B,-1            ; ABOUT 5 SECONDS
    2783/ 11.315 : 026 004                      MVI     D,4             ;   DOUBLED.
    2784/ 11.317 : 013                  H37.    DCX     B
    2785/ 11.320 : 170                          MOV     A,B
    2786/ 11.321 : 261                          ORA     C
    2787/ 11.322 :                              CPU     Z80
    2788/ 11.322 : 040 373                      JR      NZ,H37.         ; IF BC>0
    2789/ 11.324 :                              CPU     8080
    2790/ 11.324 :                      
    2791/ 11.324 : 025                          DCR     D
    2792/ 11.325 :                              CPU     Z80
    2793/ 11.325 : 040 370                      JR      NZ,H37.         ; IF D>0
    2794/ 11.327 :                              CPU     8080
    2795/ 11.327 :                      
    2796/ 11.327 : 076 320                      MVI     A,FDC.FI
    2797/ 11.331 : 323 172                      OUT     FD.CMD
    2798/ 11.333 :                      
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 63 - 2024-05-13 09:34:53 PM


    2799/ 11.333 :                              CPU     Z80
    2800/ 11.333 : 030 132                      JR      H373            ; TIMED OUT
    2801/ 11.335 :                              CPU     8080
    2802/ 11.335 :                      
    2803/ 11.335 : 041 356 011          H371    LXI     H,H371B
    2804/ 11.340 : 042 067 040                  SHLD    BLKICW          ; LOAD RETURN ADDRESS
    2805/ 11.343 : 076 012                      MVI     A,10            ; NUMBER OF TRACKS TO STEP
    2806/ 11.345 : 323 173                      OUT     FD.DAT          ; SET TRACK NUMBER TO 10
    2807/ 11.347 : 076 023                      MVI     A,FDC.SEK+FDF.S30
    2808/ 11.351 : 323 172                      OUT     FD.CMD
    2809/ 11.353 : 303 353 011                  JMP     $               ; Wait for interrupt
    2810/ 11.356 :                      
    2811/ 11.356 :                      ;       Return here after doing seek
    2812/ 11.356 :                      
    2813/ 11.356 : 041 373 011          H371B   LXI     H,H371C
    2814/ 11.361 : 042 067 040                  SHLD    BLKICW
    2815/ 11.364 : 076 003                      MVI     A,FDC.RST+FDF.S30
    2816/ 11.366 : 323 172                      OUT     FD.CMD
    2817/ 11.370 : 303 370 011                  JMP     $
    2818/ 11.373 :                      
    2819/ 11.373 :                      ;       Here after final RESTORE
    2820/ 11.373 :                      
    2821/ 11.373 : 346 004              H371C   ANI     FDS.TK0         ; Be sure track zero switch on
    2822/ 11.375 :                              CPU     Z80
    2823/ 11.375 : 050 070                      JR      Z,H373          ; If not there
    2824/ 11.377 :                              CPU     8080
    2825/ 11.377 :                      
    2826/ 11.377 :                      ;       Over track zero, Wait for head to settle
    2827/ 11.377 :                      
    2828/ 11.377 : 001 200 014                  LXI     B,3200          ; 40 mS DELAY
    2829/ 12.002 : 013                  H371.   DCX     B
    2830/ 12.003 : 170                          MOV     A,B
    2831/ 12.004 : 261                          ORA     C
    2832/ 12.005 :                              CPU     Z80
    2833/ 12.005 : 040 373                      JR      NZ,H371.        ; ALLOW HEAD SETTLE TIME
    2834/ 12.007 :                              CPU     8080
    2835/ 12.007 :                      
    2836/ 12.007 : 301                          POP     B
    2837/ 12.010 : 170                          MOV     A,B             ; (A) = Device Control Bits
    2838/ 12.011 : 366 002                      ORI     CON.DRQ         ; Turn on DRQ Interrupt
    2839/ 12.013 : 107                          MOV     B,A
    2840/ 12.014 : 305                          PUSH    B               ; save device control bits
    2841/ 12.015 : 323 170                      OUT     DK.CON          ; READY FOR TRANSFERS
    2842/ 12.017 :                      
    2843/ 12.017 : 315 075 012                  CALL    READT           ; Read a track
    2844/ 12.022 : 301                          POP     B
    2845/ 12.023 : 365                          PUSH    PSW             ; SAVE RETURN STATUS
    2846/ 12.024 : 170                          MOV     A,B
    2847/ 12.025 : 346 373                      ANI     377Q-CON.MFM    ; OFF DBL DENSITY
    2848/ 12.027 : 107                          MOV     B,A
    2849/ 12.030 : 361                          POP     PSW
    2850/ 12.031 :                              CPU     Z80
    2851/ 12.031 : 040 012                      JR      NZ,H372         ;    IF READ FAILURE
    2852/ 12.033 :                              CPU     8080
    2853/ 12.033 :                      
    2854/ 12.033 : 041 200 335                  LXI     H,-USERFWA
    2855/ 12.036 : 031                          DAD     D               ;    HL = Bytes Read
    2856/ 12.037 : 174                          MOV     A,H
    2857/ 12.040 : 376 011                      CPI     (2048+256)/256  ; See if 2.25K
    2858/ 12.042 : 322 201 016                  JNC     EUC             ; If got it all
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 64 - 2024-05-13 09:34:53 PM


    2859/ 12.045 :                      
    2860/ 12.045 : 170                  H372    MOV     A,B
    2861/ 12.046 : 323 170                      OUT     DK.CON
    2862/ 12.050 :                      
    2863/ 12.050 : 315 075 012                  CALL    READT           ; TRY SINGLE DENSITY
    2864/ 12.053 :                              CPU     Z80
    2865/ 12.053 : 040 012                      JR      NZ,H373         ;    IF FAILURE
    2866/ 12.055 :                              CPU     8080
    2867/ 12.055 :                      
    2868/ 12.055 : 041 200 335                  LXI     H,-USERFWA
    2869/ 12.060 : 031                          DAD     D               ;    HL = Bytes Read
    2870/ 12.061 : 174                          MOV     A,H
    2871/ 12.062 : 376 011                      CPI     (2048+256)/256  ; See if 2.25K
    2872/ 12.064 : 322 201 016                  JNC     EUC             ; More than 2.25K read, is ok        
    2873/ 12.067 :                      
    2874/ 12.067 : 257                  H373    XRA     A
    2875/ 12.070 : 323 170                      OUT     DK.CON          ; TURN OFF DEVICE
    2876/ 12.072 : 303 171 002                  JMP     NODEV
    2877/ 12.075 :                      
    2878/ 12.075 : 076 001              READT   MVI     A,CON.ST
    2879/ 12.077 : 323 171                      OUT     DK.INT
    2880/ 12.101 : 323 172                      OUT     FD.SEC
    2881/ 12.103 :                      ;       ERRNZ   CON.ST-1
    2882/ 12.103 : 257                          XRA     A
    2883/ 12.104 : 323 171                      OUT     DK.INT
    2884/ 12.106 : (MACRO)                      ERRNZ   CON.CD
    2884/ 12.106 : =>FALSE                      IF (CON.CD) != 0
    2884/ 12.106 :                                ERROR Expression is not zero
    2884/ 12.106 : [11.068]                     ENDIF
    2885/ 12.106 :                      
    2886/ 12.106 : 041 134 012                  LXI     H,READT2
    2887/ 12.111 : 042 067 040                  SHLD    BLKICW          ; SET RETURN ADDRESS
    2888/ 12.114 : 041 126 012                  LXI     H,READT1
    2889/ 12.117 : 021 200 042                  LXI     D,USERFWA
    2890/ 12.122 : 076 234                      MVI     A,FDC.RDS+FDF.DLF+FDF.MRF+FDF.SLF
    2891/ 12.124 : 323 172                      OUT     FD.CMD
    2892/ 12.126 :                      
    2893/ 12.126 : 166                  READT1  HLT
    2894/ 12.127 : 333 173                      IN      FD.DAT          ; *TIME DEPENDENT*
    2895/ 12.131 : 022                          STAX    D
    2896/ 12.132 : 023                          INX     D
    2897/ 12.133 : 351                          PCHL
    2898/ 12.134 :                      
    2899/ 12.134 : 365                  READT2  PUSH    PSW
    2900/ 12.135 : 076 010                      MVI     A,CON.MO
    2901/ 12.137 : 323 170                      OUT     DK.CON
    2902/ 12.141 : 361                          POP     PSW
    2903/ 12.142 : 346 254                      ANI     FDS.NRD+FDS.LDT+FDS.CRC+FDS.RTE
    2904/ 12.144 : 311                          RET
    2905/ 12.145 :                      
    2906/ 12.145 :                      ;;      MYINT - H37 Interrupt Routine
    2907/ 12.145 :                      ;
    2908/ 12.145 :                      ;       This routine is entered when a level 4 interrupt
    2909/ 12.145 :                      ;       is received from the H37 Hardware.
    2910/ 12.145 :                      ;
    2911/ 12.145 :                      ;       Control is passed to the address in BLKICW
    2912/ 12.145 :                      ;
    2913/ 12.145 :                      ;       ENTRY:  NONE    (From the disk routine via level 4 interrupt)
    2914/ 12.145 :                      ;
    2915/ 12.145 :                      ;       EXIT:   PSW     =           Status byte from controller
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 65 - 2024-05-13 09:34:53 PM


    2916/ 12.145 :                      ;               HL      =           Return address to routine
    2917/ 12.145 :                      
    2918/ 12.145 : 333 172              MYINT   IN      FD.STAT
    2919/ 12.147 : 341                          POP     H
    2920/ 12.150 : 052 067 040                  LHLD    BLKICW
    2921/ 12.153 : 373                          EI
    2922/ 12.154 : 351                          PCHL
    2923/ 12.155 :                              INCLUDE bits.asm
(1)    1/ 12.155 :                      ;;      BITS - BIT SET
(1)    2/ 12.155 :                      ;
(1)    3/ 12.155 :                      ;       BITS SETS THE SPECIFIED BIT IN THE ACCUMULATOR.
(1)    4/ 12.155 :                      ;
(1)    5/ 12.155 :                      ;       ENTRY:  A       - ORIGINAL A
(1)    6/ 12.155 :                      ;               B       - NUMBER OF BIT TO SET ( 7=HIGH,...,0=LOW )
(1)    7/ 12.155 :                      ;
(1)    8/ 12.155 :                      ;       EXIT:   A       - ORIGINAL  A  WITH  BIT(B) SET
(1)    9/ 12.155 :                      ;
(1)   10/ 12.155 :                      ;       USES:   PSW
(1)   11/ 12.155 :                      ;
(1)   12/ 12.155 :                      
(1)   13/ 12.155 : 305                  BITS    PUSH    B
(1)   14/ 12.156 :                      
(1)   15/ 12.156 : 365                          PUSH    PSW
(1)   16/ 12.157 : 076 200                      MVI     A,10000000B
(1)   17/ 12.161 : 004                          INR     B
(1)   18/ 12.162 : 007                  BITS1   RLC
(1)   19/ 12.163 : 005                          DCR     B
(1)   20/ 12.164 : 302 162 012                  JNZ     BITS1
(1)   21/ 12.167 :                      
(1)   22/ 12.167 : 117                          MOV     C,A
(1)   23/ 12.170 : 361                          POP     PSW
(1)   24/ 12.171 : 261                          ORA     C
(1)   25/ 12.172 :                      
(1)   26/ 12.172 : 301                          POP     B
(1)   27/ 12.173 : 311                          RET
(1)   28/ 12.174 :                      
    2924/ 12.174 :                      
    2925/ 12.174 :                      ;;      H67 - BOOT H67
    2926/ 12.174 :                      ;
    2927/ 12.174 :                      ;       The section of this code most likely to 'HANG' because
    2928/ 12.174 :                      ;       of no controller is timed using the BC register pair
    2929/ 12.174 :                      ;       for approximately 3 seconds.
    2930/ 12.174 :                      ;
    2931/ 12.174 :                      
    2932/ 12.174 : 076 020              H67     MVI     A,BC.RST
    2933/ 12.176 : 315 140 006                  CALL    OUT1.           ; RESET THE CONTROLLER
    2934/ 12.201 :                      
    2935/ 12.201 : 076 004                      MVI     A,4
    2936/ 12.203 : 315 053 000                  CALL    DLY
    2937/ 12.206 :                      
    2938/ 12.206 : 041 062 041                  LXI     H,AIO.DIR       ; SCRATCH AREA FOR CDB
    2939/ 12.211 : 066 000                      MVI     M,D.TDR         ; TEST FOR READY
    2940/ 12.213 : 016 005                      MVI     C,5
    2941/ 12.215 : 043                  H671    INX     H
    2942/ 12.216 : 066 000                      MVI     M,0             ; FILL CDB WITH 0
    2943/ 12.220 : 015                          DCR     C
    2944/ 12.221 :                              CPU     Z80
    2945/ 12.221 : 040 372                      JR      NZ,H671
    2946/ 12.223 :                              CPU     8080
    2947/ 12.223 :                      
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 66 - 2024-05-13 09:34:53 PM


    2948/ 12.223 : 315 365 012                  CALL    H67UNI          ; GET UNIT NUMBER
    2949/ 12.226 : 062 063 041                  STA     AIO.DIR+1       ; SET THE LUN
    2950/ 12.231 :                      
    2951/ 12.231 : 315 376 012          H671.   CALL    GETCON          ; CHECK READY
    2952/ 12.234 :                              CPU     Z80
    2953/ 12.234 : 060 012                      JR      NC,H672         ; IF DRIVE IS READY
    2954/ 12.236 :                              CPU     8080
    2955/ 12.236 :                      
    2956/ 12.236 : 312 171 002                  JZ      NODEV           ; IF WAS TIME-OUT PROBLEM
    2957/ 12.241 :                      
    2958/ 12.241 : 076 377                      MVI     A,377Q
    2959/ 12.243 : 315 053 000                  CALL    DLY             ; WAIT ABOUT 1/2 SECOND
    2960/ 12.246 :                              CPU     Z80
    2961/ 12.246 : 030 361                      JR      H671.
    2962/ 12.250 :                              CPU     8080
    2963/ 12.250 :                      
    2964/ 12.250 : 041 062 041          H672    LXI     H,AIO.DIR
    2965/ 12.253 : 066 001                      MVI     M,D.REC         ; RECAL THE DRIVE
    2966/ 12.255 :                      
    2967/ 12.255 : 315 376 012                  CALL    GETCON          ; DO THE RECAL
    2968/ 12.260 : 332 171 002                  JC      NODEV           ; ERROR IN RECAL
    2969/ 12.263 :                      
    2970/ 12.263 :                      ;       Now cause the drive to step out 10 tracks
    2971/ 12.263 :                      
    2972/ 12.263 : 072 061 041                  LDA     AIO.UNI         ; Only for the hard disk
    2973/ 12.266 : 247                          ANA     A
    2974/ 12.267 : 302 330 012                  JNZ     H673            ; If unit = 1, is 8" floppy
    2975/ 12.272 :                      
    2976/ 12.272 : 041 062 041                  LXI     H,AIO.DIR
    2977/ 12.275 : 066 013                      MVI     M,D.SEK
    2978/ 12.277 : 043                          INX     H               ; HL over logical address 0
    2979/ 12.300 : 043                          INX     H
    2980/ 12.301 : 066 007                      MVI     M,7             ; Seek block (7*256)
    2981/ 12.303 :                      
    2982/ 12.303 : 315 376 012                  CALL    GETCON          ; Do the seek
    2983/ 12.306 : 332 171 002                  JC      NODEV           ; If error during Seek
    2984/ 12.311 :                      
    2985/ 12.311 : 041 062 041                  LXI     H,AIO.DIR
    2986/ 12.314 : 066 001                      MVI     M,D.REC
    2987/ 12.316 : 043                          INX     H
    2988/ 12.317 : 043                          INX     H
    2989/ 12.320 : 066 000                      MVI     M,0             ; Do another Recal
    2990/ 12.322 : 315 376 012                  CALL    GETCON
    2991/ 12.325 : 332 171 002                  JC      NODEV
    2992/ 12.330 :                      
    2993/ 12.330 : 041 062 041          H673    LXI     H,AIO.DIR       ; SET UP READ COMMAND
    2994/ 12.333 : 066 010                      MVI     M,D.REA
    2995/ 12.335 : 043                          INX     H               ; HL = LUN
    2996/ 12.336 : 043                          INX     H
    2997/ 12.337 : 043                          INX     H
    2998/ 12.340 : 043                          INX     H
    2999/ 12.341 : 066 012                      MVI     M,10            ; SET 10 SECTOR READ
    3000/ 12.343 : 043                          INX     H
    3001/ 12.344 : 066 200                      MVI     M,080H          ; CONTROL BYTE
    3002/ 12.346 :                      
    3003/ 12.346 : 315 365 012                  CALL    H67UNI
    3004/ 12.351 : 062 063 041                  STA     AIO.DIR+1       ; SET LUN TO READ
    3005/ 12.354 :                      
    3006/ 12.354 : 315 376 012                  CALL    GETCON
    3007/ 12.357 : 332 171 002                  JC      NODEV           ; IF READ ERROR
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 67 - 2024-05-13 09:34:53 PM


    3008/ 12.362 : 303 201 016                  JMP     EUC             ; ENTER USER CODE
    3009/ 12.365 :                      
    3010/ 12.365 : 072 061 041          H67UNI  LDA     AIO.UNI         ; (A)=UNIT NUMBER
    3011/ 12.370 : 017                          RRC
    3012/ 12.371 : 017                          RRC
    3013/ 12.372 : 017                          RRC                     ; MOVE IT INTO PLACE
    3014/ 12.373 : 346 140                      ANI     ST.LUN
    3015/ 12.375 : 311                          RET
    3016/ 12.376 :                      
    3017/ 12.376 : 363                  GETCON  DI                      ; GET CONTROLLER ATTENTION
    3018/ 12.377 :                      
    3019/ 12.377 : 001 377 377                  LXI     B,65535         ; ABOUT 5 SECONDS FOR RESPONSE
    3020/ 13.002 : 026 002                      MVI     D,2             ; 3 BYTE COUNTER (D,B,C)
    3021/ 13.004 :                      
    3022/ 13.004 : 315 150 006          GTCON   CALL    IN1.            ; GET BUSS STATUS
    3023/ 13.007 : 346 010                      ANI     BS.BSY
    3024/ 13.011 :                              CPU     Z80
    3025/ 13.011 : 050 012                      JR      Z,GTCON1        ; WAIT FOR BUSY TO LEAVE
    3026/ 13.013 :                              CPU     8080
    3027/ 13.013 :                      
    3028/ 13.013 : 013                          DCX     B               ; COUNT DOWN
    3029/ 13.014 : 170                          MOV     A,B
    3030/ 13.015 : 261                          ORA     C
    3031/ 13.016 :                              CPU     Z80
    3032/ 13.016 : 040 364                      JR      NZ,GTCON        ; NO TIMEOUT YET
    3033/ 13.020 :                              CPU     8080
    3034/ 13.020 :                      
    3035/ 13.020 : 025                          DCR     D
    3036/ 13.021 :                              CPU     Z80
    3037/ 13.021 : 040 361                      JR      NZ,GTCON        ; DEC 3RD BYTE
    3038/ 13.023 :                              CPU     8080
    3039/ 13.023 :                      
    3040/ 13.023 : 067                          STC                     ; INDICATE ERROR
    3041/ 13.024 : 311                          RET
    3042/ 13.025 :                      
    3043/ 13.025 : 076 100              GTCON1  MVI     A,BC.SEL
    3044/ 13.027 : 315 140 006                  CALL    OUT1.           ; OUTPUT TO (PRIM)
    3045/ 13.032 :                      
    3046/ 13.032 : 315 150 006          CBUSY   CALL    IN1.
    3047/ 13.035 : 346 010                      ANI     BS.BSY
    3048/ 13.037 :                              CPU     Z80
    3049/ 13.037 : 040 007                      JR      NZ,CBUSY1       ;    WAIT FOR CONTROLLER
    3050/ 13.041 :                              CPU     8080
    3051/ 13.041 :                      
    3052/ 13.041 : 013                          DCX     B               ; CONTINUE COUNTING
    3053/ 13.042 : 170                          MOV     A,B
    3054/ 13.043 : 261                          ORA     C
    3055/ 13.044 :                              CPU     Z80
    3056/ 13.044 : 040 364                      JR      NZ,CBUSY
    3057/ 13.046 :                              CPU     8080
    3058/ 13.046 : 067                          STC
    3059/ 13.047 : 311                          RET                     ; TIMED OUT
    3060/ 13.050 :                      
    3061/ 13.050 : 076 002              CBUSY1  MVI     A,BC.EDT
    3062/ 13.052 : 315 140 006                  CALL    OUT1.
    3063/ 13.055 :                      ;
    3064/ 13.055 :                      ;       HAVE CONTROLLER, SEND HIM COMMAND
    3065/ 13.055 :                      ;
    3066/ 13.055 : 041 062 041          OUTCOM  LXI     H,AIO.DIR       ; FWA OF COMMAND BUFFER
    3067/ 13.060 :                      
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 68 - 2024-05-13 09:34:53 PM


    3068/ 13.060 : 315 150 006          COMREQ  CALL    IN1.
    3069/ 13.063 : 117                          MOV     C,A
    3070/ 13.064 : 247                          ANA     A
    3071/ 13.065 : 362 060 013                  JP      COMREQ
    3072/ 13.070 : (MACRO)                      ERRNZ   200Q-BS.REQ     ; WAIT FOR REQUEST BIT
    3072/ 13.070 : =>FALSE                      IF (200Q-BS.REQ) != 0
    3072/ 13.070 :                                ERROR Expression is not zero
    3072/ 13.070 : [12.000]                     ENDIF
    3073/ 13.070 :                      
    3074/ 13.070 : 346 020                      ANI     BS.COM
    3075/ 13.072 :                              CPU     Z80
    3076/ 13.072 : 050 077                      JR      Z,TFDATA        ;   COMMAND DONE, SEND DATA
    3077/ 13.074 :                              CPU     8080
    3078/ 13.074 :                      
    3079/ 13.074 : 171                          MOV     A,C             ; (A)=BUSS STATUS BYTE
    3080/ 13.075 : 346 100                      ANI     BS.DTD          ; CHECK DIRECTION
    3081/ 13.077 :                              CPU     Z80
    3082/ 13.077 : 050 007                      JR      Z,GETST         ;   IF DONE, GET STATUS
    3083/ 13.101 :                              CPU     8080
    3084/ 13.101 :                      
    3085/ 13.101 : 176                          MOV     A,M             ; (A)=COMMAND BYTE
    3086/ 13.102 : 315 063 006                  CALL    OUT.            ; SEND OUT DATA
    3087/ 13.105 : 043                          INX     H               ; BUMP POINTER
    3088/ 13.106 :                              CPU     Z80
    3089/ 13.106 : 030 350                      JR      COMREQ          ; CONTINUE SENDING BYTES
    3090/ 13.110 :                              CPU     8080
    3091/ 13.110 :                      ;
    3092/ 13.110 :                      ;       GET STATUS - COMPLETION BYTE SHOULD BE ZEROS AND
    3093/ 13.110 :                      ;       STATUS BYTE SHOULD BE ZERO IN 2 LS BITS
    3094/ 13.110 :                      ;
    3095/ 13.110 : 315 150 006          GETST   CALL    IN1.
    3096/ 13.113 : 346 320                      ANI     BS.REQ+BS.DTD+BS.COM
    3097/ 13.115 : 376 220                      CPI     BS.REQ+BS.COM
    3098/ 13.117 :                              CPU     Z80 
    3099/ 13.117 : 040 367                      JR      NZ,GETST        ; WAIT FOR CONTROLLER
    3100/ 13.121 :                              CPU     8080
    3101/ 13.121 :                      
    3102/ 13.121 : 315 170 006                  CALL    IN.             ;                            /2.1b/
    3103/ 13.124 : 117                          MOV     C,A             ; (C)=STATUS BYTE
    3104/ 13.125 : 062 070 041                  STA     AIO.DIR+6
    3105/ 13.130 :                      
    3106/ 13.130 : 315 150 006          GETCPT  CALL    IN1.
    3107/ 13.133 : 107                          MOV     B,A
    3108/ 13.134 : 062 071 041                  STA     AIO.DIR+7
    3109/ 13.137 :                      
    3110/ 13.137 : 346 340                      ANI     BS.REQ+BS.DTD+BS.MTY+BS.COM
    3111/ 13.141 : 376 240                      CPI     BS.REQ+BS.MTY+BS.COM
    3112/ 13.143 :                              CPU     Z80
    3113/ 13.143 : 040 363                      JR      NZ,GETCPT       ;    WAIT FOR MESSAGE
    3114/ 13.145 :                              CPU     8080
    3115/ 13.145 : 062 072 041                  STA     AIO.DIR+8       ; SAVE BYTES FOR DEBUG
    3116/ 13.150 :                      
    3117/ 13.150 : 373                          EI
    3118/ 13.151 :                      
    3119/ 13.151 : 315 170 006                  CALL    IN.             ; (A)=COMPLETION BYTE
    3120/ 13.154 : 267                          ORA     A               ; CHECK COMPLETION
    3121/ 13.155 : 067                          STC
    3122/ 13.156 : 300                          RNZ                     ; SHOULD BE ZERO
    3123/ 13.157 :                      
    3124/ 13.157 : 171                          MOV     A,C
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 69 - 2024-05-13 09:34:53 PM


    3125/ 13.160 : 346 003                      ANI     00000011B       ; CHECK FOR ERRORS
    3126/ 13.162 : 067                          STC
    3127/ 13.163 : 300                          RNZ                     ; IF BIT IS SET
    3128/ 13.164 :                      
    3129/ 13.164 : 170                          MOV     A,B
    3130/ 13.165 : 346 002                      ANI     00000010B
    3131/ 13.167 : 067                          STC
    3132/ 13.170 : 300                          RNZ                     ; IF INTERFACE ERROR
    3133/ 13.171 :                      
    3134/ 13.171 : 257                          XRA     A               ; CLEAR CARRY
    3135/ 13.172 : 311                          RET
    3136/ 13.173 :                      
    3137/ 13.173 : 041 200 042          TFDATA  LXI     H,USERFWA       ; HL = LOAD ADDRESS
    3138/ 13.176 :                      
    3139/ 13.176 : 315 150 006          TFREQ   CALL    IN1.
    3140/ 13.201 : 117                          MOV     C,A
    3141/ 13.202 : 346 200                      ANI     BS.REQ
    3142/ 13.204 :                              CPU     Z80
    3143/ 13.204 : 050 370                      JR      Z,TFREQ         ;   WAIT FOR REQUEST
    3144/ 13.206 :                              CPU     8080
    3145/ 13.206 :                      
    3146/ 13.206 : 171                          MOV     A,C
    3147/ 13.207 : 346 020                      ANI     BS.COM
    3148/ 13.211 :                              CPU     Z80
    3149/ 13.211 : 040 275                      JR      NZ,GETST        ;      IF DONE, CHECK STATUS
    3150/ 13.213 :                              CPU     8080
    3151/ 13.213 :                      
    3152/ 13.213 : 315 170 006                  CALL    IN.             ;        GET DATA BYTE
    3153/ 13.216 : 167                          MOV     M,A
    3154/ 13.217 : 043                          INX     H
    3155/ 13.220 :                              CPU     Z80
    3156/ 13.220 : 030 354                      JR      TFREQ           ; CONTINUE UNTIL DONE
    3157/ 13.222 :                              CPU     8080
    3158/ 13.222 :                      
    3159/ 13.222 :                      ;;      FEDEV - FUTURE EXPANSION DEVICE
    3160/ 13.222 :                      ;
    3161/ 13.222 :                      ;       CURRENTLY, FEDEV JUST PRINTS "UNKNOWN DEVICE"
    3162/ 13.222 :                      ;
    3163/ 13.222 :                      
    3164/ 13.222 : 041 233 013          FEDEV   LXI     H,MSG.FE
    3165/ 13.225 : 315 100 006                  CALL    TYPMSG
    3166/ 13.230 : 303 177 002                  JMP     NODEV1          ; ENTER COMMON RECOVERY CODE
    3167/ 13.233 :                      
    3168/ 13.233 : 077 125 156 153 157  MSG.FE  DB      '?Unkown Device',0
          13.240 : 167 156 040 104 145
          13.245 : 166 151 143 145 000
    3169/ 13.252 :                      
    3170/ 13.252 :                      ;;      DYMEM10 - DYNAMIC RAM TEST CONTINUED
    3171/ 13.252 :                      ;
    3172/ 13.252 :                      
    3173/ 13.252 : 076 007              DYMEM10 MVI     A,A.BEL
    3174/ 13.254 :                              CPU     Z80
    3175/ 13.254 : 375 041 244 007              LD      IY,DY10.5
    3176/ 13.260 :                              CPU     8080
    3177/ 13.260 :                      
    3178/ 13.260 : 303 143 003                  JMP     DYASC
    3179/ 13.263 :                      
    3180/ 13.263 :                      ;;      CCL - CHECK COMMAND LINE
    3181/ 13.263 :                      ;
    3182/ 13.263 :                      ;       CCL CHECKS TO SEE IF THE USER WISHES TO PASS A COMMAND
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 70 - 2024-05-13 09:34:53 PM


    3183/ 13.263 :                      ;       TO THE BOOT ROUTINE. IF THE USER SIMPLY TYPES A CARRIAGE
    3184/ 13.263 :                      ;       RETURN, THEN NO COMMAND LINE IS PRESENT AND (S) = 42.200
    3185/ 13.263 :                      ;       OTHERWISE THE COMMAND LINE IS PUSHED ONTO THE STACK A LA HDOS
    3186/ 13.263 :                      ;       AND THE BOOT ROUTINES CAN DO WITH IT AS THEY SEE FIT.
    3187/ 13.263 :                      ;
    3188/ 13.263 :                      ;       ENTRY:  NONE
    3189/ 13.263 :                      ;
    3190/ 13.263 :                      ;       EXIT:   (SP)    =       42.200
    3191/ 13.263 :                      ;                               NO COMMAND LINE
    3192/ 13.263 :                      ;               (S)     <>      42.200
    3193/ 13.263 :                      ;                               COMMAND ON STACK TERMINATED WITH 000Q
    3194/ 13.263 :                      ;
    3195/ 13.263 :                      ;       USES:   SP
    3196/ 13.263 :                      ;
    3197/ 13.263 :                      
    3198/ 13.263 : 062 000 040          CCL     STA     START           ; SAVE UNIT NUMBER
    3199/ 13.266 : 042 002 040                  SHLD    IOWRK           ; SAVE DEVICE ADDRESS
    3200/ 13.271 : 061 200 042                  LXI     SP,21200Q       ; SET STACK
    3201/ 13.274 :                      
    3202/ 13.274 : 041 062 041                  LXI     H,AIO.DIR
    3203/ 13.277 : 016 035                      MVI     C,PRIM-AIO.DIR-1 ; (C) = MAXIMUM ALLOWABLE LENGTH
    3204/ 13.301 :                      
    3205/ 13.301 :                      ;       GET 1ST CHARACTER
    3206/ 13.301 :                      
    3207/ 13.301 : 315 262 003          CCL1    CALL    RCC             ; READ KEYBOARD
    3208/ 13.304 : 376 015                      CPI     A.CR            ; IS HE DONE?
    3209/ 13.306 :                              CPU     Z80
    3210/ 13.306 : 050 017                      JR      Z,CCL3
    3211/ 13.310 :                              CPU     8080
    3212/ 13.310 : 376 072                      CPI     ':'             ; COMMAND LINE FOLLOWS
    3213/ 13.312 :                              CPU     Z80
    3214/ 13.312 : 050 027                      JR      Z,CCL4
    3215/ 13.314 :                              CPU     8080
    3216/ 13.314 : 376 040                      CPI     ' '             ; ALLOW A SPACE
    3217/ 13.316 :                              CPU     Z80
    3218/ 13.316 : 050 002                      JR      Z,CCL2
    3219/ 13.320 :                              CPU     8080
    3220/ 13.320 : 076 007                      MVI     A,A.BEL
    3221/ 13.322 : 315 302 003          CCL2    CALL    WCC             ; ECHO CHARACTER
    3222/ 13.325 :                              CPU     Z80
    3223/ 13.325 : 030 352                      JR      CCL1
    3224/ 13.327 :                              CPU     8080
    3225/ 13.327 :                      
    3226/ 13.327 :                      ;       JUST A CARRIAGE RETURN, NO COMMAND
    3227/ 13.327 :                      
    3228/ 13.327 : 315 370 005          CCL3    CALL    WCR.            ; ECHO CRLF
    3229/ 13.332 : 052 002 040          CCL3.   LHLD    IOWRK
    3230/ 13.335 : 072 000 040                  LDA     START           ; RESTORE REGISTERS
    3231/ 13.340 : 303 360 001                  JMP     BOOT6           ; RETURN TO CALLED
    3232/ 13.343 :                      
    3233/ 13.343 :                      ;       HAD ':', COMMAND LINE FOLLOWS
    3234/ 13.343 :                      
    3235/ 13.343 : 315 302 003          CCL4    CALL    WCC             ; ECHO THE CHARACTER
    3236/ 13.346 : 315 262 003          CCL5    CALL    RCC             ; GET NEXT
    3237/ 13.351 : 376 015                      CPI     A.CR
    3238/ 13.353 :                              CPU     Z80
    3239/ 13.353 : 050 013                      JR      Z,CCL6          ;   IF END OF LINE
    3240/ 13.355 :                              CPU     8080
    3241/ 13.355 : 167                          MOV     M,A             ; SAVE CHARACTER
    3242/ 13.356 : 043                          INX     H
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 71 - 2024-05-13 09:34:53 PM


    3243/ 13.357 : 015                          DCR     C
    3244/ 13.360 :                              CPU     Z80
    3245/ 13.360 : 040 361                      JR      NZ,CCL4         ;   IF NOT TOO MANY
    3246/ 13.362 :                              CPU     8080
    3247/ 13.362 : 014                          INR     C               ; RESET COUNTER
    3248/ 13.363 : 053                          DCX     H               ; IGNORE IT
    3249/ 13.364 : 076 007                      MVI     A,A.BEL         ; BEEP
    3250/ 13.366 :                              CPU     Z80
    3251/ 13.366 : 030 353                      JR      CCL4
    3252/ 13.370 :                              CPU     8080
    3253/ 13.370 :                      
    3254/ 13.370 :                      ;       END OF COMMAND LINE
    3255/ 13.370 :                      
    3256/ 13.370 : 315 370 005          CCL6    CALL    WCR.
    3257/ 13.373 : 066 000                      MVI     M,0             ; NUL TERMINATOR
    3258/ 13.375 : 353                          XCHG                    ; (DE)=LWA OF COMMAND
    3259/ 13.376 : 041 000 000                  LXI     H,0
    3260/ 14.001 : 071                          DAD     SP              ; HL = STACK
    3261/ 14.002 : 053                          DCX     H               ; HL = LWA OF COMMAND LINE (NULL BYTE)
    3262/ 14.003 :                      
    3263/ 14.003 :                      ;       MOVE COMMAND INTO STACK AREA
    3264/ 14.003 :                      
    3265/ 14.003 : 363                          DI                      ; NO CLOCK INTERRUPTS
    3266/ 14.004 :                      
    3267/ 14.004 : 032                  CCL7    LDAX    D               ; DE = COMMAND BYTE
    3268/ 14.005 : 167                          MOV     M,A             ; MOVE IT IN
    3269/ 14.006 : 053                          DCX     H
    3270/ 14.007 : 033                          DCX     D               ; BUMP POINTERS
    3271/ 14.010 : 042 067 040                  SHLD    BLKICW          ; SAVE FOR A SECOND
    3272/ 14.013 : 041 061 041                  LXI     H,AIO.DIR-1     ; AM I DONE?
    3273/ 14.016 : 174                          MOV     A,H
    3274/ 14.017 : 272                          CMP     D
    3275/ 14.020 :                              CPU     Z80
    3276/ 14.020 : 040 004                      JR      NZ,CCL8         ;   NO
    3277/ 14.022 :                              CPU     8080
    3278/ 14.022 : 175                          MOV     A,L
    3279/ 14.023 : 273                          CMP     E
    3280/ 14.024 :                              CPU     Z80
    3281/ 14.024 : 050 005                      JR      Z,CCL9          ;  YES, FINISH UP
    3282/ 14.026 :                              CPU     8080
    3283/ 14.026 :                      
    3284/ 14.026 : 052 067 040          CCL8    LHLD    BLKICW
    3285/ 14.031 :                              CPU     Z80
    3286/ 14.031 : 030 351                      JR      CCL7
    3287/ 14.033 :                              CPU     8080
    3288/ 14.033 :                      
    3289/ 14.033 :                      ;       FINISHED WITH COMMAND LINE, (BLKICW)=FWA-1
    3290/ 14.033 :                      
    3291/ 14.033 : 052 067 040          CCL9    LHLD     BLKICW
    3292/ 14.036 : 043                          INX      H
    3293/ 14.037 : 371                          SPHL
    3294/ 14.040 :                              CPU     Z80
    3295/ 14.040 : 030 270                      JR       CCL3.          ; AND GO BACK
    3296/ 14.042 :                              CPU     8080
    3297/ 14.042 :                      
    3298/ 14.042 :                      ;;      BSMSG - BOOT SECONDARY MESSAGE
    3299/ 14.042 :                      ;
    3300/ 14.042 :                      
    3301/ 14.042 : 040 123 104 000      BSMSG   DB      ' SD',0
    3302/ 14.046 :                      
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 72 - 2024-05-13 09:34:53 PM


    3303/ 14.046 :                      
    3304/ 14.046 :                      ;;      ERRMSG - GENERAL ERROR MESSAGE
    3305/ 14.046 :                      
    3306/ 14.046 : 077 102 157 157 164  ERRMSG  DB     '?Boot Error',0
          14.053 : 040 105 162 162 157
          14.060 : 162 000            
    3307/ 14.062 :                      
    3308/ 14.062 :                      ;;      MSG.PR - Prompt Message
    3309/ 14.062 :                      ;
    3310/ 14.062 : 015 012 040 040 110  MSG.PR  DB      A.CR,A.LF,'  H: ',0
          14.067 : 072 040 000        
    3311/ 14.072 :                      
    3312/ 14.072 :                      ;;      RADIX - ASSIGN DEFAULT RADIX
    3313/ 14.072 :                      ;
    3314/ 14.072 :                      ;       RADIX SETS THE SYSTEM RADIX TO OCTAL OR HEX
    3315/ 14.072 :                      ;
    3316/ 14.072 :                      
    3317/ 14.072 : 041 203 014          RADIX   LXI     H,MSG.RAD
    3318/ 14.075 : 315 100 006                  CALL    TYPMSG          ; COMPLETE NAME
    3319/ 14.100 :                      
    3320/ 14.100 : 315 262 003          RADIX1  CALL    RCC             ; READ CHARACTER
    3321/ 14.103 : 315 223 015                  CALL    MCU             ; MAP TO UPPER
    3322/ 14.106 : 376 117                      CPI     'O'
    3323/ 14.110 :                              CPU     Z80
    3324/ 14.110 : 050 017                      JR      Z,RADIX2
    3325/ 14.112 :                              CPU     8080
    3326/ 14.112 : 376 110                      CPI     'H'
    3327/ 14.114 :                              CPU     Z80
    3328/ 14.114 : 050 026                      JR      Z,RADIX3
    3329/ 14.116 :                              CPU     8080
    3330/ 14.116 : 376 015                      CPI     A.CR
    3331/ 14.120 :                              CPU     Z80
    3332/ 14.120 : 050 036                      JR      Z,RADIX4
    3333/ 14.122 :                              CPU     8080
    3334/ 14.122 : 076 007                      MVI     A,A.BEL
    3335/ 14.124 : 315 302 003                  CALL    WCC
    3336/ 14.127 :                              CPU     Z80
    3337/ 14.127 : 030 347                      JR      RADIX1
    3338/ 14.131 :                              CPU     8080
    3339/ 14.131 :                      
    3340/ 14.131 :                      ;       SET OCTAL RADIO
    3341/ 14.131 :                      
    3342/ 14.131 : 041 211 014          RADIX2  LXI     H,RAD.OCT
    3343/ 14.134 : 315 100 006                  CALL    TYPMSG
    3344/ 14.137 : 257                          XRA     A
    3345/ 14.140 : 062 071 040                  STA     RADFLG          ; SET FLAG
    3346/ 14.143 : 311                          RET
    3347/ 14.144 :                      
    3348/ 14.144 :                      ;       SET HEX RADIX
    3349/ 14.144 :                      
    3350/ 14.144 : 041 217 014          RADIX3  LXI H,RAD.HEX
    3351/ 14.147 : 315 100 006                  CALL    TYPMSG
    3352/ 14.152 : 076 001                      MVI     A,1
    3353/ 14.154 : 062 071 040                  STA     RADFLG
    3354/ 14.157 : 311                          RET
    3355/ 14.160 :                      
    3356/ 14.160 :                      ;       SHOW CURRENT SETTING
    3357/ 14.160 :                      
    3358/ 14.160 : 041 211 014          RADIX4  LXI     H,RAD.OCT
    3359/ 14.163 : 315 112 015                  CALL    CHKRAD          ; ASSUME OCTAL
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 73 - 2024-05-13 09:34:53 PM


    3360/ 14.166 :                              CPU     Z80
    3361/ 14.166 : 050 003                      JR      Z,RADIX5        ; WAS OCTAL
    3362/ 14.170 :                              CPU     8080
    3363/ 14.170 : 041 217 014                  LXI     H,RAD.HEX
    3364/ 14.173 :                      
    3365/ 14.173 : 076 015              RADIX5  MVI     A,A.CR
    3366/ 14.175 : 315 370 005                  CALL    WCR.            ; PRINT CRLF
    3367/ 14.200 : 303 100 006                  JMP     TYPMSG          ; TYPE NAME
    3368/ 14.203 :                      
    3369/ 14.203 :                      ;       MESSAGES
    3370/ 14.203 :                      
    3371/ 14.203 : 141 144 151 170 040  MSG.RAD DB      'adix ',0
          14.210 : 000                
    3372/ 14.211 : 117 143 164 141 154  RAD.OCT DB      'Octal',0
          14.216 : 000                
    3373/ 14.217 : 110 145 170 141 144  RAD.HEX DB      'Hexadecimal',0
          14.224 : 145 143 151 155 141
          14.231 : 154 000            
    3374/ 14.233 :                      
    3375/ 14.233 :                      ;;      INPUT - PORT INPUT
    3376/ 14.233 :                      ;
    3377/ 14.233 :                      ;       INPUT INPUTS THE VALUE FROM THE SPECIFIED
    3378/ 14.233 :                      ;       PORT NUMBER. THIS VALUE IS THEN PRINTED.
    3379/ 14.233 :                      ;
    3380/ 14.233 :                      
    3381/ 14.233 : 041 327 014          INPUT   LXI     H,MSG.INP       ; FINISH COMMAND
    3382/ 14.236 : 315 100 006                  CALL    TYPMSG
    3383/ 14.241 :                      
    3384/ 14.241 :                      ;       GET DESIRED PORT NUMBER
    3385/ 14.241 :                      
    3386/ 14.241 : 041 120 041                  LXI     H,PRIM
    3387/ 14.244 : 247                          ANA     A               ; CLEAR CARRY
    3388/ 14.245 : 315 036 015                  CALL    IOB             ; GET PORT
    3389/ 14.250 :                      
    3390/ 14.250 :                      ;       READ DATA FROM THAT PORT
    3391/ 14.250 :                      
    3392/ 14.250 : 315 170 006                  CALL    IN.             ; GET DATA AT (PRIM)
    3393/ 14.253 :                      
    3394/ 14.253 :                      ;       NOW PRINT RESULT
    3395/ 14.253 :                      
    3396/ 14.253 : 365                          PUSH    PSW
    3397/ 14.254 : 076 015                      MVI     A,A.CR
    3398/ 14.256 : 315 370 005                  CALL    WCR.            ; PRINT CRLF
    3399/ 14.261 : 361                          POP     PSW
    3400/ 14.262 : 303 077 015                  JMP     TOB             ; TYPE THE BYTE
    3401/ 14.265 :                      
    3402/ 14.265 :                      ;       OUTPUT - PORT OUTPUT
    3403/ 14.265 :                      ;
    3404/ 14.265 :                      ;       OUTPUT SENDS DATA OUT THE DESIRED PORT
    3405/ 14.265 :                      ;       IN KEEPING WITH THE TAPE LOAD/DUMP ROUTINES, THE
    3406/ 14.265 :                      ;       PORT NUMBER IS SPECIFIED FIRST, FOLLOWED BY A HYPHEN
    3407/ 14.265 :                      ;       AND FOLLOWED BY DATA:
    3408/ 14.265 :                      ;
    3409/ 14.265 :                      ;       OUTPUT AAA,DDD<CR>
    3410/ 14.265 :                      ;
    3411/ 14.265 :                      
    3412/ 14.265 : 041 332 014          OUTPUT  LXI     H,MSG.OUT
    3413/ 14.270 : 315 100 006                  CALL    TYPMSG
    3414/ 14.273 :                      
    3415/ 14.273 : 041 003 040                  LXI     H,IOWRK+1       ; STORE INFO IN IOWRK
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 74 - 2024-05-13 09:34:53 PM


    3416/ 14.276 : 026 054                      MVI     D,','           ; TERMINATE PORT BY HYPHEN
    3417/ 14.300 : 247                          ANA     A               ; CLEAR CARRY
    3418/ 14.301 :                      
    3419/ 14.301 : 315 023 015                  CALL    IOA             ; INPUT ADDRESS
    3420/ 14.304 :                      
    3421/ 14.304 : 072 002 040                  LDA     IOWRK           ; (A)=PORT NUMBER
    3422/ 14.307 : 062 120 041                  STA     PRIM            ; SAVE IT
    3423/ 14.312 :                      
    3424/ 14.312 : 247                          ANA     A
    3425/ 14.313 : 041 002 040                  LXI     H,IOWRK         ; GET DATA
    3426/ 14.316 : 315 036 015                  CALL    IOB             ; GET BYTE AND <CR>
    3427/ 14.321 : 072 002 040                  LDA     IOWRK           ; GET DATA IN (A)
    3428/ 14.324 :                      
    3429/ 14.324 : 303 063 006                  JMP     OUT.            ; OUT (PRIM) WITH (A)
    3430/ 14.327 :                      
    3431/ 14.327 :                      ;;      MSG.XXX - INPUT/OUTPUT MESSAGES
    3432/ 14.327 :                      ;
    3433/ 14.327 :                      
    3434/ 14.327 : 156 040 000          MSG.INP DB      'n ',0
    3435/ 14.332 : 165 164 040 000      MSG.OUT DB      'ut ',0
    3436/ 14.336 : 015 012 012 105 162  MSG.ERR DB      A.CR,A.LF,A.LF,'Error @ ',0
          14.343 : 162 157 162 040 100
          14.350 : 040 000            
    3437/ 14.352 :                      
    3438/ 14.352 :                      ;;      SUBM10 - SUBSTITUTE PREFIX
    3439/ 14.352 :                      ;
    3440/ 14.352 :                      
    3441/ 14.352 : 315 112 015          SUBM10  CALL    CHKRAD
    3442/ 14.355 :                              CPU     Z80
    3443/ 14.355 : 040 014                      JR      NZ,SUBM11
    3444/ 14.357 :                              CPU     8080
    3445/ 14.357 : 346 007                      ANI     00000111B       ; GET BINARY VALUE
    3446/ 14.361 : 137                          MOV     E,A             ; SAVE PARTIAL
    3447/ 14.362 : 176                          MOV     A,M             ; GET CURRENT
    3448/ 14.363 : 007                          RLC                     ; MAKE ROOM FOR NEW CHARACTER
    3449/ 14.364 : 007                          RLC
    3450/ 14.365 : 007                          RLC
    3451/ 14.366 : 346 370                      ANI     11111000B       ; TOSS PREVIOUS LSB
    3452/ 14.370 : 263                  SUBM10. ORA     E               ; ADD NEW
    3453/ 14.371 : 167                          MOV     M,A             ; SAVE NEW TOTAL
    3454/ 14.372 : 311                          RET
    3455/ 14.373 : 315 234 015          SUBM11  CALL    CHC             ; CONVERT IT TO HEX
    3456/ 14.376 : 346 017                      ANI     00001111B
    3457/ 15.000 : 137                          MOV     E,A
    3458/ 15.001 : 176                          MOV     A,M
    3459/ 15.002 : 007                          RLC
    3460/ 15.003 : 007                          RLC
    3461/ 15.004 : 007                          RLC
    3462/ 15.005 : 007                          RLC
    3463/ 15.006 : 346 360                      ANI     11110000B
    3464/ 15.010 :                              CPU     Z80
    3465/ 15.010 : 030 356                      JR      SUBM10.
    3466/ 15.012 :                              CPU     8080
    3467/ 15.012 :                      
    3468/ 15.012 :                      ;;      PREFIXES
    3469/ 15.012 :                      ;
    3470/ 15.012 :                      ;       THESE ROUTINES ARE PREFIXES TO THE IOA, IOB,
    3471/ 15.012 :                      ;       TOA, AND TOB ROUTINES. THESE PREFIXES DETERMINE
    3472/ 15.012 :                      ;       THE PROPER BASES TO USE, AND TRANSFER CONTROL
    3473/ 15.012 :                      ;       TO THE NEEDED ROUTINES
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 75 - 2024-05-13 09:34:53 PM


    3474/ 15.012 :                      ;
    3475/ 15.012 :                      
    3476/ 15.012 : 315 112 015          IROC    CALL    CHKRAD
    3477/ 15.015 : 312 140 005                  JZ      IROCO
    3478/ 15.020 : 303 326 015                  JMP     IROCH
    3479/ 15.023 :                      
    3480/ 15.023 :                      
    3481/ 15.023 : 365                  IOA     PUSH    PSW
    3482/ 15.024 : 315 112 015                  CALL    CHKRAD          ; CHECK RADIX
    3483/ 15.027 : 302 244 015                  JNZ     IHA
    3484/ 15.032 : 361                          POP     PSW             ; SAVE CARRY FLAG
    3485/ 15.033 : 303 062 003                  JMP     IOA0
    3486/ 15.036 :                      
    3487/ 15.036 : 365                  IOB     PUSH    PSW
    3488/ 15.037 : 315 112 015                  CALL    CHKRAD
    3489/ 15.042 : 302 123 015                  JNZ     IHB
    3490/ 15.045 : 361                          POP     PSW
    3491/ 15.046 : 303 066 003                  JMP     IOB0
    3492/ 15.051 :                      
    3493/ 15.051 : 365                  IOC     PUSH    PSW
    3494/ 15.052 : 315 112 015                  CALL    CHKRAD
    3495/ 15.055 : 302 214 015                  JNZ     IHC
    3496/ 15.060 : 361                          POP     PSW
    3497/ 15.061 : 303 266 005                  JMP     IOC0
    3498/ 15.064 :                      
    3499/ 15.064 : 365                  TOA     PUSH    PSW
    3500/ 15.065 : 315 112 015                  CALL    CHKRAD
    3501/ 15.070 : 302 001 016                  JNZ     THA
    3502/ 15.073 : 361                          POP     PSW
    3503/ 15.074 : 303 300 005                  JMP     TOA0
    3504/ 15.077 :                      
    3505/ 15.077 : 365                  TOB     PUSH    PSW
    3506/ 15.100 : 315 112 015                  CALL    CHKRAD
    3507/ 15.103 : 302 350 015                  JNZ     THB
    3508/ 15.106 : 361                          POP     PSW
    3509/ 15.107 : 303 322 005                  JMP     TOB0
    3510/ 15.112 :                      
    3511/ 15.112 :                      ;       CHECK CURRENT RADIX
    3512/ 15.112 :                      
    3513/ 15.112 : 305                  CHKRAD  PUSH    B
    3514/ 15.113 : 107                          MOV     B,A
    3515/ 15.114 : 072 071 040                  LDA     RADFLG
    3516/ 15.117 : 247                          ANA     A
    3517/ 15.120 : 170                          MOV     A,B
    3518/ 15.121 : 301                          POP     B
    3519/ 15.122 : 311                          RET
    3520/ 15.123 :                      
    3521/ 15.123 :                      ;;      HEX ROUTINES
    3522/ 15.123 :                      ;
    3523/ 15.123 :                      ;       THESE ROUTINES ARE THE HEX EQUIVALENT OF THE
    3524/ 15.123 :                      ;       OCTAL ROUTINES PREFIXES ABOVE
    3525/ 15.123 :                      ;
    3526/ 15.123 :                      ;       NOTE: THESE ROUTINES ARE ENTERED WITH PSW ON THE STACK
    3527/ 15.123 :                      ;
    3528/ 15.123 :                      
    3529/ 15.123 : 066 000              IHB     MVI     M,0             ; CLEAR RESULT
    3530/ 15.125 : 361                          POP     PSW
    3531/ 15.126 : 324 262 003          IHB1    CNC     RCC
    3532/ 15.131 :                      
    3533/ 15.131 :                      ;       CHECK FOR VALIDITY
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 76 - 2024-05-13 09:34:53 PM


    3534/ 15.131 :                      
    3535/ 15.131 : 315 173 015                  CALL    CCH             ; CHECK CHARACTER FOR VALID HEX
    3536/ 15.134 :                              CPU     Z80
    3537/ 15.134 : 060 013                      JR      NC,IHB2
    3538/ 15.136 :                              CPU     8080
    3539/ 15.136 : 376 015                      CPI     A.CR            ; RETURN?
    3540/ 15.140 : 310                          RZ                      ; YES, DONE
    3541/ 15.141 : 247                          ANA     A               ; INSURE CARRY OFF
    3542/ 15.142 : 076 007                      MVI     A,A.BEL
    3543/ 15.144 : 315 302 003                  CALL    WCC
    3544/ 15.147 :                              CPU     Z80
    3545/ 15.147 : 030 355                      JR      IHB1
    3546/ 15.151 :                              CPU     8080
    3547/ 15.151 :                      
    3548/ 15.151 :                      ;       HAVE A VALID HEX CHARACTER
    3549/ 15.151 :                      
    3550/ 15.151 : 315 302 003          IHB2    CALL    WCC
    3551/ 15.154 : 315 234 015                  CALL    CHC             ; CONVERT HEX CHARACTER
    3552/ 15.157 : 137                          MOV     E,A
    3553/ 15.160 : 176                          MOV     A,M             ; GET VALUE SO FAR
    3554/ 15.161 : 007                          RLC
    3555/ 15.162 : 007                          RLC                     ; MOVE UP NIBBLE
    3556/ 15.163 : 007                          RLC
    3557/ 15.164 : 007                          RLC
    3558/ 15.165 : 346 360                      ANI     11110000B       ; THROW AWAY LAST
    3559/ 15.167 : 263                          ORA     E
    3560/ 15.170 : 167                          MOV     M,A             ; SET NEW NIBBLE
    3561/ 15.171 :                              CPU     Z80
    3562/ 15.171 : 030 333                      JR      IHB1
    3563/ 15.173 :                              CPU     8080
    3564/ 15.173 :                      
    3565/ 15.173 :                      ;;      CHECK FOR VALID HEX CHARACTER
    3566/ 15.173 :                      ;
    3567/ 15.173 :                      ;       CCH CHECKS (A) FOR HEX VALIDITY
    3568/ 15.173 :                      ;       'C' IS SET IF INVALID
    3569/ 15.173 :                      ;
    3570/ 15.173 :                      
    3571/ 15.173 : 315 223 015          CCH     CALL    MCU             ; MAP TO UPPER
    3572/ 15.176 : 376 060              CPI     CPI     '0'
    3573/ 15.200 : 330                          RC                      ; IF LESS THAN ZERO
    3574/ 15.201 : 376 072                      CPI     '9'+1
    3575/ 15.203 : 077                          CMC
    3576/ 15.204 : 320                          RNC                     ; BETWEEN 0 AND 9
    3577/ 15.205 : 376 101                      CPI     'A'
    3578/ 15.207 : 330                          RC                      ; LOWER CASE IS NOT VALID
    3579/ 15.210 : 376 107                      CPI     'F'+1
    3580/ 15.212 : 077                          CMC
    3581/ 15.213 : 311                          RET
    3582/ 15.214 :                      
    3583/ 15.214 :                      ;;      IHC - INPUT HEX CHARACTER
    3584/ 15.214 :                      ;
    3585/ 15.214 :                      
    3586/ 15.214 : 361                  IHC     POP     PSW
    3587/ 15.215 : 315 262 003                  CALL    RCC             ; GET CHARACTER
    3588/ 15.220 : 303 173 015                  JMP     CCH             ; CHECK FOR VALID HEX
    3589/ 15.223 :                      
    3590/ 15.223 :                      ;;      MCU - MAP CASE TO UPPER
    3591/ 15.223 :                      ;
    3592/ 15.223 :                      
    3593/ 15.223 : 376 141              MCU     CPI     'a'
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 77 - 2024-05-13 09:34:53 PM


    3594/ 15.225 : 330                          RC                      ; LESS THAN 'A'
    3595/ 15.226 : 376 173                      CPI     'z'+1
    3596/ 15.230 : 320                          RNC
    3597/ 15.231 : 346 137                      ANI     01011111B
    3598/ 15.233 : 311                          RET
    3599/ 15.234 :                      
    3600/ 15.234 :                      ;;      CONVERT HEX TO BINARY
    3601/ 15.234 :                      ;
    3602/ 15.234 :                      ;       CHC CONVERTS THE ASCII CHARACTER IN (A) INTO
    3603/ 15.234 :                      ;       IT'S 4 BIT HEX EQUIVALENT
    3604/ 15.234 :                      ;
    3605/ 15.234 :                      
    3606/ 15.234 : 326 060              CHC     SUI     '0'
    3607/ 15.236 : 376 012                      CPI     9+1
    3608/ 15.240 : 330                          RC                      ; IF DONE
    3609/ 15.241 : 326 007                      SUI     7
    3610/ 15.243 : 311                          RET                     ; CONVERT A - F
    3611/ 15.244 :                      
    3612/ 15.244 :                      ;       INPUT HEX ADDRESS
    3613/ 15.244 :                      
    3614/ 15.244 : 361                  IHA     POP     PSW
    3615/ 15.245 : 305                  IHA.    PUSH    B
    3616/ 15.246 : 102                          MOV     B,D
    3617/ 15.247 : 345                          PUSH    H               ; B - DELIMITER
    3618/ 15.250 : 041 000 000                  LXI     H,0
    3619/ 15.253 : 324 262 003          IHA1    CNC     RCC
    3620/ 15.256 : 315 173 015                  CALL    CCH             ; CHECK FOR HEX
    3621/ 15.261 :                              CPU     Z80
    3622/ 15.261 : 070 016                      JR      C,IHA3          ;   IF NOT, CHECK DELIMITER
    3623/ 15.263 :                              CPU     8080
    3624/ 15.263 : 315 302 003                  CALL    WCC
    3625/ 15.266 : 315 234 015                  CALL    CHC             ; CONVERT IT
    3626/ 15.271 : 051                          DAD     H
    3627/ 15.272 : 051                          DAD     H
    3628/ 15.273 : 051                          DAD     H
    3629/ 15.274 : 051                          DAD     H               ; HL = HL + 16
    3630/ 15.275 : 205                          ADD     L
    3631/ 15.276 : 157                          MOV     L,A             ; MOVE IN NEW NIBBLE
    3632/ 15.277 :                              CPU     Z80
    3633/ 15.277 : 030 352                      JR      IHA1
    3634/ 15.301 :                              CPU     8080
    3635/ 15.301 :                      
    3636/ 15.301 : 270                  IHA3    CMP     B
    3637/ 15.302 :                              CPU     Z80
    3638/ 15.302 : 050 010                      JR      Z,IHA4          ; IF VALID DELIMITER
    3639/ 15.304 :                              CPU     8080
    3640/ 15.304 : 076 007                      MVI     A,A.BEL
    3641/ 15.306 : 315 302 003                  CALL    WCC
    3642/ 15.311 : 247                          ANA     A
    3643/ 15.312 :                              CPU     Z80
    3644/ 15.312 : 030 337                      JR      IHA1
    3645/ 15.314 :                              CPU     8080
    3646/ 15.314 :                      
    3647/ 15.314 :                      ;       END OF INPUT
    3648/ 15.314 :                      
    3649/ 15.314 : 315 302 003          IHA4    CALL    WCC             ; PRINT DELIMITER
    3650/ 15.317 : 353                          XCHG
    3651/ 15.320 : 341                          POP     H
    3652/ 15.321 : 162                          MOV     M,D
    3653/ 15.322 : 053                          DCX     H
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 78 - 2024-05-13 09:34:53 PM


    3654/ 15.323 : 163                          MOV     M,E
    3655/ 15.324 : 301                          POP     B
    3656/ 15.325 : 311                          RET
    3657/ 15.326 :                      
    3658/ 15.326 :                      ;       IROC REPLACEMENT
    3659/ 15.326 :                      
    3660/ 15.326 : 315 262 003          IROCH   CALL    RCC
    3661/ 15.331 : 376 015                      CPI     A.CR
    3662/ 15.333 : 310                          RZ                      ; IF CARRIAGE RETURN
    3663/ 15.334 :                      
    3664/ 15.334 : 315 173 015                  CALL    CCH
    3665/ 15.337 : 077                          CMC
    3666/ 15.340 : 330                          RC                      ; IF VALID
    3667/ 15.341 :                      
    3668/ 15.341 : 076 007                      MVI     A,A.BEL
    3669/ 15.343 : 315 302 003                  CALL    WCC
    3670/ 15.346 :                              CPU     Z80
    3671/ 15.346 : 030 356                      JR      IROCH
    3672/ 15.350 :                              CPU     8080
    3673/ 15.350 :                      
    3674/ 15.350 :                      ;       TYPE BYTE REPLACEMENT
    3675/ 15.350 :                      
    3676/ 15.350 : 361                  THB     POP     PSW
    3677/ 15.351 : 365                  THB1    PUSH    PSW
    3678/ 15.352 : 346 360                      ANI     11110000B
    3679/ 15.354 : 017                          RRC
    3680/ 15.355 : 017                          RRC
    3681/ 15.356 : 017                          RRC
    3682/ 15.357 : 017                          RRC                     ; DO HIGH NIBBLE FIRST
    3683/ 15.360 : 315 366 015                  CALL    THB2
    3684/ 15.363 : 361                          POP     PSW
    3685/ 15.364 : 346 017                      ANI     00001111B
    3686/ 15.366 :                      
    3687/ 15.366 :                      ;       THB1 - TYPE NIBBLE
    3688/ 15.366 :                      
    3689/ 15.366 : 306 060              THB2    ADI     '0'
    3690/ 15.370 : 376 072                      CPI     '9'+1
    3691/ 15.372 :                              CPU     Z80
    3692/ 15.372 : 070 002                      JR      C,THB3
    3693/ 15.374 :                              CPU     8080
    3694/ 15.374 : 306 007                      ADI     7
    3695/ 15.376 : 303 302 003          THB3    JMP     WCC
    3696/ 16.001 :                      
    3697/ 16.001 :                      ;       THA - TYPE HEX ADDRESS
    3698/ 16.001 :                      
    3699/ 16.001 : 361                  THA     POP     PSW
    3700/ 16.002 : 076 015                      MVI     A,A.CR
    3701/ 16.004 : 315 370 005                  CALL    WCR.
    3702/ 16.007 :                      
    3703/ 16.007 : 174                  THA1    MOV     A,H
    3704/ 16.010 : 315 351 015                  CALL    THB1
    3705/ 16.013 : 175                          MOV     A,L
    3706/ 16.014 : 315 351 015                  CALL    THB1
    3707/ 16.017 : 076 040                      MVI     A,' '
    3708/ 16.021 : 303 302 003                  JMP     WCC
    3709/ 16.024 :                      
    3710/ 16.024 :                      ;;      MEMORY - MEMORY DIAGNOSTIC
    3711/ 16.024 :                      ;
    3712/ 16.024 :                      ;       MEMORY IS THE PREFACE TO THE MEMORY
    3713/ 16.024 :                      ;       DIAGNOSTIC UTILITY
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 79 - 2024-05-13 09:34:53 PM


    3714/ 16.024 :                      ;
    3715/ 16.024 : 041 043 016          MEMORY  LXI     H,MSG.MEM
    3716/ 16.027 : 315 100 006                  CALL    TYPMSG
    3717/ 16.032 : 072 071 040          MEMORY. LDA     RADFLG
    3718/ 16.035 :                              CPU     Z80
    3719/ 16.035 : 331                          EXX
    3720/ 16.036 :                              CPU     8080
    3721/ 16.036 : 157                          MOV     L,A
    3722/ 16.037 :                              CPU     Z80
    3723/ 16.037 : 331                          EXX
    3724/ 16.040 :                              CPU     8080
    3725/ 16.040 : 303 116 007                  JMP     DYMEM
    3726/ 16.043 :                      
    3727/ 16.043 : 145 163 164 040 115  MSG.MEM DB      'est Memory',A.CR,A.LF,0
          16.050 : 145 155 157 162 171
          16.055 : 015 012 000        
    3728/ 16.060 :                      
    3729/ 16.060 :                      ;;      GETBND - GET BOUNDARIES
    3730/ 16.060 :                      ;
    3731/ 16.060 :                      ;       GETBND GETS THREE ADDRESS BOUNDARIES, RETURNING
    3732/ 16.060 :                      ;       THE FIRST IN HL, THE SECOND IN DE AND THE THIRD
    3733/ 16.060 :                      ;       IN BC.
    3734/ 16.060 :                      
    3735/ 16.060 : 041 003 040          GETBND  LXI     H,IOWRK+1
    3736/ 16.063 : 026 054                      MVI     D,','
    3737/ 16.065 : 315 023 015                  CALL    IOA             ; GET FIRST
    3738/ 16.070 :                      
    3739/ 16.070 : 052 002 040                  LHLD    IOWRK
    3740/ 16.073 : 345                  GETBND. PUSH    H               ; ENTRY POINT FOR DE,BC ONLY
    3741/ 16.074 :                      
    3742/ 16.074 : 041 003 040                  LXI     H,IOWRK+1
    3743/ 16.077 : 026 054                      MVI     D,','
    3744/ 16.101 : 315 023 015                  CALL    IOA
    3745/ 16.104 :                      
    3746/ 16.104 : 052 002 040                  LHLD    IOWRK           ; SAVE SECOND
    3747/ 16.107 : 345                          PUSH    H
    3748/ 16.110 : 303 024 001                  JMP     GETBND1         ; CONTINUE ELSEWHERE
    3749/ 16.113 :                      
    3750/ 16.113 :                      ;       INTOXO - EXTENSION TO INT0X
    3751/ 16.113 :                      ;
    3752/ 16.113 :                      ;       INT0X0 CLEANS UP SOME OF THE RAM CELLS
    3753/ 16.113 :                      ;
    3754/ 16.113 :                      
    3755/ 16.113 : 257                  INT0X0  XRA     A
    3756/ 16.114 : 062 071 040                  STA     RADFLG
    3757/ 16.117 : 041 377 377                  LXI     H,-1
    3758/ 16.122 : 042 072 040                  SHLD    VEWHLD
    3759/ 16.125 : 001 200 076                  LXI     B,16000
    3760/ 16.130 : 303 050 004                  JMP     INIT0X1
    3761/ 16.133 :                      
    3762/ 16.133 :                      
    3763/ 16.133 :                      ;;      BOOT7 - EXTENSION TO BOOT ROUTINE
    3764/ 16.133 :                      ;
    3765/ 16.133 :                      ;       THIS ROUTINE HANDLES BOOTING FROM DEVICE
    3766/ 16.133 :                      ;       ZERO WITH COMMAND LINES
    3767/ 16.133 :                      ;
    3768/ 16.133 :                      
    3769/ 16.133 : 376 040              BOOT7   CPI     ' '
    3770/ 16.135 :                              CPU     Z80
    3771/ 16.135 : 050 007                      JR      Z,BOOT71        ; TYPES SPACE, MUST WANT COMMAND LINE
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 80 - 2024-05-13 09:34:53 PM


    3772/ 16.137 :                              CPU     8080
    3773/ 16.137 : 376 072                      CPI     ':'
    3774/ 16.141 :                              CPU     Z80
    3775/ 16.141 : 050 012                      JR      Z,BOOT72        ; TYPE :, HERE COMES COMMAND
    3776/ 16.143 :                              CPU     8080
    3777/ 16.143 : 376 060                      CPI     '0'
    3778/ 16.145 : 311                          RET                     ; OTHERWISE, MAYBE UNIT NUMBER
    3779/ 16.146 : 315 302 003          BOOT71  CALL    WCC
    3780/ 16.151 : 257                          XRA     A               ; ENTER CCL AS UNIT 0
    3781/ 16.152 : 303 263 013                  JMP     CCL
    3782/ 16.155 :                      
    3783/ 16.155 :                      ;       HE ALREADY STARTED THE COMMAND LINE, LET'S CATCH UP!
    3784/ 16.155 :                      
    3785/ 16.155 : 257                  BOOT72  XRA     A
    3786/ 16.156 : 062 000 040                  STA     START           ; SAVE UNIT NUMBER
    3787/ 16.161 : 042 002 040                  SHLD    IOWRK           ; SAVE DEVICE ADDRESS
    3788/ 16.164 : 061 200 042                  LXI     SP,21200Q       ; SET UP STACK
    3789/ 16.167 : 041 062 041                  LXI     H,AIO.DIR
    3790/ 16.172 : 016 035                      MVI     C,PRIM-AIO.DIR-1
    3791/ 16.174 : 076 072                      MVI     A,':'           ; ECHO THE COLON
    3792/ 16.176 : 303 343 013                  JMP     CCL4            ; CONTINUE FROM HERE
    3793/ 16.201 :                      
    3794/ 16.201 :                      ;;      EUC - ENTER USER CODE
    3795/ 16.201 :                      ;
    3796/ 16.201 :                      ;       EUC ENTERS THE USER BOOT CODE, AFTER RE-VECTORING
    3797/ 16.201 :                      ;       THE CLOCK INTERRUPT REQUEST VECTORS
    3798/ 16.201 :                      ;
    3799/ 16.201 :                      ;       THE H17 RAM CONSTANTS ETC. ARE ALSO MOVED IN
    3800/ 16.201 :                      
    3801/ 16.201 : 001 130 000          EUC     LXI     B,BOOTAL        ; SET THE COUNT TO MOVE IN CONSTANTS AND VECTORS
    3802/ 16.204 : 021 132 037                  LXI     D,BOOTA         ; SET THE SOURCE ADDRESS
    3803/ 16.207 : 041 110 040                  LXI     H,D.CON         ; SET THE DESTINATION ADDRESS
    3804/ 16.212 : 315 252 030                  CALL    DMOVE           ; MOVE IT
    3805/ 16.215 :                      
    3806/ 16.215 :                      ;       ENTRY POINT FROM H17 (CONSTANTS ALREADY MOVED IN)
    3807/ 16.215 :                      
    3808/ 16.215 : 363                  EUC.    DI                      ; STOP CLOCK
    3809/ 16.216 : 041 031 034                  LXI     H,CLOCK17       ; LOAD CLOCK ROUTINE ADDRESS
    3810/ 16.221 : 042 040 040                  SHLD    UIVEC+1         ; SET IT INTO VECTOR LOCATION
    3811/ 16.224 : 373                          EI
    3812/ 16.225 :                      
    3813/ 16.225 :                      ;       Zero out H67 operating system info
    3814/ 16.225 :                      
    3815/ 16.225 :                      ;       ERRNZ   S.OSZ-S.OSI02   ; MUST BE CONTIGUOUS BYTES
    3816/ 16.225 : 041 126 041                  LXI     H,S.OSI
    3817/ 16.230 : 006 005                      MVI     B,1+1+3
    3818/ 16.232 : 315 212 031                  CALL    DZERO           ; Zero area
    3819/ 16.235 :                      
    3820/ 16.235 : 303 200 042                  JMP     USERFWA
    3821/ 16.240 :                      
    3822/ 16.240 :                      ;;      DYBYTX
    3823/ 16.240 :                      ;
    3824/ 16.240 :                      ;       DYBYTX DETERMINES WHETHER TO OUTPUT THE BYTE
    3825/ 16.240 :                      ;       IN HEX OR OCTAL. IF IN OCTAL WE MUST REPLACE
    3826/ 16.240 :                      ;       THE CODE WE PATCHED TO GET US HERE.
    3827/ 16.240 :                      ;
    3828/ 16.240 :                      ;       ENTRY:  (A) = BYTE OF TO OUTPUT
    3829/ 16.240 :                      
    3830/ 16.240 : 117                  DYBYTX  MOV     C,A             ; SAVE BYTE
    3831/ 16.241 :                              CPU     Z80
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 81 - 2024-05-13 09:34:53 PM


    3832/ 16.241 : 331                          EXX
    3833/ 16.242 :                              CPU     8080
    3834/ 16.242 : 175                          MOV     A,L             ; GET RADIX FLAG
    3835/ 16.243 :                              CPU     Z80
    3836/ 16.243 : 331                          EXX
    3837/ 16.244 :                              CPU     8080
    3838/ 16.244 : 247                          ANA     A               ; 'Z' SET IF OCTAL
    3839/ 16.245 : 171                          MOV     A,C             ; RESTORE A
    3840/ 16.246 :                              CPU     Z80
    3841/ 16.246 : 040 012                      JR      NZ,DYBYTH       ; IF IN HEX
    3842/ 16.250 :                              CPU     8080
    3843/ 16.250 :                      
    3844/ 16.250 : 117                  DYBYT0  MOV     C,A
    3845/ 16.251 : 346 300                      ANI     11000000B
    3846/ 16.253 : 007                          RLC
    3847/ 16.254 : 007                          RLC
    3848/ 16.255 : 346 003                      ANI     00000011B
    3849/ 16.257 : 303 163 003                  JMP     DYBYT.1         ; FINISH UP OLD OCTAL ROUTINE
    3850/ 16.262 :                      
    3851/ 16.262 :                      ;       IS HEX
    3852/ 16.262 :                      
    3853/ 16.262 : 117                  DYBYTH  MOV     C,A
    3854/ 16.263 : 346 360                      ANI     11110000B
    3855/ 16.265 : 017                          RRC
    3856/ 16.266 : 017                          RRC
    3857/ 16.267 : 017                          RRC
    3858/ 16.270 : 017                          RRC                     ; MOVE DOWN HIGH HALF
    3859/ 16.271 : 346 017                      ANI     00001111B
    3860/ 16.273 : 306 060                      ADI     '0'
    3861/ 16.275 : 376 072                      CPI     '9'+1
    3862/ 16.277 :                              CPU     Z80
    3863/ 16.277 : 070 002                      JR      C,DYBYTH1
    3864/ 16.301 :                              CPU     8080
    3865/ 16.301 : 306 007                      ADI     7
    3866/ 16.303 :                              CPU     Z80
    3867/ 16.303 : 375 041 312 016      DYBYTH1 LD      IY,DYBYTH2      ; SET RETURN ADDRESS
    3868/ 16.307 :                              CPU     8080
    3869/ 16.307 : 303 143 003                  JMP     DYASC
    3870/ 16.312 :                      
    3871/ 16.312 : 171                  DYBYTH2 MOV     A,C
    3872/ 16.313 : 346 017                      ANI     00001111B
    3873/ 16.315 : 306 060                      ADI     '0'
    3874/ 16.317 : 376 072                      CPI     '9'+1
    3875/ 16.321 :                              CPU     Z80
    3876/ 16.321 : 070 002                      JR      C,DYBYTH3
    3877/ 16.323 :                              CPU     8080
    3878/ 16.323 : 306 007                      ADI     7
    3879/ 16.325 :                              CPU     Z80
    3880/ 16.325 : 375 041 334 016      DYBYTH3 LD      IY,DYBYTH4
    3881/ 16.331 :                              CPU     8080
    3882/ 16.331 : 303 143 003                  JMP     DYASC
    3883/ 16.334 :                      
    3884/ 16.334 :                              CPU     Z80
    3885/ 16.334 : 335 351              DYBYTH4 JP      (IX)
    3886/ 16.336 :                              CPU     8080
    3887/ 16.336 :                      
    3888/ 16.336 :                      ;;      DYMM5
    3889/ 16.336 :                      ;
    3890/ 16.336 :                      ;       DETERMINE NUMBER OF BACKSPACES
    3891/ 16.336 :                      ;       TO TYPE FOR EACH CHARACTER INPUT
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 82 - 2024-05-13 09:34:53 PM


    3892/ 16.336 :                      ;
    3893/ 16.336 :                      
    3894/ 16.336 :                              CPU     Z80
    3895/ 16.336 : 331                  DYMM5   EXX
    3896/ 16.337 :                              CPU     8080
    3897/ 16.337 : 175                          MOV     A,L
    3898/ 16.340 :                              CPU     Z80
    3899/ 16.340 : 331                          EXX
    3900/ 16.341 :                              CPU     8080
    3901/ 16.341 : 247                          ANA     A
    3902/ 16.342 : 076 010                      MVI     A,A.BKS
    3903/ 16.344 : 046 003                      MVI     H,3
    3904/ 16.346 : 312 221 007                  JZ      DYME5.5
    3905/ 16.351 : 045                          DCR     H
    3906/ 16.352 : 303 221 007                  JMP     DYME5.5
    3907/ 16.355 :                      
    3908/ 16.355 :                      ;;      CONVERT - BASE CONVERSION
    3909/ 16.355 :                      ;
    3910/ 16.355 :                      ;       CONVERT CONVERTS THE INPUT IN THE OPPOSITE
    3911/ 16.355 :                      ;       RADIX AND CHANGES IT TO THE CURRENT RADIX
    3912/ 16.355 :                      ;
    3913/ 16.355 :                      
    3914/ 16.355 : 041 014 017          CONVERT LXI     H,MSG.CON
    3915/ 16.360 : 315 100 006                  CALL    TYPMSG
    3916/ 16.363 : 041 003 040                  LXI     H,IOWRK+1
    3917/ 16.366 : 026 015                      MVI     D,A.CR
    3918/ 16.370 : 315 112 015                  CALL    CHKRAD
    3919/ 16.373 :                              CPU     Z80
    3920/ 16.373 : 050 005                      JR      Z,CONV.O        ; IF OCTAL
    3921/ 16.375 :                              CPU     8080
    3922/ 16.375 :                      
    3923/ 16.375 : 315 062 003          CONV.H  CALL    IOA0
    3924/ 17.000 :                              CPU     Z80
    3925/ 17.000 : 030 003                      JR      CONV.E
    3926/ 17.002 :                              CPU     8080
    3927/ 17.002 :                      
    3928/ 17.002 : 315 245 015          CONV.O  CALL    IHA.
    3929/ 17.005 :                      
    3930/ 17.005 : 052 002 040          CONV.E  LHLD    IOWRK
    3931/ 17.010 : 353                          XCHG
    3932/ 17.011 : 303 064 015                  JMP     TOA
    3933/ 17.014 :                      
    3934/ 17.014 : 157 156 166 145 162  MSG.CON DB      'onvert ',0
          17.021 : 164 040 000        
    3935/ 17.024 :                      
    3936/ 17.024 :                      ;;      H17X - H17 Extension routine
    3937/ 17.024 :                      ;
    3938/ 17.024 :                      ;       H17x is the extension to the H17 Abort command
    3939/ 17.024 :                      ;
    3940/ 17.024 :                      
    3941/ 17.024 : 315 366 033          H17X    CALL    R.ABORT
    3942/ 17.027 :                      
    3943/ 17.027 :                      ;       Step the heat out 10 tracks
    3944/ 17.027 :                      
    3945/ 17.027 : 315 044 002                  CALL    R.SDP           ; Set up device
    3946/ 17.032 : 076 012                      MVI     A,10
    3947/ 17.034 : 062 240 040                  STA     D.TT            ; Set target track to 10
    3948/ 17.037 : 315 166 040                  CALL    D.SDT           ; Seek Desired track
    3949/ 17.042 :                      
    3950/ 17.042 : 303 366 033                  JMP     R.ABORT         ; Abort and return
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 83 - 2024-05-13 09:34:53 PM


    3951/ 17.045 :                      
    3952/ 17.045 :                      ;;      MTRA - COMMAND DESCRIPTOR TABLE
    3953/ 17.045 :                      ;
    3954/ 17.045 :                      ;       THIS TABLE CONTAINS THE SINGLE LETTER COMMANDS
    3955/ 17.045 :                      ;       UNDERSTOOD BY MTR90. THE ENTRIES IN THIS TABLE
    3956/ 17.045 :                      ;       CONSIST OF A SINGLE LETTER (THE COMMAND KEY) FOLLOWED
    3957/ 17.045 :                      ;       BY A WORD ADDRESS OF THE ROUTINE.
    3958/ 17.045 :                      ;
    3959/ 17.045 :                      ;       NOTE: THIS TABLE WAS MOVED FROM UP FRONT BECAUSE
    3960/ 17.045 :                      ;               OF SIZE CONSIDERATIONS
    3961/ 17.045 :                      ;
    3962/ 17.045 :                      
    3963/ 17.045 : =17.045O             MTRA    EQU     $
    3964/ 17.045 : 107                          DB      'G'             ; *GO*
    3965/ 17.046 : 146 001                      DW      GO88
    3966/ 17.050 :                      
    3967/ 17.050 : 123                          DB      'S'             ; *SUBSTITUTE*
    3968/ 17.051 : 370 004                      DW      SUBM
    3969/ 17.053 :                      
    3970/ 17.053 : 120                          DB      'P'             ; *PROGRAM COUNTER"
    3971/ 17.054 : 103 001                      DW      PCA
    3972/ 17.056 :                      
    3973/ 17.056 : 102                          DB      'B'             ; *BOOT*
    3974/ 17.057 : 256 004                      DW      BOOT
    3975/ 17.061 :                      
    3976/ 17.061 : 111                          DB      'I'             ; *INPUT*
    3977/ 17.062 : 233 014                      DW      INPUT
    3978/ 17.064 :                      
    3979/ 17.064 : 117                          DB      'O'             ; *OUTPUT*
    3980/ 17.065 : 265 014                      DW      OUTPUT
    3981/ 17.067 :                      
    3982/ 17.067 : 122                          DB      'R'             ; *RADIX*
    3983/ 17.070 : 072 014                      DW      RADIX
    3984/ 17.072 :                      
    3985/ 17.072 : 124                          DB      'T'             ; *TEST RAM*
    3986/ 17.073 : 024 016                      DW      MEMORY
    3987/ 17.075 :                      
    3988/ 17.075 : 126                          DB      'V'             ; *VIEW*
    3989/ 17.076 : 044 001                      DW      VIEW
    3990/ 17.100 :                      
    3991/ 17.100 : 103                          DB      'C'             ; *CONVERT*
    3992/ 17.101 : 355 016                      DW      CONVERT
    3993/ 17.103 : =12O                 MTRAL   EQU     ($-MTRA)/3      ; NUMBER OF ENTRIES            /JWT  790507/
    3994/ 17.103 :                      
    3995/ 17.103 :                      ;;      BT170, BY174 - BOOT TABLES
    3996/ 17.103 :                      ;
    3997/ 17.103 :                      ;       THESE TABLES DEFINE DEVICE DEPENDENT INFORMATION USED
    3998/ 17.103 :                      ;       TO DETERMINE WHICH DEVICE IS TO BE BOOTED FROM
    3999/ 17.103 :                      ;
    4000/ 17.103 :                      ;       THE ORGANIZATION OF THE TWO TABLES IS IDENTICAL:
    4001/ 17.103 :                      ;
    4002/ 17.103 :                      ;       BYTE 1          -       PORT NUMBER OF THESE DEVICES
    4003/ 17.103 :                      ;
    4004/ 17.103 :                      ;       BYTE 2          -       DEVICE 0 TMFG
    4005/ 17.103 :                      ;       BYTE 3          -           MAX UNITS
    4006/ 17.103 :                      ;       BYTE 4,5        -           BOOT CODE ADDRESS
    4007/ 17.103 :                      ;
    4008/ 17.103 :                      ;       BYTE 6          -       DEVICE 1 TMFG
    4009/ 17.103 :                      ;       BYTE 7          -           MAX UNITS
    4010/ 17.103 :                      ;       BYTE 8,9        -           BOOT CODE ADDRESS
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 84 - 2024-05-13 09:34:53 PM


    4011/ 17.103 :                      ;
    4012/ 17.103 :                      ;       etc., etc., etc. THRU DEVICE 3
    4013/ 17.103 :                      ;
    4014/ 17.103 :                      ;       NO END-OF-TABLE CHECK IS MADE, THEREFORE 4 ENTRIES
    4015/ 17.103 :                      ;       MUST EXIST PER TABLE
    4016/ 17.103 :                      
    4017/ 17.103 : 174                  BT174   DB     174Q             ; PORT ADDRESS
    4018/ 17.104 : =17.104O             BT174E  EQU    $
    4019/ 17.104 :                      
    4020/ 17.104 : 000                  BTH174  DB     0                ; TMFG = 0
    4021/ 17.105 : 063                          DB     '3'              ; MAX UNIT = 4
    4022/ 17.106 : 207 002                      DW     H17              ; BOOT ADDRESS
    4023/ 17.110 :                      
    4024/ 17.110 : 001                  BTH474  DB     1
    4025/ 17.111 : 064                          DB     '4'
    4026/ 17.112 : 372 001                      DW     Z47
    4027/ 17.114 :                      
    4028/ 17.114 : 000                  BTH674  DB     0
    4029/ 17.115 : 064                          DB     '4'
    4030/ 17.116 : 174 012                      DW     H67
    4031/ 17.120 :                      
    4032/ 17.120 : 000                  BTHFE4  DB     0
    4033/ 17.121 : 061                          DB     '1'
    4034/ 17.122 : 222 013                      DW     FEDEV
    4035/ 17.124 :                      
    4036/ 17.124 : =4O                  BT174L  EQU    ($-BT174E)/4     ; INSURE ALL ENTRIES FILLED
    4037/ 17.124 : (MACRO)                      ERRNZ  BT174L-4
    4037/ 17.124 : =>FALSE                      IF (BT174L-4) != 0
    4037/ 17.124 :                                ERROR Expression is not zero
    4037/ 17.124 : [15.197]                     ENDIF
    4038/ 17.124 :                      
    4039/ 17.124 : 170                  BT170   DB     170Q             ; PORT ADDRESS
    4040/ 17.125 : =17.125O             BT170E  EQU    $
    4041/ 17.125 :                      
    4042/ 17.125 : 000                  BTH370  DB     0
    4043/ 17.126 : 064                          DB     '4'
    4044/ 17.127 : 221 011                      DW     H37
    4045/ 17.131 :                      
    4046/ 17.131 : 001                  BTH470  DB     1
    4047/ 17.132 : 064                          DB     '4'
    4048/ 17.133 : 372 001                      DW     Z47
    4049/ 17.135 :                      
    4050/ 17.135 : 000                  BTH670  DB     0
    4051/ 17.136 : 064                          DB     '4'
    4052/ 17.137 : 174 012                      DW     H67
    4053/ 17.141 :                      
    4054/ 17.141 : 000                  BTHFE0  DB     0
    4055/ 17.142 : 061                          DB     '1'
    4056/ 17.143 : 222 013                      DW     FEDEV
    4057/ 17.145 :                      
    4058/ 17.145 : =4O                  BT170L  EQU    ($-BT170E)/4
    4059/ 17.145 : (MACRO)                      ERRNZ  BT170L-4
    4059/ 17.145 : =>FALSE                      IF (BT170L-4) != 0
    4059/ 17.145 :                                ERROR Expression is not zero
    4059/ 17.145 : [15.219]                     ENDIF
    4060/ 17.145 :                      
    4061/ 17.145 : 000 000 000 000 000          DB     10000Q-$ DUP 0   ; FILL REST OF ROM WITH ZEROES
          17.152 : 000 000 000 000 000
          17.157 : 000 000 000 000 000
          17.164 : 000 000 000 000 000
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 85 - 2024-05-13 09:34:53 PM


          17.171 : 000 000 000 000 000
          17.176 : 000 000 000 000 000
          17.203 : 000 000 000 000 000
          17.210 : 000 000 000 000 000
          17.215 : 000 000 000 000 000
          17.222 : 000 000 000 000 000
          17.227 : 000 000 000 000 000
          17.234 : 000 000 000 000 000
          17.241 : 000 000 000 000 000
          17.246 : 000 000 000 000 000
          17.253 : 000 000 000 000 000
          17.260 : 000 000 000 000 000
          17.265 : 000 000 000 000 000
          17.272 : 000 000 000 000 000
          17.277 : 000 000 000 000 000
          17.304 : 000 000 000 000 000
          17.311 : 000 000 000 000 000
          17.316 : 000 000 000 000 000
          17.323 : 000 000 000 000 000
          17.330 : 000 000 000 000 000
          17.335 : 000 000 000 000 000
          17.342 : 000 000 000 000 000
          17.347 : 000 000 000 000 000
          17.354 : 000 000 000 000 000
          17.361 : 000 000 000 000 000
          17.366 : 000 000 000 000 000
          17.373 : 000 000 000 000 000
    4062/ 20.000 :                      
    4063/ 20.000 : (MACRO)                      ERRMI  10000Q-$         ; MUST NOT EXCEED 4K BYTES
    4063/ 20.000 : =>FALSE                      IF (10000Q-$) < 0
    4063/ 20.000 :                                ERROR Expression is negative
    4063/ 20.000 : [15.223]                     ENDIF
    4064/ 20.000 :                      
    4065/ 20.000 :                      ;       THE FOLLOWING ARE CONTROL CELLS AND FLAGS USED BY THE KEYSET
    4066/ 20.000 :                      ;       MONITOR.
    4067/ 20.000 :                      
    4068/ 40.000 :                              ORG     20000Q          ; 8192
    4069/ 40.000 :                      
    4070/ 40.000 :                      START   DS      2               ; DUMP STARTING ADDRESS
    4071/ 40.002 :                      IOWRK   DS      2               ; IN OUR OUT INSTRUCTION
    4072/ 40.004 :                      PRSRAM                          ; FOLLOWING CELLS INITIALIZED FROM ROM
    4073/ 40.004 :                              DS      1               ; RET
    4074/ 40.005 :                      REGI    DS      1               ; INDEX OF REGISTER UNDER DISPLAY
    4075/ 40.006 :                      DSPROT  DS      1               ; PERIOD FLAG BYTE
    4076/ 40.007 :                      DSPMOD  DS      1               ; DISPLAY MODE
    4077/ 40.010 :                      
    4078/ 40.010 :                      MFLAG   DS      1               ; USER FLAG OPTIONS
    4079/ 40.011 :                                                      ; SEE *UO.XXX* BITS DESCRIBED AT FRONT
    4080/ 40.011 :                      
    4081/ 40.011 :                      CTLFLG  DS      1               ; FRONT PANEL CONTROL BITS
    4082/ 40.012 :                      REFIND  DS      1               ; REFRESH INDEX (0 TO 7)
    4083/ 40.013 : =7O                  PRSL    EQU     7               ; END OF AREA INITIALIZED FROM ROM
    4084/ 40.013 :                      
    4085/ 40.013 :                      FPLEDS                          ; FRONT PANEL LEDS PATTERNS
    4086/ 40.013 :                      ALEDS   DS      1               ; ADDR 0
    4087/ 40.014 :                              DS      1               ; ADDR 1
    4088/ 40.015 :                              DS      1               ; ADDR 2
    4089/ 40.016 :                      
    4090/ 40.016 :                              DS      1               ; ADDR 3
    4091/ 40.017 :                              DS      1               ; ADDR 4
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 86 - 2024-05-13 09:34:53 PM


    4092/ 40.020 :                              DS      1               ; ADDR 5
    4093/ 40.021 :                      
    4094/ 40.021 :                      DLEDS   DS      1               ; DATA 0
    4095/ 40.022 :                              DS      1               ; DATA 1
    4096/ 40.023 :                              DS      1               ; DATA 2
    4097/ 40.024 :                      
    4098/ 40.024 :                      ABUSS   DS      2               ; ADDRESS BUSS
    4099/ 40.026 :                      RCCA    DS      1               ; RCC SAVE AREA
    4100/ 40.027 :                      CRCSUM  DS      2               ; CRC-16 CHECKSUM
    4101/ 40.031 :                      TPERRX  DS      2               ; TAPE ERROR EXIT ADDRESS
    4102/ 40.033 :                      TICCNT  DS      2               ; CLOCK TIC COUNTER
    4103/ 40.035 :                      
    4104/ 40.035 :                      REGPTR  DS      2               ; REGISTER CONTENTS POINTER
    4105/ 40.037 :                      
    4106/ 40.037 :                      ;UIVEC                          ; USER INTERRUPT VECTORS
    4107/ 40.037 :                              DS      3               ; JUMP TO CLOCK PROCESSOR
    4108/ 40.042 :                              DS      3               ; JUMP TO SINGLE STEP PROCESSOR
    4109/ 40.045 :                              DS      3               ; JUMP TO I/O 3
    4110/ 40.050 :                              DS      3               ; JUMP TO I/O 3
    4111/ 40.053 :                              DS      3               ; JUMP TO I/O 5
    4112/ 40.056 :                              DS      3               ; JUMP TO I/O 6
    4113/ 40.061 :                              DS      3               ; JUMP TO I/O 7
    4114/ 40.064 :                      
    4115/ 40.064 :                      ;       H88/H89 RAM USAGE BEYOND THAT OF H8MTRF
    4116/ 40.064 :                      ;
    4117/ 40.064 :                      NMIRET  DS      2
    4118/ 40.066 :                      DATA    DS      1               ; OUTPUT TO 362Q DATA SAVE
    4119/ 40.067 :                      BLKICW  DS      2               ; H37 INTERRUPT RETURN ADDRESS
    4120/ 40.071 :                      RADFLG  DS      1               ; RADIX FLAG
    4121/ 40.072 :                      VEWHLD  DS      2
    4122/ 40.074 : =40.074O             MEML    EQU     $
    4123/ 40.074 : (MACRO)                      ERRMI   20520Q-MEML
    4123/ 40.074 : =>FALSE                      IF (20520Q-MEML) < 0
    4123/ 40.074 :                                ERROR Expression is negative
    4123/ 40.074 : [16.027]                     ENDIF
    4124/ 41.120 :                              ORG     20520Q
    4125/ 41.120 :                      PRIM    DS      1               ; PRIMARY DEVICE ADDR. PORT
    4126/ 41.121 :                      TMFG    DS      1               ; TIMER INTERRUPT FLAG, =1 FOR Z47, =0 FOR H17
    4127/ 41.122 :                      MYCNT   DS      1               ; COUNTER FOR TIMER INTERRUPT
    4128/ 41.123 :                      AUTOB   DS      1               ; AUTO BOOT FLAG
    4129/ 41.124 :                      STK     DS      2               ; STACK POINTER FOR RE-BOOT
    4130/ 41.126 :                      
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 87 - 2024-05-13 09:34:53 PM


  Symbol Table (* = unused):
  --------------------------

 A.BEL :                          7 - |  A.BKS :                         10 - |
 A.CR :                          15 - |  A.DEL :                        177 - |
 A.ESC :                         33 - |  A.LF :                          12 - |
*A.STX :                          2 - | *A.SYN :                         26 - |
 ABUSS :                     40.024 C | *AC.DLY :                       156 - |
*AIO.CGN :                   41.047 C | *AIO.CHA :                   41.116 C |
*AIO.CNT :                   41.111 C | *AIO.CSI :                   41.050 C |
*AIO.DES :                   41.055 C | *AIO.DEV :                   41.057 C |
 AIO.DIR :                   41.062 C | *AIO.DOA :                   41.041 - |
*AIO.DTA :                   41.053 C | *AIO.EOF :                   41.113 C |
*AIO.EOM :                   41.112 C | *AIO.FLG :                   41.043 C |
*AIO.GRT :                   41.044 C | *AIO.LGN :                   41.051 C |
*AIO.LSI :                   41.052 C | *AIO.SPG :                   41.046 C |
*AIO.TFP :                   41.114 C |  AIO.UNI :                   41.061 C |
*AIO.VEC :                   41.040 C |  ALARM :                      2.136 - |
 ALARMB :                     2.166 C | *ALEDS :                     40.013 C |
*ARCHITECTURE :                                      "x86_64-unknown-linux" - |
*AS.0DD :                       100 - | *AS.1DD :                        40 - |
*AS.S1A :                        20 - | *AS.SLM :                         3 - |
 ATB :                        4.243 C |  AUTOB :                     41.123 C |
 AUTOBO :                     1.205 C | *BASE :                         170 - |
 BC.EDT :                         2 - | *BC.IE :                         40 - |
 BC.RST :                        20 - |  BC.SEL :                       100 - |
 BITS :                      12.155 C |  BITS1 :                     12.162 C |
 BLKICW :                    40.067 C | *BLKSIZ :                     2.000 - |
 BOOT :                       4.256 C | *BOOT.P :                         1 - |
*BOOT.SY :                        2 - |  BOOT0 :                      1.342 C |
 BOOT0. :                     1.337 C |  BOOT2 :                      2.324 C |
 BOOT5 :                      1.350 C |  BOOT6 :                      1.360 C |
 BOOT7 :                     16.133 C |  BOOT71 :                    16.146 C |
 BOOT72 :                    16.155 C |  BOOTA :                     37.132 - |
 BOOTAL :                       130 - |  BOOTX :                      4.275 C |
*BR19.2 :                     4.103 C | *BR96 :                       4.101 C |
 BRTAB :                      4.101 - |  BS.BSY :                        10 - |
 BS.COM :                        20 - | *BS.DAT :                         0 - |
 BS.DTD :                       100 - | *BS.HID :                         1 - |
*BS.IN :                          0 - | *BS.INT :                         4 - |
*BS.LMB :                        40 - |  BS.MTY :                        20 - |
*BS.OUT :                       100 - | *BS.PE :                          2 - |
 BS.REQ :                       200 - | *BSEC :                       1.326 - |
 BSMSG :                     14.042 C |  BT170 :                     17.124 C |
 BT170E :                    17.125 - |  BT170L :                         4 - |
 BT174 :                     17.103 C |  BT174E :                    17.104 - |
 BT174L :                         4 - | *BTH174 :                    17.104 C |
*BTH370 :                    17.125 C | *BTH470 :                    17.131 C |
*BTH474 :                    17.110 C | *BTH670 :                    17.135 C |
*BTH674 :                    17.114 C | *BTHFE0 :                    17.141 C |
*BTHFE4 :                    17.120 C | *C.128 :                        200 - |
*C.256 :                      1.000 - | *C.26 :                          32 - |
*C.DSYN :                       375 - | *CASESENSITIVE :                  0 - |
 CB.CLI :                       100 - |  CB.MTL :                        40 - |
 CB.SPK :                       200 - |  CB.SSI :                        20 - |
 CBUSY :                     13.032 C |  CBUSY1 :                    13.050 C |
 CCH :                       15.173 C |  CCL :                       13.263 C |
 CCL1 :                      13.301 C |  CCL2 :                      13.322 C |
 CCL3 :                      13.327 C |  CCL3. :                     13.332 C |
 CCL4 :                      13.343 C | *CCL5 :                      13.346 C |
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 88 - 2024-05-13 09:34:53 PM


 CCL6 :                      13.370 C |  CCL7 :                      14.004 C |
 CCL8 :                      14.026 C |  CCL9 :                      14.033 C |
*CDB.H84 :                        1 - | *CDB.H85 :                        0 - |
 CHAT2 :                     11.152 C |  CHC :                       15.234 C |
 CHKRAD :                    15.112 C |  CKAUTO :                    11.135 C |
 CLASS0 :                         0 - |  CLASS1 :                        20 - |
 CLASS6 :                       140 - | *CLASSM :                       340 - |
 CLK4 :                         270 C |  CLOCK :                        201 C |
 CLOCK17 :                   34.031 - |  COM :                        6.027 - |
 COM1 :                       6.031 C |  COM2 :                      10.156 C |
 COM3 :                      10.164 C |  COMREQ :                    13.060 C |
 CON.CD :                         0 - |  CON.DRQ :                        2 - |
*CON.DS0 :                       20 - | *CON.DS1 :                       40 - |
 CON.EI :                         1 - |  CON.MFM :                        4 - |
 CON.MO :                        10 - |  CON.ST :                         1 - |
*CONSTPI :        3.141592653589793 - |  CONV.E :                    17.005 C |
*CONV.H :                    16.375 C |  CONV.O :                    17.002 C |
 CONVERT :                   16.355 C | *CPI :                       15.176 C |
*CRCSUM :                    40.027 C |  CTLFLG :                    40.011 C |
 CUI1 :                         165 C |  D.CON :                     40.110 C |
*D.CPB :                         20 - | *D.CTF :                          5 - |
*D.DAT :                        171 - | *D.FBS :                          7 - |
*D.FFD :                        140 - | *D.FOR :                          4 - |
*D.FT :                           6 - |  D.OECNT :                   40.264 - |
 D.RAM :                     40.240 C |  D.RAML :                        37 - |
 D.REA :                         10 - |  D.REC :                          1 - |
*D.RSE :                          3 - | *D.RSY :                          2 - |
 D.SDP :                     40.206 - |  D.SDT :                     40.166 - |
 D.SEK :                         13 - |  D.STA :                        170 - |
 D.TDR :                          0 - |  D.TT :                      40.240 - |
*D.VEC :                     40.130 C | *D.WPS :                         11 - |
*D.WRI :                         12 - |  DAT :                        6.023 - |
 DATA :                      40.066 C | *DATE :                "2024-05-13" - |
*DD.BOOT :                        0 C | *DD.CPY :                        13 C |
*DD.DS :                        202 C | *DD.FRM0 :                       14 C |
*DD.FRM1 :                       15 C | *DD.FRM2 :                       16 C |
*DD.FRM3 :                       17 C |  DD.LSC :                         3 C |
*DD.RAD :                         4 C |  DD.RAS :                         2 C |
*DD.RDBL :                      205 C | *DD.RDL :                       203 C |
*DD.REA :                         5 C |  DD.REAB :                        7 C |
 DD.RRDY :                       20 C | *DD.RST :                         1 C |
*DD.SDC :                       200 C | *DD.SPF0 :                       20 C |
*DD.SPF1 :                       21 C | *DD.SPF2 :                       22 C |
*DD.SPF3 :                       23 C | *DD.SPF4 :                       24 C |
*DD.SPF5 :                       25 C | *DD.ST :                        201 C |
*DD.WDLB :                      210 C | *DD.WRD :                        11 C |
*DD.WRDB :                       12 C | *DD.WRI :                         6 C |
*DD.WRIB :                       10 C | *DD.WRL :                       204 C |
*DD.WTBL :                      206 C | *DD.WTDL :                      207 C |
 DEV1. :                      2.377 C | *DEV170 :                     2.355 C |
 DEV174 :                     2.367 C |  DEV2 :                       3.006 C |
 DEVICE :                     2.273 - | *DF.CLR :                       376 - |
*DF.DI :                         40 - | *DF.DS0 :                         2 - |
*DF.DS1 :                         4 - | *DF.DS2 :                        10 - |
*DF.EMP :                       377 - | *DF.HD :                          1 - |
*DF.MO :                         20 - | *DF.SD :                         10 - |
*DF.ST :                        100 - | *DF.T0 :                          2 - |
*DF.WP :                          4 - | *DF.WQ :                          1 - |
*DF.WR :                        200 - | *DIR.ALD :                       25 C |
*DIR.CLU :                       15 C | *DIR.CRD :                       23 C |
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 89 - 2024-05-13 09:34:53 PM


*DIR.EXT :                       10 C | *DIR.FGN :                       20 C |
*DIR.FLG :                       16 C | *DIR.LGN :                       21 C |
*DIR.LSI :                       22 C | *DIR.NAM :                        0 C |
*DIR.PRO :                       13 C | *DIR.VER :                       14 C |
 DIRELEN :                       27 - | *DIRIDL :                        15 - |
 DK.CON :                       170 - |  DK.INT :                       171 - |
 DK.PORT :                      170 - | *DLEDS :                     40.021 C |
 DLY :                           53 C | *DM.MR :                          0 - |
*DM.MW :                          1 - | *DM.RR :                          2 - |
*DM.RW :                          3 - |  DMOVE :                     30.252 - |
*DOD :                        3.122 C |  DP.DC :                        177 - |
 DS.HOLE :                        1 - | *DSPMOD :                    40.007 C |
*DSPROT :                    40.006 C |  DY10.5 :                     7.244 C |
 DY3.3 :                     11.201 C |  DY3.5 :                     11.211 C |
 DY3.7 :                      7.153 C |  DY5.53 :                     7.230 C |
 DY9.3 :                     11.160 C |  DY9.4 :                     11.171 C |
 DY9.5 :                      3.315 C |  DY9.8 :                      3.330 C |
 DYASC :                      3.143 - |  DYASC1 :                     3.144 C |
 DYBYT :                      3.160 C |  DYBYT.1 :                    3.163 C |
 DYBYT.2 :                    3.174 C |  DYBYT.4 :                    3.213 C |
 DYBYT.6 :                    3.227 - | *DYBYT0 :                    16.250 C |
 DYBYTH :                    16.262 C |  DYBYTH1 :                   16.303 C |
 DYBYTH2 :                   16.312 C |  DYBYTH3 :                   16.325 C |
 DYBYTH4 :                   16.334 C |  DYBYTX :                    16.240 C |
 DYME5.5 :                    7.221 - |  DYMEM :                      7.116 C |
*DYMEM1 :                     7.122 C |  DYMEM10 :                   13.252 C |
 DYMEM11 :                    7.251 C |  DYMEM2 :                     7.127 C |
 DYMEM3 :                     7.140 C |  DYMEM4 :                     7.167 C |
 DYMEM5 :                     7.172 C |  DYMEM6 :                       273 C |
 DYMEM7 :                       276 C |  DYMEM9 :                       307 C |
 DYMM5 :                     16.336 C |  DYMSG :                      7.265 C |
 DYMSG.5 :                    7.275 C |  DZERO :                     31.212 - |
*EDYMEM :                     7.375 C |  EIXIT :                     34.027 - |
 ERPTCNT :                       12 - |  ERRMSG :                    14.046 C |
 ERROR :                        322 C | *ESPEED :                     7.372 C |
 EUC :                       16.201 C |  EUC. :                      16.215 C |
*FALSE :                          0 - |  FD.CMD :                       172 - |
 FD.DAT :                       173 - |  FD.SEC :                       172 - |
 FD.STAT :                      172 - | *FD.TRK :                       173 - |
 FDC.FI :                       320 - | *FDC.RDA :                      300 - |
 FDC.RDS :                      200 - | *FDC.RDT :                      340 - |
 FDC.RST :                        0 - |  FDC.SEK :                       20 - |
*FDC.STI :                      100 - | *FDC.STO :                      140 - |
*FDC.STP :                       40 - | *FDC.WTS :                      240 - |
*FDC.WTT :                      360 - | *FDF.DDM :                        1 - |
 FDF.DLF :                        4 - | *FDF.HLB :                       10 - |
 FDF.MRF :                       20 - | *FDF.S12 :                        1 - |
*FDF.S20 :                        2 - |  FDF.S30 :                        3 - |
*FDF.S6 :                         0 - |  FDF.SLF :                       10 - |
*FDF.SS1 :                        2 - | *FDF.UTR :                       20 - |
*FDF.VRF :                        4 - | *FDS.BSY :                        1 - |
 FDS.CRC :                       10 - | *FDS.DRQ :                        2 - |
*FDS.HLD :                       40 - | *FDS.IND :                        2 - |
 FDS.LDT :                        4 - |  FDS.NRD :                      200 - |
*FDS.RNF :                       20 - |  FDS.RTE :                       40 - |
*FDS.SEK :                       20 - |  FDS.TK0 :                        4 - |
*FDS.WPV :                      100 - | *FDS.WTF :                       40 - |
 FEDEV :                     13.222 C | *FPLEDS :                    40.013 C |
*GETBND :                    16.060 C |  GETBND. :                   16.073 C |
 GETBND1 :                    1.024 C |  GETCON :                    12.376 C |
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 90 - 2024-05-13 09:34:53 PM


 GETCPT :                    13.130 C |  GETST :                     13.110 C |
 GO :                         1.222 C |  GO. :                           63 C |
 GO88 :                       1.146 C |  GO88.1 :                     1.177 C |
 GTCON :                     13.004 C |  GTCON1 :                    13.025 C |
 H17 :                        2.207 - |  H17A :                       2.237 C |
 H17X :                      17.024 C |  H37 :                       11.221 C |
 H37. :                      11.317 C |  H371 :                      11.335 C |
 H371. :                     12.002 C |  H371B :                     11.356 C |
 H371C :                     11.373 C |  H372 :                      12.045 C |
 H373 :                      12.067 C |  H67 :                       12.174 C |
 H671 :                      12.215 C |  H671. :                     12.231 C |
 H672 :                      12.250 C |  H673 :                      12.330 C |
 H67UNI :                    12.365 C |  H88.CTL :                      362 - |
 H88.SW :                       362 - |  H88B.CK :                        2 - |
*H88B.SS :                        1 - | *H88S.0 :                        14 - |
 H88S.4 :                         3 - |  H88S.AT :                      200 - |
 H88S.BR :                      100 - |  H88S.DV :                       20 - |
 H88S.M :                        40 - | *HAS64 :                          1 - |
 HORN :                       2.140 C |  HRN0 :                       2.143 C |
 HRN2 :                       2.160 C |  HRNX :                       6.045 C |
 IHA :                       15.244 C |  IHA. :                      15.245 C |
 IHA1 :                      15.253 C |  IHA3 :                      15.301 C |
 IHA4 :                      15.314 C |  IHB :                       15.123 C |
 IHB1 :                      15.126 C |  IHB2 :                      15.151 C |
 IHC :                       15.214 C |  IN. :                        6.170 - |
 IN.1 :                       6.174 C |  IN1. :                       6.150 - |
 INIT :                          73 C | *INIT0 :                          0 C |
 INIT0.0 :                        3 C |  INIT0X :                     4.000 C |
 INIT0X1 :                    4.050 C |  INIT1 :                        107 C |
*INIT2 :                        117 C |  INPUT :                     14.233 C |
 INT0X0 :                    16.113 C | *INT1 :                          10 - |
*INT2 :                          20 - | *INT3 :                          30 C |
*INT4 :                          40 C | *INT5 :                          50 C |
*INT6 :                          60 C | *INT7 :                          70 C |
 INTXIT :                       172 C |  IOA :                       15.023 C |
 IOA0 :                       3.062 C |  IOA1 :                       5.166 C |
 IOA2 :                       5.176 C |  IOA3 :                       5.230 C |
 IOA4 :                       5.245 C |  IOB :                       15.036 C |
 IOB0 :                       3.066 C |  IOB1 :                       3.070 C |
 IOB1.5 :                     3.126 C |  IOB2 :                       3.135 C |
 IOC :                       15.051 C |  IOC. :                       5.271 C |
 IOC0 :                       5.266 C |  IOWRK :                     40.002 C |
 IP.DS :                        177 - | *IP.PAD :                       360 - |
*IP.TPC :                       371 - | *IP.TPD :                       370 - |
 IROC :                      15.012 C |  IROC1 :                      5.156 C |
 IROCH :                     15.326 C |  IROCO :                      5.140 C |
*LISTON :                         1 - | *LRA :                        3.047 C |
 LRA. :                       3.052 C | *LSA.2 :                         37 - |
*LUNM :                         140 - | *M.INI :                    242.355 - |
*M.OUTI :                   243.355 - | *MACEXP :                         7 - |
 MCU :                       15.223 C |  MEML :                      40.074 - |
 MEMORY :                    16.024 C |  MEMORY. :                   16.032 C |
 MFLAG :                     40.010 C | *MI.ANI :                       346 - |
*MI.EXAF :                       10 - | *MI.EXX :                       331 - |
 MI.HLT :                       166 - |  MI.IN :                        333 - |
*MI.JIXA :                      335 - | *MI.JIXB :                      351 - |
*MI.JIYA :                      375 - | *MI.JIYB :                      351 - |
 MI.JMP :                       303 - | *MI.LDA :                        72 - |
*MI.LDXA :                      335 - | *MI.LDXB :                       41 - |
*MI.LDYA :                      375 - | *MI.LDYB :                       41 - |
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 91 - 2024-05-13 09:34:53 PM


*MI.LXID :                       21 - |  MI.OUT :                       323 - |
 MI.RET :                       311 - | *MOMCPU :                   200.200 - |
*MOMCPUNAME :                "8080" - |  MSG.BT :                     6.234 C |
 MSG.CON :                   17.014 C |  MSG.EQ :                     7.341 C |
 MSG.ERR :                   14.336 C |  MSG.FE :                    13.233 C |
 MSG.GO :                     6.165 C |  MSG.HSS :                    7.100 C |
 MSG.INP :                   14.327 C |  MSG.MEM :                   16.043 C |
 MSG.OUT :                   14.332 C |  MSG.PAS :                    3.231 C |
 MSG.PC :                     6.214 C |  MSG.PR :                    14.062 C |
 MSG.RAD :                   14.203 C |  MSG.RAM :                    7.303 C |
 MSG.SPD :                    6.371 C |  MSG.SUB :                    6.201 C |
 MSG.VEW :                    2.113 C |  MSG.WRK :                    7.062 C |
 MTR :                          344 C |  MTR.15 :                       354 C |
 MTR.2 :                        357 C |  MTR.3 :                        371 C |
 MTR.4 :                      1.014 C |  MTR1 :                         345 C |
 MTRA :                      17.045 - |  MTRAL :                         12 - |
 MYCNT :                     41.122 C |  MYINT :                     12.145 C |
 NB7 :                        1.317 C |  NBOOT :                      1.261 C |
 NBOOT0 :                     1.262 C | *NESTMAX :                    1.000 - |
 NMI :                        4.116 C |  NMI0.5 :                     4.154 C |
 NMI1 :                       4.173 C |  NMI1.5 :                     4.206 C |
*NMI2 :                       4.212 C |  NMI2.2 :                     4.225 C |
 NMI2.5 :                     4.236 C |  NMI3 :                       4.237 C |
*NMIENT :                       146 C |  NMIRET :                    40.064 C |
 NODEV :                      2.171 - |  NODEV1 :                     2.177 C |
 NOISE :                      6.053 C |  ONDR0 :                         22 - |
 OP.CTL :                       360 - |  OP.DC :                        177 - |
*OP.DIG :                       360 - | *OP.SEQ :                       361 - |
*OP.TPC :                       371 - | *OP.TPD :                       370 - |
*OPCODM :                        37 - |  OUT. :                       6.063 - |
 OUT.1 :                      6.070 C |  OUT1. :                      6.140 - |
*OUTCOM :                    13.055 C |  OUTPUT :                    14.265 C |
*OVL.IN :                         1 - | *OVL.NUM :                       14 - |
*OVL.RES :                        2 - | *OVL.UCS :                      200 - |
 PCA :                        1.103 C |  PCA1 :                       1.137 C |
 PCF.MH :                    11.012 C |  PCF.MO :                    11.017 C |
 PCFA :                      10.316 C |  PCFA. :                     10.341 C |
 PCFA1 :                     10.357 C |  PCFA2 :                     10.361 C |
 PCFA3 :                     10.362 C |  PCFA3. :                    10.371 C |
 PCFA4 :                     11.007 C |  PCFAA :                     10.333 C |
 PIN :                        1.067 - |  PRIM :                      41.120 C |
 PRSL :                           7 - |  PRSRAM :                    40.004 C |
 PRSROM :                     3.371 - |  R.ABORT :                   33.366 - |
 R.READ :                    34.077 - |  R.SDP :                      2.044 - |
 R.SDP1 :                     2.063 C |  RAD.HEX :                   14.217 C |
 RAD.OCT :                   14.211 C |  RADFLG :                    40.071 C |
 RADIX :                     14.072 C |  RADIX1 :                    14.100 C |
 RADIX2 :                    14.131 C |  RADIX3 :                    14.144 C |
 RADIX4 :                    14.160 C |  RADIX5 :                    14.173 C |
 RCC :                        3.262 - |  RCC1 :                       3.262 C |
*RCC2 :                       3.270 C | *RCCA :                      40.026 C |
*RCK :                        3.260 - |  RD2 :                        6.126 C |
 RDBLCK :                     6.111 C |  READT :                     12.075 C |
 READT1 :                    12.126 C |  READT2 :                    12.134 C |
*REFIND :                    40.012 C |  REGI :                      40.005 C |
 REGPTR :                    40.035 C | *RELAXED :                        0 - |
*RESET :                      2.011 C |  RETRY :                      2.036 C |
*RI.BST :                         1 - | *RI.CON :                         1 - |
*RI.DAT :                         0 - | *ROMBOOT :                   30.000 - |
 RRDY :                      10.142 C | *RT.BP :                          2 - |
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 92 - 2024-05-13 09:34:53 PM


*RT.CT :                          3 - | *RT.MI :                          1 - |
*S.BAUD :                    40.344 C | *S.BDA :                     41.120 C |
*S.BOOTF :                   41.034 C | *S.CACC :                    41.006 C |
*S.CDB :                     40.343 C | *S.CFWA :                    40.352 C |
*S.CODE :                    41.007 C | *S.DCS :                     41.033 C |
*S.DDGRP :                   40.364 C | *S.DDLDA :                   40.360 C |
*S.DDLEN :                   40.362 C | *S.DDOPC :                   40.370 C |
*S.DDTA :                    40.366 C | *S.DFWA :                    40.354 C |
*S.DIREA :                   41.016 C | *S.DLINK :                   40.346 C |
 S.DON :                         40 - |  S.DTR :                        200 - |
 S.ERR :                          1 - | *S.FASER :                   41.013 C |
*S.FCI :                     41.021 C | *S.GRT :                     24.000 - |
*S.GRT1 :                    25.000 - | *S.GRT2 :                    26.000 - |
*S.GUP :                     41.027 C | *S.IEN :                        100 - |
 S.INT :                     40.343 C | *S.JUMPS :                   41.010 - |
*S.MOUNT :                   41.032 C | *S.OFWA :                    40.350 C |
 S.OSI :                     41.126 C | *S.OSN :                     41.004 C |
*S.OSO :                     41.127 C | *S.OSZ :                     41.131 C |
*S.OVLE :                    41.000 C | *S.OVLFL :                   40.371 C |
*S.OVLS :                    40.376 C | *S.OVR :                     41.146 C |
*S.OVSTK :                   41.035 C | *S.RFWA :                    40.356 C |
*S.SCI :                     41.024 C | *S.SCR :                     41.121 C |
*S.SDD :                     41.010 C | *S.SSW :                     41.002 C |
*S.SW0 :                          2 - | *S.SW1 :                          4 - |
*S.SW2 :                         10 - | *S.SW3 :                         20 - |
*S.UCSF :                    40.372 C | *S.UCSL :                    40.374 C |
*S.VAL :                     40.277 C | *SAE :                        1.063 C |
 SAVALL :                       132 C |  SAVALLR :                      151 - |
 SAVALLX :                    4.105 C | *SB.BTO :                         1 - |
*SB.CRC :                        10 - | *SB.DLD :                        40 - |
*SB.ILC :                         2 - | *SB.LTD :                         4 - |
*SB.NRF :                        20 - | *SB.UNR :                       200 - |
*SB.WPD :                       100 - |  SC.ACE :                       350 - |
*SC.UART :                      372 - |  SDP3 :                      36.073 - |
*SEC.M :                         37 - | *SID.0 :                          0 - |
*SID.1 :                        200 - | *SID.M :                        200 - |
 SINCR :                      4.000 - |  SPEED :                      6.240 C |
 SPEED1 :                     6.257 C |  SPEED2 :                     6.275 C |
 SPEED3 :                     6.300 C |  SPEED4 :                     6.307 C |
 SPEED5 :                     6.357 C | *SSIZ.M :                     4.000 - |
 SST1 :                       1.235 C | *SSTEP :                      1.225 C |
*ST.ERR :                         2 - |  ST.LUN :                       140 - |
*ST.PER :                         1 - | *ST.SPR :                        34 - |
*STACK :                     42.200 - | *STACKL :                     1.032 - |
 START :                     40.000 C |  START1 :                     1.265 C |
 STK :                       41.124 C |  STPRTN :                     1.244 C |
 SUBM :                       4.370 C |  SUBM1 :                      5.013 C |
 SUBM10 :                    14.352 C |  SUBM10. :                   14.370 C |
 SUBM11 :                    14.373 C |  SUBM2 :                      5.027 C |
 SUBM3 :                      5.042 C |  SUBM4 :                      5.046 C |
 SUBM5 :                      5.053 C |  SUBM6 :                      5.062 C |
 SUBM7 :                      5.075 C |  SUBM8 :                      5.077 C |
 SUBM9 :                      5.105 C | *SYDD :                      40.130 - |
*T2.IDA :                         1 - | *T2.IFN :                         2 - |
*T2.ILC :                         0 - |  TFDATA :                    13.173 C |
 TFREQ :                     13.176 C |  THA :                       16.001 C |
*THA1 :                      16.007 C |  THB :                       15.350 C |
 THB1 :                      15.351 C |  THB2 :                      15.366 C |
 THB3 :                      15.376 C | *TI.BBF :                        11 - |
*TI.CDE :                        10 - | *TI.DMNF :                        3 - |
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 93 - 2024-05-13 09:34:53 PM


*TI.DTE :                         6 - | *TI.FE :                         12 - |
*TI.ID :                          0 - | *TI.IDNF :                        2 - |
*TI.RNF :                         4 - | *TI.SKE :                         5 - |
*TI.UDE :                         1 - | *TI.WP :                          7 - |
 TICCNT :                    40.033 C | *TIME :               "09:34:53 PM" - |
 TMFG :                      41.121 C |  TMOUT :                      4.304 - |
 TMOUT1 :                     4.347 C |  TMOUT2 :                     4.363 C |
 TMOUT3 :                     4.365 C |  TMOUT4 :                     4.323 C |
*TO.DNR :                         4 - | *TO.DNS :                         5 - |
*TO.MDS :                         7 - | *TO.NIS :                         1 - |
*TO.NSC :                         2 - | *TO.NST :                         0 - |
*TO.NT0 :                         6 - | *TO.WFT :                         3 - |
 TOA :                       15.064 C |  TOA. :                       5.305 C |
 TOA0 :                       5.300 C |  TOB :                       15.077 C |
 TOB0 :                       5.322 C |  TOB1 :                       5.332 C |
*TPERRX :                    40.031 C | *TRUE :                           1 - |
 TYPMSG :                     6.100 C | *UC.2SB :                         4 - |
*UC.5BW :                         0 - | *UC.6BW :                         1 - |
*UC.7BW :                         2 - |  UC.8BW :                         3 - |
*UC.BI :                         20 - | *UC.CTS :                        20 - |
*UC.DCS :                         1 - | *UC.DDR :                         2 - |
 UC.DLA :                       200 - |  UC.DR :                          1 - |
*UC.DRL :                        10 - | *UC.DSR :                        40 - |
*UC.DTR :                         1 - | *UC.EDA :                         1 - |
*UC.EPS :                        20 - | *UC.FE :                         10 - |
*UC.IID :                         6 - | *UC.IIP :                         1 - |
*UC.LOO :                        20 - | *UC.MSI :                        10 - |
*UC.OR :                          2 - | *UC.OU1 :                         4 - |
*UC.OU2 :                        10 - | *UC.PE :                          4 - |
*UC.PEN :                        10 - | *UC.RI :                        100 - |
*UC.RLS :                       200 - | *UC.RSI :                         4 - |
*UC.RTS :                         2 - | *UC.SB :                        100 - |
*UC.SKP :                        40 - | *UC.TER :                         4 - |
 UC.THE :                        40 - | *UC.TRE :                         2 - |
*UC.TSE :                       100 - | *UCI.ER :                        20 - |
*UCI.IE :                         2 - | *UCI.IR :                       100 - |
*UCI.RE :                         4 - | *UCI.RO :                        40 - |
*UCI.TE :                         1 - | *UDR :                            0 - |
*UF.FCT :                       100 - | *UF.RDA :                         1 - |
*UF.ROR :                         2 - | *UF.RPE :                         4 - |
*UF.TB :                        200 - |  UIVEC :                     40.037 - |
*UMI.16X :                        2 - | *UMI.1B :                       100 - |
*UMI.1X :                         1 - | *UMI.2B :                       300 - |
*UMI.64X :                        3 - | *UMI.HB :                       200 - |
*UMI.L5 :                         0 - | *UMI.L6 :                         4 - |
*UMI.L7 :                        10 - | *UMI.L8 :                        14 - |
*UMI.PA :                        20 - | *UMI.PE :                        40 - |
*UNT.0 :                          0 - | *UNT.1 :                         40 - |
*UNT.2 :                        100 - | *UNT.3 :                        140 - |
*UNT.M :                        140 - |  UO.CLK :                         1 - |
 UO.DDU :                         2 - |  UO.HLT :                       200 - |
 UO.NFR :                       100 - | *UP.DP :                        174 - |
*UP.FC :                        175 - | *UP.SC :                        176 - |
*UP.SR :                        176 - | *UP.ST :                        175 - |
 UR.DLL :                         0 - |  UR.DLM :                         1 - |
 UR.IER :                         1 - | *UR.IIR :                         2 - |
 UR.LCR :                         3 - |  UR.LSR :                         5 - |
*UR.MCR :                         4 - | *UR.MSR :                         6 - |
 UR.RBR :                         0 - |  UR.THR :                         0 - |
 USERFWA :                   42.200 - | *USR :                            1 - |
 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 94 - 2024-05-13 09:34:53 PM


*USR.FE :                        40 - | *USR.OE :                        20 - |
*USR.PE :                        10 - | *USR.RXR :                        2 - |
*USR.TXE :                        4 - | *USR.TXR :                        1 - |
*VERSION :                   24.057 - |  VEW.NPC :                   11.024 C |
 VEWHLD :                    40.072 C |  VIEW :                       1.044 C |
 VIEW1 :                      1.055 C |  VIEW12 :                    11.111 - |
 VIEW2 :                      2.066 C |  VIEW3 :                      6.000 C |
 VIEW3. :                     3.340 C |  VIEW3.A :                    3.352 C |
 VIEW3A :                     7.351 C |  VIEW3A. :                    7.355 C |
 VIEW3B :                    11.127 C |  VIEW3C :                    11.131 C |
 VIEW4 :                      7.363 C |  VIEW5 :                     10.171 C |
 VIEW5. :                    10.212 C |  VIEW5A :                    10.174 C |
 VIEW6 :                     10.224 C |  VIEW6. :                    10.227 C |
 VIEW7 :                     10.241 C |  VIEW7. :                    10.302 C |
 VIEW7.. :                   10.305 C |  VIEW7A :                    10.270 C |
 VIEW8 :                     11.032 C |  VIEW8. :                    11.103 C |
 VIEW8A :                    11.051 C |  VIEW8B :                    11.054 C |
 VIEW9 :                      3.355 C |  W.RES :                          2 - |
*WARNRELATIVE :                   0 - |  WCC :                        3.302 C |
 WCC1 :                       3.303 C |  WCR :                        5.361 C |
 WCR. :                       5.370 C |  WDN :                       10.104 C |
 WDN1 :                      10.111 C |  WDN2 :                      10.137 C |
 WDNA :                     175.000 - |  WHD :                       36.235 - |
 WNH :                       36.271 - |  WRONG :                      1.310 - |
 WTDON1 :                     6.032 C |  Z47 :                        1.372 - |
 Z47A :                       1.376 - |  Z47X :                      10.000 C |
 Z47X. :                     10.011 C | *Z80SYNTAX :                      0 - |

  3.119 symbols
  1.151 unused symbols

 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 95 - 2024-05-13 09:34:53 PM


  Defined Macros:
  ---------------

ERRMI                                 | ERRNZ                                
ERRPL                                 | ERRZR                                

      4 macros

 AS V1.42 Beta [Bld 269] - Source File mtr90.asm - Page 96 - 2024-05-13 09:34:53 PM


  Code Pages:
  ----------

STANDARD (0 changed characters)

1 code page

0.04 seconds assembly time

 19.065 lines source file
 19.203 lines incl. macro expansions
      2 passes
      0 errors
      0 warnings
