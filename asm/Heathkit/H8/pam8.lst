 AS V1.42 Beta [Bld 269] - Source File pam8.asm - Page 1 - 2024-05-01 01:09:38 PM


       1/      0 :                              INCLUDE macros.mac
(1)    1/      0 :                      ; Macros to emulate the Heathkit HDOS assembler.
(1)    2/      0 :                      
(1)    3/      0 :                      ERRPL   MACRO EXP
(1)    4/      0 :                              IF (EXP) > 0
(1)    5/      0 :                                ERROR Expression is positive
(1)    6/      0 :                              ENDIF
(1)    7/      0 :                              ENDM
(1)    8/      0 :                      
(1)    9/      0 :                      ERRMI   MACRO EXP
(1)   10/      0 :                              IF (EXP) < 0
(1)   11/      0 :                                ERROR Expression is negative
(1)   12/      0 :                              ENDIF
(1)   13/      0 :                              ENDM
(1)   14/      0 :                      
(1)   15/      0 :                      ERRNZ   MACRO EXP
(1)   16/      0 :                              IF (EXP) != 0
(1)   17/      0 :                                ERROR Expression is not zero
(1)   18/      0 :                              ENDIF
(1)   19/      0 :                              ENDM
(1)   20/      0 :                      
(1)   21/      0 :                      ERRZR   MACRO EXP
(1)   22/      0 :                              IF (EXP) == 0
(1)   23/      0 :                                ERROR Expression is zero
(1)   24/      0 :                              ENDIF
(1)   25/      0 :                              ENDM
(1)   26/      0 :                      
       2/      0 :                      
       3/      0 :                      ;       PAM/8 - H8 FRONT PANEL MONITOR
       4/      0 :                      ;
       5/      0 :                      ;       JGL, 05/01/76.
       6/      0 :                      ;
       7/      0 :                      ;       FOR *WINTEK* INC.
       8/      0 :                      ;
       9/      0 :                      ;       COPYRIGHT  05/1976, WINTEK CORPORATION
      10/      0 :                      ;       902 N. 9TH ST.
      11/      0 :                      ;       LAFAYETTE, IND.
      12/      0 :                      
      13/      0 :                      ;       PAM/8 - H8 FRONT PANEL MONITOR
      14/      0 :                      ;
      15/      0 :                      ;       THIS PROGRAM RESIDES (IN ROM) IN THE LOW 1024 BYTES OF THE HEATH
      16/      0 :                      ;       H8 COMPUTER. IT ACTUALLY CONSISTS OF TWO VIRTUALLY INDEPENDENT
      17/      0 :                      ;       ROUTINES: A TASK-TIME PROGRAM WHICH PROVIDES SOPHISTICATED
      18/      0 :                      ;       FRONT PANEL MONITOR SERVICE, AND AN INTERRUPT-TIME PROGRAM WHICH
      19/      0 :                      ;       PROVIDES BOTH A REAL-TIME CLOCK AND EMULATES AN EFFECTIVE
      20/      0 :                      ;       HARDWARE FRONT PANEL.
      21/      0 :                      
      22/      0 :                      ;       INTERRUPTS.
      23/      0 :                      ;
      24/      0 :                      ;       PAM/8 IS THE PRIMARY PROCESSOR FOR ALL INTERRUPTS.
      25/      0 :                      ;       THEY ARE PROCESSED AS FOLLOWS:
      26/      0 :                      ;
      27/      0 :                      ;       RST     USE
      28/      0 :                      ;
      29/      0 :                      ;       0       MASTER CLEAR. (NEVER USES FOR I/O OR RESET)
      30/      0 :                      ;
      31/      0 :                      ;       1       CLOCK INTERRUPT. NORMALLY TAKEN BY PAM/8.
      32/      0 :                      ;               SETTING BIT *U0.CLK* IN BYTE *MFLAG* ALLOWS
      33/      0 :                      ;               USER PROCESSING (VIA A JUMP THROUGH *UIVEC*).
      34/      0 :                      ;               UPON ENTRY OF THE USER ROUTINE, THE STACK
 AS V1.42 Beta [Bld 269] - Source File pam8.asm - Page 2 - 2024-05-01 01:09:38 PM


      35/      0 :                      ;               CONTAINS:
      36/      0 :                      ;               (STACK+0)  = RETURN ADDRESS (TO PAM/8)
      37/      0 :                      ;               (STACK+2)  = (STACKPTR+4)
      38/      0 :                      ;               (STACK+4)  = (AF)
      39/      0 :                      ;               (STACK+6)  = (BC)
      40/      0 :                      ;               (STACK+8)  = (DE)
      41/      0 :                      ;               (STACK+10) = (HL)
      42/      0 :                      ;               (STACK+12) = (PC)
      43/      0 :                      ;               THE USER'S ROUTINE SHOULD RETURN TO PAM/8 VIA
      44/      0 :                      ;               A *RET* WITHOUT ENABLING INTERRUPTS.
      45/      0 :                      ;
      46/      0 :                      ;       2       SINGLE STEP. SINGLE STEP INTERRUPTS GENERATED
      47/      0 :                      ;               BY PAM/8 ARE PROCESSED BY PAM/8.
      48/      0 :                      ;               ANY SINGLE STEP INTERRUPT RECEIVED WHEN IN
      49/      0 :                      ;               USER MODE CAUSES A JUMP THROUGH *UIVEC*+3.
      50/      0 :                      ;               STACK UPON USER ROUTINE ENTRY;
      51/      0 :                      ;               (STACK+0)  = (STACKPTR+12)
      52/      0 :                      ;               (STACK+2)  = (AF)
      53/      0 :                      ;               (STACK+4)  = (BC)
      54/      0 :                      ;               (STACK+6)  = (DE)
      55/      0 :                      ;               (STACK+8)  = (HL)
      56/      0 :                      ;               (STACK+10) = (PC)
      57/      0 :                      ;               THE USER'S ROUTINE SHOULD HANDLE ITS OWN RETURN
      58/      0 :                      ;               FROM THE INTERRUPT.
      59/      0 :                      ;
      60/      0 :                      ;
      61/      0 :                      ;       THE FOLLOWING INTERRUPTS ARE VECTORED DIRECTLY THROUGH *UIVEC*.
      62/      0 :                      ;       THE USER ROUTINE MUST HAVE SETUP A JUMP IN *UIVEC* BEFORE ANY
      63/      0 :                      ;       OF THESE INTERRUPTS MAY OCCUR.
      64/      0 :                      ;
      65/      0 :                      ;       3       I/O 3. CAUSES A DIRECT JUMP THROUGH *UIVEC*+6
      66/      0 :                      ;
      67/      0 :                      ;       4       I/O 4. CAUSES A DIRECT JUMP THROUGH *UIVEC*+9
      68/      0 :                      ;
      69/      0 :                      ;       5       I/O 5. CAUSES A DIRECT JUMP THROUGH *UIVEC*+12
      70/      0 :                      ;
      71/      0 :                      ;       6       I/O 6. CAUSES A DIRECT JUMP THROUGH *UIVEC*+15
      72/      0 :                      ;
      73/      0 :                      ;       7       I/O 7. CAUSES A DIRECT JUMP THROUGH *UIVEC*+18
      74/      0 :                      
      75/      0 :                      
      76/      0 :                      ;               ASSEMBLY CONSTANTS
      77/      0 :                      
      78/      0 :                      ;               I/O PORTS
      79/      0 :                      
      80/      0 : =360O                IP.PAD  EQU     360Q            ; PAD INPUT PORT
      81/      0 : =360O                OP.CTL  EQU     360Q            ; CONTROL OUTPUT PORT
      82/      0 : =360O                OP.DIG  EQU     360Q            ; DIGIT SELECT OUTPUT PORT
      83/      0 : =361O                OP.SEG  EQU     361Q            ; SEGMENT SELECT OUTPUT PORT
      84/      0 : =371O                IP.TPC  EQU     371Q            ; TAPE CONTROL IN
      85/      0 : =371O                OP.TPC  EQU     371Q            ; TAPE CONTROL OUT
      86/      0 : =370O                IP.TPD  EQU     370Q            ; TAPE DATA IN
      87/      0 : =370O                OP.TPD  EQU     370Q            ; TAPE DATA OUT
      88/      0 :                      
      89/      0 :                      ;               ASCII CHARACTERS.
      90/      0 :                      
      91/      0 : =26O                 A.SYN   EQU     026Q            ; SYNC CHARACTER
      92/      0 : =2O                  A.STX   EQU     002Q            ; STX CHARACTER
      93/      0 :                      
      94/      0 :                      ;               FRONT PANEL HARDWARE CONTROL BITS.
 AS V1.42 Beta [Bld 269] - Source File pam8.asm - Page 3 - 2024-05-01 01:09:38 PM


      95/      0 :                      
      96/      0 : =20O                 CB.SSI  EQU     00010000B       ; SINGLE STEP INTERRUPT
      97/      0 : =40O                 CB.MTL  EQU     00100000B       ; MONITOR LIGHT
      98/      0 : =100O                CB.CLI  EQU     01000000B       ; CLOCK INTERRUPT ENABLE
      99/      0 : =200O                CB.SPK  EQU     10000000B       ; SPEAKER ENABLE
     100/      0 :                      
     101/      0 :                      ;               DISPLAY MODE FLAGS (IN *DSPMOD*)
     102/      0 :                      
     103/      0 : =0O                  DM.MR   EQU     0               ; MEMORY READ
     104/      0 : =1O                  DM.MW   EQU     1               ; MEMORY WRITE
     105/      0 : =2O                  DM.RR   EQU     2               ; REGISTER READ
     106/      0 : =3O                  DM.RW   EQU     3               ; REGISTER WRITE
     107/      0 :                              INCLUDE tape.asm        ; TAPE DEFINITIONS
(1)    1/      0 :                      ;       TAPE EQUIVALENCES.
(1)    2/      0 :                      
(1)    3/      0 : =1O                  RT.MI   EQU     1       ; RECORD TYPE - MEMORY DUMP IMAGE
(1)    4/      0 : =2O                  RT.BP   EQU     2       ; RECORD TYPE - BASIC PROGRAM
(1)    5/      0 : =3O                  RT.CT   EQU     3       ; RECORD TYPE - COMPRESSED TEXT
(1)    6/      0 :                      
(1)    7/      0 :                      ;       BLOCK SIZE FOR INTER-PRODUCT COMMUNICATION
(1)    8/      0 :                      
(1)    9/      0 : =2.000O              BLKSIZ  EQU   512
(1)   10/      0 :                      
     108/      0 :                      
     109/      0 :                      ;               MACHINE INSTRUCTIONS.
     110/      0 :                      
     111/      0 : =166O                MI.HLT  EQU     01110110B       ; HALT
     112/      0 : =311O                MI.RET  EQU     11001001B       ; RETURN
     113/      0 : =333O                MI.IN   EQU     11011011B       ; INPUT
     114/      0 : =323O                MI.OUT  EQU     11010011B       ; OUTPUT
     115/      0 : =72O                 MI.LDA  EQU     00111010B       ; LDA
     116/      0 : =346O                MI.ANI  EQU     11100110B       ; ANI
     117/      0 : =21O                 MI.LXID EQU     00010001B       ; LXI D
     118/      0 :                      
     119/      0 :                      ;               USER OPTION BITS.
     120/      0 :                      ;
     121/      0 :                      ;               THESE BITS ARE SET IN CELL MFLAG.
     122/      0 :                      
     123/      0 : =200O                UO.HLT  EQU     10000000B       ; DISABLE HALT PROCESSING
     124/      0 : =100O                UO.NFR  EQU     CB.CLI          ; NO REFRESH OF FRONT PANEL
     125/      0 : =2O                  UO.DDU  EQU     00000010B       ; DISABLE DISPLAY UPDATE
     126/      0 : =1O                  UI.CLK  EQU     00000001B       ; ALLOW CLOCK INTERRUPT PROCESSING
     127/      0 :                      
     128/      0 :                              INCLUDE u8251.asm       ; DEFINE THE 8251 USART BITS
(1)    1/      0 :                      ;       8251 USART BIT DEFINITIONS.
(1)    2/      0 :                      ;
(1)    3/      0 :                      
(1)    4/      0 :                      ;       MODE INSTRUCTION CONTROL BITS.
(1)    5/      0 :                      
(1)    6/      0 : =100O                UMI.1B  EQU     01000000B       ; 1 STOP BIT
(1)    7/      0 : =200O                UMI.HB  EQU     10000000B       ; 1 1/2 STOP BITS
(1)    8/      0 : =300O                UMI.2B  EQU     11000000B       ; 2 STOP BITS
(1)    9/      0 : =40O                 UMI.PE  EQU     00100000B       ; EVEN PARITY
(1)   10/      0 : =20O                 UMI.PA  EQU     00010000B       ; USE PARITY
(1)   11/      0 : =0O                  UMI.L5  EQU     00000000B       ; 5 BIT CHARACTERS
(1)   12/      0 : =4O                  UMI.L6  EQU     00000100B       ; 6 BIT CHARACTERS
(1)   13/      0 : =10O                 UMI.L7  EQU     00001000B       ; 7 BIT CHARACTERS
(1)   14/      0 : =14O                 UMI.L8  EQU     00001100B       ; 8 BIT CHARACTERS
(1)   15/      0 : =1O                  UMI.1X  EQU     00000001B       ; CLOCK X 1
(1)   16/      0 : =2O                  UMI.16X EQU     00000010B       ; CLOCK X 16
 AS V1.42 Beta [Bld 269] - Source File pam8.asm(u8251.asm) - Page 4 - 2024-05-01 01:09:38 PM


(1)   17/      0 : =3O                  UMI.64X EQU     00000011B       ; CLOCK X 64
(1)   18/      0 :                      
(1)   19/      0 :                      ;       COMMAND INSTRUCTION BITS.
(1)   20/      0 :                      
(1)   21/      0 : =100O                UCI.IR  EQU     01000000B       ; INTERNAL RESET
(1)   22/      0 : =40O                 UCI.RO  EQU     00100000B       ; READER-ON CONTROL FLAG
(1)   23/      0 : =20O                 UCI.ER  EQU     00010000B       ; ERROR RESET
(1)   24/      0 : =4O                  UCI.RE  EQU     00000100B       ; RECEIVE ENABLE
(1)   25/      0 : =2O                  UCI.IE  EQU     00000010B       ; ENABLE INTERRUPTS FLAG
(1)   26/      0 : =1O                  UCI.TE  EQU     00000001B       ; TRANSMIT ENABLE
(1)   27/      0 :                      
(1)   28/      0 :                      ;       STATUS READ BITS.
(1)   29/      0 :                      
(1)   30/      0 : =40O                 USR.FE  EQU     00100000B       ; FRAMING ERROR
(1)   31/      0 : =20O                 USR.OE  EQU     00010000B       ; OVERRUN ERROR
(1)   32/      0 : =10O                 USR.PE  EQU     00001000B       ; PARITY ERROR
(1)   33/      0 : =4O                  USR.TXE EQU     00000100B       ; TRANSMITTER EMPTY
(1)   34/      0 : =2O                  USR.RXR EQU     00000010B       ; RECEIVER READY
(1)   35/      0 : =1O                  USR.TXR EQU     00000001B       ; TRANSMITTER READY
(1)   36/      0 :                      
     129/      0 :                      
     130/      0 :                      ;       INTERRUPT VECTORS.
     131/      0 :                      ;
     132/      0 :                      
     133/      0 :                      ;       LEVEL 0 - RESET
     134/      0 :                      ;
     135/      0 :                      ;       THIS 'INTERRUPT' MAY NOT BE PROCESSED BY A USER PROGRAM.
     136/      0 :                      
     137/      0 :                              ORG     00Q
     138/      0 :                      
     139/      0 : 021 371 003          INIT0   LXI     D,PRSROM        ; (DE) = ROM COPY OF PRS CODE
     140/      3 : 041 012 040                  LXI     H,PRSRAM+PRSL-1 ; (HL) = RAM DESTINATION FOR CODE
     141/      6 : 303 073 000                  JMP     INIT            ; INITIALIZE
     142/     11 :                      ;       ERRPL   INIT-1000Q      ; BYTE IN WORD MUST BE 0
     143/     11 :                      
     144/     11 :                      ;       LEVEL 1 - CLOCK
     145/     11 :                      
     146/     11 : =10O                 INT1    EQU     10Q             ; INTERRUPT ENTRY POINT
     147/     11 :                      
     148/     11 : (MACRO)                      ERRNZ   $-11Q           ; INTO TAKE UP ONE BYTE
     148/     11 : =>FALSE                      IF ($-11Q) != 0
     148/     11 :                                ERROR Expression is not zero
     148/     11 : [148]                        ENDIF
     149/     11 : 315 132 000                  CALL    SAVALL          ; SAVE USER REGISTERS
     150/     14 : 026 000                      MVI     D,0
     151/     16 : 303 201 000                  JMP     CLOCK           ; PROCESS CLOCK INTERRUPT
     152/     21 :                      ;       ERRPL   CLOCK-1000Q     ; EXTRA BYTE MUST BE 0
     153/     21 :                      
     154/     21 :                      ;       LEVEL 2 - SINGLE STEP
     155/     21 :                      ;
     156/     21 :                      ;       IF THIS INTERRUPT IS RECEIVED WHEN NOT IN MONITOR MODE,
     157/     21 :                      ;       THEN IT IS ASSUMED TO BE GENERATED BY A USER PROGRAM
     158/     21 :                      ;       (SINGLE STEPPING OR BREAKPOINTING). IN SUCH CASE, THE
     159/     21 :                      ;       USER PROGRAM IS ENTERED THROUGH (UIVEC+3
     160/     21 :                      
     161/     21 : =20O                 INT2    EQU     20Q             ; LEVEL 2 ENTRY
     162/     21 :                      
     163/     21 : (MACRO)                      ERRNZ   $-21Q           ; INT1 TAKES EXTRA BYTE
     163/     21 : =>FALSE                      IF ($-21Q) != 0
     163/     21 :                                ERROR Expression is not zero
 AS V1.42 Beta [Bld 269] - Source File pam8.asm - Page 5 - 2024-05-01 01:09:38 PM


     163/     21 : [163]                        ENDIF
     164/     21 : 315 132 000                  CALL    SAVALL          ; SAVE REGISTERS
     165/     24 : 032                          LDAX    D               ; (A) = (CTLFLG)
     166/     25 :                      ;       SET     CTLFLG
     167/     25 : 303 244 001                  JMP     STPRTN          ; STEP RETURN
     168/     30 :                      
     169/     30 :                      ;       I/O INTERRUPT VECTORS
     170/     30 :                      ;
     171/     30 :                      ;       INTERRUPTS 3 THROUGH 7 ARE AVAILABLE FOR GENERAL I/O USE.
     172/     30 :                      ;
     173/     30 :                      ;       THESE INTERRUPTS ARE NOT SUPPORTED BY PAM/8, AND SHOULD
     174/     30 :                      ;       NEVER OCCUR UNLESS THE USER HAS SUPPLIED HANDLER ROUTINES
     175/     30 :                      ;       (THROUGH UIVEC)
     176/     30 :                      
     177/     30 :                              ORG     30Q
     178/     30 : 303 045 040          INT3    JMP     UIVEC+6         ; JUMP TO USER ROUTINE
     179/     33 :                      
     180/     33 : 064 064 064 061 063          DB      '44413'         ; HEATH PART NUMBER 444-13
     181/     40 :                      
     182/     40 :                              ORG     40Q
     183/     40 : 303 050 040          INT4    JMP     UIVEC+9         ; JUMP TO USER ROUTINE
     184/     43 :                      
     185/     43 : 100 112 107 114 100          DB      100Q,112Q,107Q,114Q,100Q  ; SUPPORT CODE
     186/     50 :                      
     187/     50 :                              ORG     50Q
     188/     50 : 303 053 040          INT5    JMP     UIVEC+12        ; JUMP TO USER ROUTINE
     189/     53 :                      
     190/     53 :                      
     191/     53 :                      ;       DLY - DELAY TIME INTERVAL.
     192/     53 :                      ;
     193/     53 :                      ;       ENTRY   (A) = MILLISECONDS DELAY COUNT/2
     194/     53 :                      ;       EXIT    NONE
     195/     53 :                      ;       USES    A,F
     196/     53 :                      
     197/     53 : 365                  DLY     PUSH    PSW             ; SAVE COUNT
     198/     54 : 257                          XRA     A               ; DONT SOUND HORN
     199/     55 : 303 143 002                  JMP     HRN0            ; PROCESS AS HORN
     200/     60 :                      
     201/     60 :                              ORG     60Q
     202/     60 : 303 056 040          INT6    JMP     UIVEC+15        ; JUMP TO USER ROUTINE
     203/     63 :                      
     204/     63 :                      
     205/     63 : 076 320              GO.     MVI     A,CB.SSI+CB.CLI+CB.SPK ; OFF MONITOR MODE LIGHT
     206/     65 : 303 235 001                  JMP     SST1            ; RETURN TO USER PROGRAM
     207/     70 :                      
     208/     70 :                              ORG     70Q
     209/     70 : 303 061 040          INT7    JMP     UIVEC+18        ; JUMP TO USER ROUTINE
     210/     73 :                      
     211/     73 :                      ;       INIT - INITIALIZE SYSTEM
     212/     73 :                      ;
     213/     73 :                      ;       INIT IS CALLED WHENEVER A HARDWARE MASTER-CLEAR IS INITIATED.
     214/     73 :                      ;
     215/     73 :                      ;       SETUP PAM/8 CONTROL CELLS IN RAM.
     216/     73 :                      ;       DECODE HOW MUCH MEMORY EXISTS, SETUP STACKPOINTER, AMD
     217/     73 :                      ;       ENTER THE MONITOR LOOP.
     218/     73 :                      ;
     219/     73 :                      ;       ENTRY   FROM MASTER CLEAR
     220/     73 :                      ;       EXIT    INTO PAM/8 MAIN LOOP
     221/     73 :                      
     222/     73 : 032                  INIT    LDAX    D               ; COPY *PRSROM* INTO RAM
 AS V1.42 Beta [Bld 269] - Source File pam8.asm - Page 6 - 2024-05-01 01:09:38 PM


     223/     74 : 167                          MOV     M,A             ; MOVE BYTE
     224/     75 : 053                          DCX     H               ; DECREMENT DESTINATION
     225/     76 : 034                          INR     E               ; INCREMENT SOURCE
     226/     77 : 302 073 000                  JNZ     INIT            ; IF NOT DONE
     227/    102 :                      
     228/    102 : =4.000O              SINCR   EQU     2000Q           ; SEARCH INCREMENT
     229/    102 :                      
     230/    102 : 026 004                      MVI     D,SINCR/256     ; (DE) = SEARCH INCREMENT
     231/    104 : 041 000 034                  LXI     H,START-SINCR   ; (HL) = FIRST RAM - SEARCH INCREMENT
     232/    107 :                      
     233/    107 :                      ;       DETERMINE MEMORY LIMIT.
     234/    107 :                      
     235/    107 : 167                  INIT1   MOV     M,A             ; RESTORE VALUE READ
     236/    110 : 031                          DAD     D               ; INCREMENT TRIAL ADDRESS
     237/    111 : 176                          MOV     A,M             ; (A) = CURRENT MEMORY VALUE
     238/    112 : 065                          DCR     M               ; TRY TO CHANGE IT
     239/    113 : 276                          CMP     M
     240/    114 : 302 107 000                  JNZ     INIT1           ; IF MEMORY CHANGED
     241/    117 :                      
     242/    117 : 053                  INIT2   DCX     H
     243/    120 : 371                          SPHL                    ; SET STACKPOINTER = MEMORY LIMIT -1
     244/    121 : 345                          PUSH    H               ; SET *PC* VALUE ON STACK
     245/    122 : 041 322 000                  LXI     H,ERROR
     246/    125 : 345                          PUSH    H               ; SET 'RETURN ADDRESS'
     247/    126 :                      
     248/    126 :                      ;       CONFIGURE LOAD/DUMP UART
     249/    126 :                      
     250/    126 : 076 116                      MVI     A,UMI.1B+UMI.L8+UMI.16X
     251/    130 : 323 371                      OUT     OP.TPC          ; SET 8 BIT, NO PARITY, 1 STOP, X16
     252/    132 :                      
     253/    132 :                      ;       SAVALL - SAVE ALL REGISTERS ON STACK.
     254/    132 :                      ;
     255/    132 :                      ;       SAVALL IS CALLED WHEN AN INTERRUPT IS ACCEPTED, IN ORDER TO
     256/    132 :                      ;       SAVE THE CONTENTS OF THE REGISTERS ON THE STACK.
     257/    132 :                      ;
     258/    132 :                      ;       ENTRY   CALLED DIRECTLY FROM THE INTERRUPT ROUTINE.
     259/    132 :                      ;       EXIT    ALL REGISTERS PUSHED ON STACK.
     260/    132 :                      ;               IF NOT YET IN MONITOR MODE, REGPTR = ADDRESS OF REGISTERS
     261/    132 :                      ;               ON STACK.
     262/    132 :                      ;               (DE) = ADDRESS OF CTLFLG
     263/    132 :                      
     264/    132 :                      
     265/    132 : 343                  SAVALL  XTHL                    ; SET H,L ON STACK TOP
     266/    133 : 325                          PUSH    D
     267/    134 : 305                          PUSH    B
     268/    135 : 365                          PUSH    PSW
     269/    136 : 353                          XCHG                    ; (D,E) = RETURN ADDRESS
     270/    137 : 041 012 000                  LXI     H,10
     271/    142 : 071                          DAD     SP              ; (H,L) = ADDRESS OF USERS SP
     272/    143 : 345                          PUSH    H               ; SET ON STACK AS 'REGISTER'
     273/    144 : 325                          PUSH    D               ; SET RETURN ADDRESS
     274/    145 : 021 011 040                  LXI     D,CTLFLG
     275/    150 : 032                          LDAX    D               ; (A) = CTLFLG
     276/    151 : 057                          CMA
     277/    152 : 346 060                      ANI     CB.MTL+CB.SSI   ; SAVE REGISTER ADDR IF USER OR SINGLE-STEP
     278/    154 : 310                          RZ                      ; RETURN IF WAS INTERRUPT OR MONITOR LOOP
     279/    155 : 041 002 000                  LXI     H,2
     280/    160 : 071                          DAD     SP              ; (H,L) = ADDRESS OF 'STACKPTR' ON STACK
     281/    161 : 042 035 040                  SHLD    REGPTR
     282/    164 : 311                          RET
 AS V1.42 Beta [Bld 269] - Source File pam8.asm - Page 7 - 2024-05-01 01:09:38 PM


     283/    165 :                      
     284/    165 :                      
     285/    165 :                      ;       CUI - CHECK FOR USER INTERRUPT PROCESSING.
     286/    165 :                      ;
     287/    165 :                      ;       CUI IS CALLED TO SEE IF THE USER HAS SPECIFIED PROCESSING
     288/    165 :                      ;       FOR THE CLOCK INTERRUPT.
     289/    165 :                      
     290/    165 :                      ;       SET     MFLAG           ; REFERENCE TO MFLAG
     291/    165 : 012                  CUI1    LDAX    B               ; (A) = MFLAG
     292/    166 :                      ;       ERRNZ   U0.CLK-1        ; CODE ASSUMED = 01
     293/    166 : 017                          RRC
     294/    167 : 334 037 040                  CC      UIVEC           ; IF SPECIFIED, TRANSFER TO USER
     295/    172 :                      
     296/    172 :                      ;       RETURN TO PROGRAM FROM INTERRUPT.
     297/    172 :                      
     298/    172 : 361                  INTXIT  POP     PSW             ; REMOVE FAKE 'STACK REGISTER'
     299/    173 : 361                          POP     PSW
     300/    174 : 301                          POP     B
     301/    175 : 321                          POP     D
     302/    176 : 341                          POP     H
     303/    177 : 373                          EI
     304/    200 : 311                          RET
     305/    201 :                      
     306/    201 :                      
     307/    201 :                      ;       CLOCK - PROCESS CLOCK INTERRUPT
     308/    201 :                      ;
     309/    201 :                      ;       CLOCK IS ENTERED WHENEVER A MILLISECOND CLOCK INTERRUPT IS
     310/    201 :                      ;       PROCESSED.
     311/    201 :                      ;
     312/    201 :                      ;       TICCNT IS INCREMENTED EVERY INTERRUPT.
     313/    201 :                      
     314/    201 : 052 033 040          CLOCK   LHLD    TICCNT
     315/    204 : 043                          INX     H
     316/    205 : 042 033 040                  SHLD    TICCNT          ; INCREMENT TICCOUNT
     317/    210 :                      
     318/    210 :                      ;       REFRESH FRONT PANEL.
     319/    210 :                      ;
     320/    210 :                      ;       THIS CODE DISPLAYS THE APPROPRIATE PATTERN ON THE
     321/    210 :                      ;       FRONT PANEL LEDS. THE LEDS ARE PAINTED IN REVERSE ORDER,
     322/    210 :                      ;       ONE PER INTERRUPT. FIRST, NUMBER 9 IS LIT, THEN NUMBER 8,
     323/    210 :                      ;       ETC.
     324/    210 :                      
     325/    210 : 041 010 040                  LXI     H,MFLAG
     326/    213 : 176                          MOV     A,M
     327/    214 : 107                          MOV     B,A             ; (B) = CURRENT FLAG
     328/    215 : 346 100                      ANI     UO.NFR          ; SEE IF FRONT PANEL REFRESH WANTED
     329/    217 : 043                          INX     H
     330/    220 :                      ;       ERRNZ   CTLFLG-MFLAG-1
     331/    220 : 176                          MOV     A,M             ; (A) = CTLFLG
     332/    221 : 112                          MOV     C,D             ; (C) = 0 IN CASE NO PANEL DISPLAY
     333/    222 : 302 237 000                  JNZ     CLK3            ; IF NOT
     334/    225 : 043                          INX     H
     335/    226 :                      ;       ERRNZ   REFIND-CTLFLG-1
     336/    226 : 065                          DCR     M               ; DECREMENT DIGIT INDEX
     337/    227 : 302 234 000                  JNZ     CLK2            ; IF NOT WRAP-AROUND
     338/    232 : 066 011                      MVI     M,9             ; WRAP DISPLAY AROUND
     339/    234 : 136                  CLK2    MOV     E,M
     340/    235 : 031                          DAD     D               ; (H,L) = ADDRESS OF PATTERN
     341/    236 : 113                          MOV     C,E
     342/    237 :                      CLK3                            ; (A) = CTLFLG
 AS V1.42 Beta [Bld 269] - Source File pam8.asm - Page 8 - 2024-05-01 01:09:38 PM


     343/    237 : 261                          ORA     C               ; (A) = INDEX + FIXED BITS
     344/    240 : 323 360                      OUT     OP.DIG          ; SELECT DIGIT
     345/    242 : 176                          MOV     A,M
     346/    243 : 323 361                      OUT     OP.SEG          ; SELECT SEGMENT
     347/    245 :                      
     348/    245 :                      ;       SEE IF TIME TO DECODE DISPLAY VALUES
     349/    245 :                      
     350/    245 : 056 033                      MVI     L,TICCNT#256
     351/    247 : 176                          MOV     A,M
     352/    250 : 346 037                      ANI     37Q             ; EVERY 32 INTERRUPTS
     353/    252 : 314 161 003                  CZ      UFD             ; UPDATE FRONT PANEL DISPLAYS
     354/    255 :                      
     355/    255 :                      ;       EXIT CLOCK INTERRUPT
     356/    255 :                      
     357/    255 : 001 011 040                  LXI     B,CTLFLG
     358/    260 : 012                          LDAX    B               ; (A) = CTLFLG
     359/    261 : 346 040                      ANI     CB.MTL
     360/    263 : 302 172 000                  JNZ     INTXIT          ; IF IN MONITOR CODE
     361/    266 : 013                          DCX     B
     362/    267 :                       ;      ERRNZ   CTLFLG-MFLAG01
     363/    267 : 012                          LDAX    B               ; (A) = MFLAG
     364/    270 : (MACRO)                      ERRNZ   UO.HLT-200Q     ; ASSUME HIGH-ORDER
     364/    270 : =>FALSE                      IF (UO.HLT-200Q) != 0
     364/    270 :                                ERROR Expression is not zero
     364/    270 : [1.108]                      ENDIF
     365/    270 : 027                          RAL
     366/    271 : 332 313 000                  JC      CLK4            ; SKIP IT
     367/    274 :                      
     368/    274 :                      ;       NOT IN MONITOR MODE, CHECK FOR HALT
     369/    274 :                      
     370/    274 : 076 012                      MVI     A,10            ; (A) = INDEX OF *P* REG
     371/    276 : 315 052 003                  CALL    LRA.            ; LOCATE REGISTER ADDRESS
     372/    301 : 136                          MOV     E,M
     373/    302 : 043                          INX     H
     374/    303 : 126                          MOV     D,M             ; (D,E) = PC CONTENTS
     375/    304 : 033                          DCX     D
     376/    305 : 032                          LDAX    D
     377/    306 : 376 166                      CPI     MI.HLT          ; CHECK FOR HALT
     378/    310 : 312 322 000                  JZ      ERROR           ; IF HALT, BE IN MONITOR MODE
     379/    313 :                      
     380/    313 :                      ;       CHECK FOR 'RETURN TO MONITOR' KEY ENTRY.
     381/    313 :                      CLK4
     382/    313 : 333 360                      IN      IP.PAD
     383/    315 : 376 056                      CPI     56Q             ; SEE IF '0' AND '#'
     384/    317 : 302 165 000                  JNZ     CUI1            ; IF NOT, ALLOW USER PROCESSING OF CLOCK
     385/    322 :                      
     386/    322 :                      ;       ERROR - COMMAND ERROR.
     387/    322 :                      ;
     388/    322 :                      ;       ERROR IS CALLED AS A 'BAIL-OUT' ROUTINE.
     389/    322 :                      ;
     390/    322 :                      ;       IT RESETS THE OPERATIONAL MODE, AND RESTORES THE STACKPOINTER.
     391/    322 :                      ;
     392/    322 :                      ;       ENTRY   NONE
     393/    322 :                      ;       EXIT    TO MTR LOOP
     394/    322 :                      ;               CTLFLG SET
     395/    322 :                      ;               MFLAG CLEARED
     396/    322 :                      ;       USES    ALL
     397/    322 :                      
     398/    322 :                      ERROR
     399/    322 : 041 010 040                  LXI     H,MFLAG
 AS V1.42 Beta [Bld 269] - Source File pam8.asm - Page 9 - 2024-05-01 01:09:38 PM


     400/    325 : 176                          MOV     A,M             ; (A) = MFLAG
     401/    326 : 346 275                      ANI     377Q-UO.DDU-UO.NFR ; RE-ENABLE DISPLAYS
     402/    330 : 167                          MOV     M,A             ; REPLACE
     403/    331 : 043                          INX     H
     404/    332 : 066 360                      MVI     M,CB.SSI+CB.MTL+CB.CLI+CB.SPK ; RESTORE *CTLFLG*
     405/    334 :                      ;       ERRNZ   CTLFLG-MFLAG-1
     406/    334 : 373                          EI
     407/    335 : 052 035 040                  LHLD    REGPTR
     408/    340 : 371                          SPHL                    ; RESTORE STACK POINTER TO EMPTY STATE
     409/    341 : 315 136 002                  CALL    ALARM           ; ALARM FOR 200 MS
     410/    344 :                      
     411/    344 :                      ;       MTR - MONITOR LOOP.
     412/    344 :                      ;
     413/    344 :                      ;       THIS IS THE MAIN EXECUTIVE LOOP FOR THE FRONT PANEL EMULATOR.
     414/    344 :                      
     415/    344 : 373                  MTR     EI
     416/    345 :                      
     417/    345 : 041 345 000          MTR1    LXI     H,MTR1
     418/    350 : 345                          PUSH    H               ; SET 'MTR1' AS RETURN ADDRESS
     419/    351 : 001 007 040                  LXI     B,DSPMOD        ; (BC) = #DSPMOD
     420/    354 : 012                          LDAX    B
     421/    355 : 346 001                      ANI     1               ; (A) = 1 IF ALTER
     422/    357 : 057                          CMA
     423/    360 : 062 006 040                  STA     DSPROT          ; ROTATE LED PERIODS IF ALTER
     424/    363 :                      
     425/    363 :                      ;       READ KEY
     426/    363 :                      
     427/    363 : 315 260 003                  CALL    RCK             ; READ CONSOLE KEYPAD
     428/    366 : 052 024 040                  LHLD    ABUSS
     429/    371 : 376 012                      CPI     10
     430/    373 : 322 005 001                  JNC     MTR4            ; IF IN 'ALWAYS VALID' GROUP
     431/    376 : 137                          MOV     E,A             ; SAVE VALUE
     432/    377 :                      ;       SET     DSPMOD
     433/    377 : 012                          LDAX    B               ; (A) = DSPMOD
     434/  1.000 : 017                          RRC
     435/  1.001 : 332 051 001                  JC      MTR5            ; IF IN ALTER MODE
     436/  1.004 : 173                          MOV     A,E             ; (A) = CODE
     437/  1.005 :                      
     438/  1.005 :                      ;       HAVE A COMMAND (NOT A VALUE)
     439/  1.005 :                      
     440/  1.005 : 326 004              MTR4    SUI     4               ; (A) = COMMAND
     441/  1.007 : 332 322 000                  JC      ERROR           ; IF BAD
     442/  1.012 : 137                          MOV     E,A
     443/  1.013 : 345                          PUSH    H               ; SAVE ABUSS VALUE
     444/  1.014 : 041 035 001                  LXI     H,MTRA
     445/  1.017 : 026 000                      MVI     D,0
     446/  1.021 : 031                          DAD     D               ; (H,L) = ADDRESS OF TABLE ENTRY
     447/  1.022 : 136                          MOV     E,M
     448/  1.023 : 031                          DAD     D               ; (H,L) = ADDRESS OF PROCESSOR
     449/  1.024 : 343                          XTHL                    ; SET ADDRESS, (H,L) = (ABUSS)
     450/  1.025 : 021 005 040                  LXI     D,REGI          ; (D,E) = ADDRESS OF REG INDEX
     451/  1.030 :                      ;       SET     DSPMOD
     452/  1.030 : 012                          LDAX    B               ; (A) = DSPMOD
     453/  1.031 : 346 002                      ANI     2               ; SET 'Z' IF MEMORY
     454/  1.033 : 012                          LDAX    B               ; (A) = DSPMOD
     455/  1.034 : 311                          RET                     ; JUMP TO PROCESSOR
     456/  1.035 :                      
     457/  1.035 :                      MTRA                            ; JUMP TABLE
     458/  1.035 : 165                          DB      GO-$            ; 4 - GO
     459/  1.036 : 141                          DB      IN- $           ; 5 - INPUT
 AS V1.42 Beta [Bld 269] - Source File pam8.asm - Page 10 - 2024-05-01 01:09:38 PM


     460/  1.037 : 143                          DB      OUT-$           ; 6 - OUTPUT
     461/  1.040 : 165                          DB      SSTEP-$         ; 7 - SINGLE STEP
     462/  1.041 : 220                          DB      RMEM-$          ; 8 - CASSETTE LOAD
     463/  1.042 : 332                          DB      WMEM-$          ; 9 - CASSETTE DUMP
     464/  1.043 : 067                          DB      NEXT-$          ; + - NEXT
     465/  1.044 : 104                          DB      LAST-$          ; - - LAST
     466/  1.045 : 102                          DB      ABORT-$         ; * - ABORT
     467/  1.046 : 060                          DB      RW-$            ; / - DISPLAY/ALTER
     468/  1.047 : 116                          DB      MEMM-$          ; # - MEMORY MODE
     469/  1.050 : 034                          DB      REGM-$          ; . - REGISTER MODE
     470/  1.051 :                      
     471/  1.051 :                      ;       PROCESS MEMORY/REGISTER ALTERATIONS.
     472/  1.051 :                      ;
     473/  1.051 :                      ;       THIS CODE IS ENTERED IF
     474/  1.051 :                      ;
     475/  1.051 :                      ;       1) AM IN ALTER MODE, AND
     476/  1.051 :                      ;       2) A KEY FROM 0-7 WAS ENTERED.
     477/  1.051 :                      
     478/  1.051 : 017                  MTR5    RRC
     479/  1.052 : 173                          MOV     A,E             ; (A) = VALUE
     480/  1.053 : 332 067 001                  JC      MTR6            ; IS REGISTER
     481/  1.056 : 067                          STC                     ; INDICATE 1ST DIGIT IS IN (A)
     482/  1.057 : 315 066 003                  CALL    IOB             ; INPUT OCTAL BYTE
     483/  1.062 : 043                          INX     H               ; DISPLAY NEXT LOCATION
     484/  1.063 :                      
     485/  1.063 :                      ;       SAE - STORE ABUSS AND EXIT.
     486/  1.063 :                      ;
     487/  1.063 :                      ;       ENTRY   (HL) = ABUSS VALUE
     488/  1.063 :                      ;       EXIT    TO (RET)
     489/  1.063 :                      ;       USES    NONE
     490/  1.063 :                      
     491/  1.063 : 042 024 040          SAE     SHLD    ABUSS
     492/  1.066 : 311                          RET
     493/  1.067 :                      
     494/  1.067 :                      ;       ALTER REGISTER
     495/  1.067 :                      
     496/  1.067 : 365                  MTR6    PUSH    PSW             ; SAVE CODE
     497/  1.070 : 315 047 003                  CALL    LRA             ; LOCATE REGISTER ADDRESS
     498/  1.073 : 247                          ANA     A
     499/  1.074 : 312 322 000                  JZ      ERROR           ; NOT ALLOWED TO ALTER STACKPOINTER
     500/  1.077 : 043                          INX     H
     501/  1.100 : 361                          POP     PSW             ; RESTORE VALUE AND CARRY FLAG
     502/  1.101 : 303 062 003                  JMP     IOA             ; INPUT OCTAL ADDRESS
     503/  1.104 :                      
     504/  1.104 :                      
     505/  1.104 :                      ;       REGM - ENTER REGISTER DISPLAY MODE.
     506/  1.104 :                      ;
     507/  1.104 :                      ;       ENTRY   (A) = DSPMOD
     508/  1.104 :                      ;               (BC) = #DSPMOD
     509/  1.104 :                      
     510/  1.104 : 076 002              REGM    MVI     A,2             ; SET DISPLAY REGISTER MODE
     511/  1.106 :                      ;       SET     DSPMOD
     512/  1.106 : 002                          STAX    B               ; SET DISPLAY REGISTER MODE
     513/  1.107 :                      ;       ERRNZ   DSPMOD-DSPROT-1
     514/  1.107 : 013                          DCX     B               ; (BC) = #DSPROT
     515/  1.110 : 257                          XRA     A
     516/  1.111 : 002                          STAX    B               ; SET ALL PERIODS ON
     517/  1.112 : 315 260 003                  CALL    RCK             ; READ KEY ENTRY
     518/  1.115 : 075                          DCR     A               ; DISPLACE
     519/  1.116 : 376 006                      CPI     6
 AS V1.42 Beta [Bld 269] - Source File pam8.asm - Page 11 - 2024-05-01 01:09:38 PM


     520/  1.120 : 322 322 000                  JNC     ERROR           ; NOT 1-6
     521/  1.123 : 007                          RLC
     522/  1.124 : 022                          STAX    D               ; SET NEW REG IND
     523/  1.125 :                      ;       SET     REGI
     524/  1.125 : 311                          RET
     525/  1.126 :                      
     526/  1.126 :                      ;       RW - TOGGLE DISPLAY/ALTER MODE.
     527/  1.126 :                      ;
     528/  1.126 :                      ;       ENTRY   (A) = DSPMOD
     529/  1.126 :                      ;               (BC) = ADDRESS OF DSPMOD
     530/  1.126 :                      
     531/  1.126 :                      ;       SET     DSPMOD
     532/  1.126 : 356 001              RW      XRI     1
     533/  1.130 : 002                          STAX    B
     534/  1.131 : 311                          RET
     535/  1.132 :                      
     536/  1.132 :                      ;       NEXT - INCREMENT DISPLAY ELEMENT
     537/  1.132 :                      ;
     538/  1.132 :                      ;       ENTRY   (HL) = (ABUSS)
     539/  1.132 :                      ;               (DE) = ADDRESS OF REGIND
     540/  1.132 :                      
     541/  1.132 : 043                  NEXT    INX     H
     542/  1.133 : 312 063 001                  JZ      SAE             ; IF MEMORY, STORE VALUES AND EXIT
     543/  1.136 :                      
     544/  1.136 :                      ;       IS REGISTER MODE.
     545/  1.136 :                      
     546/  1.136 :                      ;       SET     REGI
     547/  1.136 : 032                          LDAX    D               ; (A) = REGI
     548/  1.137 : 306 002                      ADI     2               ; INCREMENT REGISTER INDEX
     549/  1.141 : 022                          STAX    D               ; WRAP TO *SP*
     550/  1.142 : 376 014                      CPI     12
     551/  1.144 : 330                          RC                      ; IF NOT TOO LARGE, EXIT
     552/  1.145 : 257                          XRA     A               ; OVERFLOW
     553/  1.146 : 022                          STAX    D
     554/  1.147 : 311                  ABORT   RET
     555/  1.150 :                      
     556/  1.150 :                      ;       LAST - INCREMENT DISPLAY ELEMENT
     557/  1.150 :                      ;
     558/  1.150 :                      ;       ENTRY   (HL) = (ABUSS)
     559/  1.150 :                      ;               (DE) = ADDRESS OF REGIND
     560/  1.150 :                      ;
     561/  1.150 :                      
     562/  1.150 : 053                  LAST    DCX     H
     563/  1.151 : 312 063 001                  JZ      SAE             ; IF MEMORY, STORE AND EXIT
     564/  1.154 :                      
     565/  1.154 :                      ;       IS REGISTER MODE
     566/  1.154 :                      
     567/  1.154 :                      ;       SET     REGI
     568/  1.154 : 032                  LST2    LDAX    D               ; (A) = REGI
     569/  1.155 : 326 002                      SUI     2
     570/  1.157 : 022                          STAX    D
     571/  1.160 : 320                          RNC                     ; IF OK
     572/  1.161 : 076 012                      MVI     A,10            ; UNDERFLOW TO *PC*
     573/  1.163 : 022                          STAX    D
     574/  1.164 : 311                          RET
     575/  1.165 :                      
     576/  1.165 :                      ;       MEMM - ENTER DISPLAY MEMORY MODE
     577/  1.165 :                      ;
     578/  1.165 :                      ;       ENTRY   (BC) = ADDRESS OF DSPMOD
     579/  1.165 :                      
 AS V1.42 Beta [Bld 269] - Source File pam8.asm - Page 12 - 2024-05-01 01:09:38 PM


     580/  1.165 : 257                  MEMM    XRA     A               ; (A) = 0
     581/  1.166 :                      ;       SET     DSPMOD
     582/  1.166 : 002                          STAX    B               ; SET DISPLAY MEMORY MODE
     583/  1.167 :                      ;       ERRNZ   DSPMOD-DSPROT-1
     584/  1.167 : 013                          DCX     B               ; (BC) = #DSPROT
     585/  1.170 : 002                          STAX    B               ; SET ALL PERIODS ON
     586/  1.171 : 041 025 040                  LXI     H,ABUSS+1
     587/  1.174 : 303 062 003                  JMP     IOA             ; INPUT OCTAL ADDRESS
     588/  1.177 :                      
     589/  1.177 :                      ;       IN - INPUT DATA BYTE.
     590/  1.177 :                      ;
     591/  1.177 :                      ;       OUT - OUTPUT DATA BYTE.
     592/  1.177 :                      ;
     593/  1.177 :                      ;       ENTRY   (HL) = (ABUSS)
     594/  1.177 :                      
     595/  1.177 : 006 333              IN      MVI     B,MI.IN
     596/  1.201 : 021                          DB      MI.LXID         ; SKIP NEXT INSTRUCTION
     597/  1.202 : 006 323              OUT     MVI     B,MI.OUT
     598/  1.204 : 174                          MOV     A,H             ; (A) = VALUE
     599/  1.205 : 145                          MOV     H,L             ; (H) = PORT
     600/  1.206 : 150                          MOV     L,B             ; (L) = IN/OUT INSTRUCTION
     601/  1.207 : 042 002 040                  SHLD    IOWRK
     602/  1.212 : 315 002 040                  CALL    IOWRK           ; PERFORM IO
     603/  1.215 : 154                          MOV     L,H             ; (L) = PORT
     604/  1.216 : 147                          MOV     H,A             ; (H) = VALUE
     605/  1.217 : 303 063 001                  JMP     SAE             ; STORE ABUSS AND EXIT
     606/  1.222 :                      
     607/  1.222 :                      ;       GO - RETURN TO USER MODE
     608/  1.222 :                      ;
     609/  1.222 :                      ;       ENTRY   NONE
     610/  1.222 :                      
     611/  1.222 : 303 063 000          GO      JMP     GO.             ; ROUTINE IS IN WASTE SPACE
     612/  1.225 :                      
     613/  1.225 :                      ;       SSTEP - SINGLE STEP INSTRUCTION
     614/  1.225 :                      ;
     615/  1.225 :                      ;       ENTRY   NONE
     616/  1.225 :                      
     617/  1.225 :                      SSTEP                           ; SINGLE STEP
     618/  1.225 : 363                          DI                      ; DISABLE INTERRUPTS UNTIL THE RIGHT TIME
     619/  1.226 : 072 011 040                  LDA     CTLFLG
     620/  1.231 : 356 020                      XRI     CB.SSI          ; CLEAR SINGLE STEP INHIBIT
     621/  1.233 : 323 360                      OUT     OP.CTL          ; PRIME SINGLE STEP INTERRUPT
     622/  1.235 : 062 011 040          SST1    STA     CTLFLG          ; SET NEW FLAG VALUES
     623/  1.240 : 341                          POP     H               ; CLEAN STACK
     624/  1.241 : 303 172 000                  JMP     INTXIT          ; RETURN TO USER ROUTINE FOR STEP
     625/  1.244 :                      
     626/  1.244 :                      ;       STPRTN - SINGLE STEP RETURN
     627/  1.244 :                      
     628/  1.244 :                      STPRTN
     629/  1.244 : 366 020                      ORI     CB.SSI          ; DISABLE SINGLE STEP INTERRUPTION
     630/  1.246 : 323 360                      OUT     OP.CTL          ; TURN OFF SINGLE STEP ENABLE
     631/  1.250 :                      ;       SET     CTLFLG
     632/  1.250 : 022                          STAX    D
     633/  1.251 : 346 040                      ANI     CB.MTL          ; SEE IF IN MONITOR MODE
     634/  1.253 : 302 344 000                  JNZ     MTR
     635/  1.256 : 303 042 040                  JMP     UIVEC+3         ; TRANSFER TO USER'S ROUTINE
     636/  1.261 :                      
     637/  1.261 :                      ;       RMEM - LOAD MEMORY FROM TAPE
     638/  1.261 :                      ;
     639/  1.261 :                      
 AS V1.42 Beta [Bld 269] - Source File pam8.asm - Page 13 - 2024-05-01 01:09:38 PM


     640/  1.261 : 041 244 002          RMEM    LXI     H,TPABT
     641/  1.264 : 042 031 040                  SHLD    TPERRX          ; SETUP ERROR EXIT ADDRESS
     642/  1.267 :                      ;       JMP     LOAD
     643/  1.267 :                      
     644/  1.267 :                      ;       LOAD - LOAD MEMORY FROM TAPE
     645/  1.267 :                      ;
     646/  1.267 :                      ;       READ THE NEXT RECORD FROM THE CASSETTE TAPE.
     647/  1.267 :                      ;
     648/  1.267 :                      ;       USE THE LOAD ADDRESS IN THE TAPE RECORD.
     649/  1.267 :                      ;
     650/  1.267 :                      ;       ENTRY   (HL) = ERROR EXIT ADDRESS
     651/  1.267 :                      ;       EXIT    USER P-REG (IN STACK) SET TO ENTRY ADDRESS
     652/  1.267 :                      ;               TO CALLER IF ALL OK
     653/  1.267 :                      ;               TO ERROR EXIT IF TAPE ERRORS DETECTED.
     654/  1.267 :                      
     655/  1.267 : 001 000 376          LOAD    LXI     B,177000Q        ; 400Q-RT.MI*256-256 (BC) = - REQUIRED TYPE AND #
     656/  1.272 : 315 265 002          LOA0    CALL    SRS             ; SCAN FOR RECORD START
     657/  1.275 : 157                          MOV     L,A             ; (HL) = COUNT
     658/  1.276 : 353                          XCHG                    ; (DE) = COUNT, (HL) = TYPE AND #
     659/  1.277 : 015                          DCR     C               ; (C) = - NEXT #
     660/  1.300 : 011                          DAD     B
     661/  1.301 : 174                          MOV     A,H
     662/  1.302 : 305                          PUSH    B               ; SAVE TYPE AND #
     663/  1.303 : 365                          PUSH    PSW             ; SAVE TYPE CODE
     664/  1.304 : 346 177                      ANI     177Q            ; CLEAR END FLAG BIT
     665/  1.306 : 265                          ORA     L
     666/  1.307 : 076 002                      MVI     A,2             ; SEQUENCE ERROR
     667/  1.311 : 302 205 002                  JNZ     TPERR           ; IF NOT RIGHT TYPE OF SEQUENCE
     668/  1.314 : 315 325 002                  CALL    RNP             ; READ ADDR
     669/  1.317 : 104                          MOV     B,H
     670/  1.320 : 117                          MOV     C,A             ; (BC) = P-REG ADDRESS
     671/  1.321 : 076 012                      MVI     A,10
     672/  1.323 : 325                          PUSH    D               ; SAVE (DE)
     673/  1.324 : 315 052 003                  CALL    LRA.            ; LOCATE REG ADDRESS
     674/  1.327 : 321                          POP     D               ; RESTORE (DE)
     675/  1.330 : 161                          MOV     M,C             ; SET P-REG IN MEM
     676/  1.331 : 043                          INX     H
     677/  1.332 : 160                          MOV     M,B
     678/  1.333 : 315 325 002                  CALL    RNP             ; READ ADDRESS
     679/  1.336 : 157                          MOV     L,A             ; (HL) = ADDRESS, (DE) = COUNT
     680/  1.337 : 042 000 040                  SHLD    START
     681/  1.342 :                      
     682/  1.342 : 315 331 002          LOA1    CALL    RNB             ; READ BYTE
     683/  1.345 : 167                          MOV     M,A
     684/  1.346 : 042 024 040                  SHLD    ABUSS           ; SET ABUSS FOR DISPLAY
     685/  1.351 : 043                          INX     H
     686/  1.352 : 033                          DCX     D
     687/  1.353 : 172                          MOV     A,D
     688/  1.354 : 263                          ORA     E
     689/  1.355 : 302 342 001                  JNZ     LOA1            ; IF MORE TO GO
     690/  1.360 :                      
     691/  1.360 : 315 172 002                  CALL    CTC             ; CHECK TAPE CHECKSUM
     692/  1.363 :                      
     693/  1.363 :                      ;       READ NEXT BLOCK
     694/  1.363 :                      
     695/  1.363 : 361                          POP     PSW             ; (A) = FILE TYPE BYTE
     696/  1.364 : 301                          POP     B               ; (BC) = -(LAST TYPE, LAST #0
     697/  1.365 : 007                          RLC
     698/  1.366 : 332 133 002                  JC      TFT             ; ALL DONE - TURN OFF TAPE
     699/  1.371 : 303 272 001                  JMP     LOA0            ; READ ANOTHER RECORD
 AS V1.42 Beta [Bld 269] - Source File pam8.asm - Page 14 - 2024-05-01 01:09:38 PM


     700/  1.374 :                      
     701/  1.374 :                      ;       DUMP - DUMP MEMORY TO MAG TAPE.
     702/  1.374 :                      ;
     703/  1.374 :                      ;       DUMP SPECIFIED MEMORY RANGE TO MAG TAPE.
     704/  1.374 :                      ;
     705/  1.374 :                      ;       ENTRY   (START) = START ADDRESS
     706/  1.374 :                      ;               (ABUSS) = END ADDRESS
     707/  1.374 :                      ;               USER PC = ENTRY POINT ADDRESS
     708/  1.374 :                      ;       EXIT    TO CALLER.
     709/  1.374 :                      
     710/  1.374 : 041 244 002          WMEM    LXI     H,TPABT
     711/  1.377 : 042 031 040                  SHLD    TPERRX          ; TAPE ERROR EXIT
     712/  2.002 :                      
     713/  2.002 : 076 001              DUMP    MVI     A,UCI.TE
     714/  2.004 : 323 371                      OUT     OP.TPC          ; SETUP TAPE CONTROL
     715/  2.006 : 076 026                      MVI     A,A.SYN
     716/  2.010 : 046 040                      MVI     H,32            ; (H) = # OF SYNC CHARACTERS
     717/  2.012 : 315 024 003          WME1    CALL    WNB
     718/  2.015 : 045                          DCR     H
     719/  2.016 : 302 012 002                  JNZ     WME1            ; WRITE SYN HEADER
     720/  2.021 : 076 002                      MVI     A,A.STX
     721/  2.023 : 315 024 003                  CALL    WNB             ; WRITE STX
     722/  2.026 : 154                          MOV     L,H             ; (HL) = 00
     723/  2.027 : 042 027 040                  SHLD    CRCSUM          ; CLEAR CRC 16
     724/  2.032 : 041 001 201                  LXI     H,100401Q       ; RT.MI+80H*256+1 FIRST AND LAST MI RECORD
     725/  2.035 : 315 017 003                  CALL    WNP
     726/  2.040 : 052 000 040                  LHLD    START
     727/  2.043 : 353                          XCHG                    ; (D,E) = START ADDRESS
     728/  2.044 : 052 024 040                  LHLD    ABUSS           ; (H,L) = STOP ADDR
     729/  2.047 : 043                          INX     H               ; COMPUTE WITH STOP+1
     730/  2.050 : 175                          MOV     A,L
     731/  2.051 : 223                          SUB     E
     732/  2.052 : 157                          MOV     L,A
     733/  2.053 : 174                          MOV     A,H
     734/  2.054 : 232                          SBB     D
     735/  2.055 : 147                          MOV     H,A             ; (HL) = COUNT
     736/  2.056 : 315 017 003                  CALL    WNP             ; WRITE COUNT
     737/  2.061 : 345                          PUSH    H
     738/  2.062 : 076 012                      MVI     A,10
     739/  2.064 : 325                          PUSH    D               ; SAVE (DE)
     740/  2.065 : 315 052 003                  CALL    LRA.            ; LOCATE P-REG ADDRESS
     741/  2.070 : 176                          MOV     A,M
     742/  2.071 : 043                          INX     H
     743/  2.072 : 146                          MOV     H,M
     744/  2.073 : 157                          MOV     L,A             ; (HL) = CONTENTS OF PC
     745/  2.074 : 315 017 003                  CALL    WNP             ; WRITE HEADER
     746/  2.077 : 341                          POP     H               ; (HL) = ADDRESS
     747/  2.100 : 321                          POP     D               ; (DE) = COUNT
     748/  2.101 : 315 017 003                  CALL    WNP
     749/  2.104 :                      
     750/  2.104 : 176                  WME2    MOV     A,M
     751/  2.105 : 315 024 003                  CALL    WNB             ; WRITE BYTE
     752/  2.110 : 042 024 040                  SHLD    ABUSS           ; SET ADDRESS FOR DISPLAY
     753/  2.113 : 043                          INX     H
     754/  2.114 : 033                          DCX     D
     755/  2.115 : 172                          MOV     A,D
     756/  2.116 : 263                          ORA     E
     757/  2.117 : 302 104 002                  JNZ     WME2            ; IF MORE TO GO
     758/  2.122 :                      
     759/  2.122 :                      ;       WRITE CHECKSUM
 AS V1.42 Beta [Bld 269] - Source File pam8.asm - Page 15 - 2024-05-01 01:09:38 PM


     760/  2.122 :                      
     761/  2.122 : 052 027 040                  LHLD    CRCSUM
     762/  2.125 : 315 017 003                  CALL    WNP             ; WRITE IT
     763/  2.130 : 315 017 003                  CALL    WNP             ; FLUSH CHECKSUM
     764/  2.133 :                      ;       JMP     TFT
     765/  2.133 :                      
     766/  2.133 :                      ;       TFT - TURN OFF TAPE.
     767/  2.133 :                      ;
     768/  2.133 :                      ;       STOP THE TAPE TRANSPORT.
     769/  2.133 :                      ;
     770/  2.133 :                      
     771/  2.133 : 257                  TFT     XRA     A
     772/  2.134 : 323 371                      OUT     OP.TPC          ; TURN OFF TAPE
     773/  2.136 :                      
     774/  2.136 :                      ;       HORN - MAKE NOISE.
     775/  2.136 :                      ;
     776/  2.136 :                      ;       ENTRY   (A) = (MILLISECOND COUNT)/2
     777/  2.136 :                      ;       EXIT    NONE
     778/  2.136 :                      ;       USES    A,F
     779/  2.136 :                      
     780/  2.136 : 076 144              ALARM   MVI     A,200/2         ; 200 MS BEEP
     781/  2.140 : 365                  HORN    PUSH    PSW
     782/  2.141 : 076 200                      MVI     A,CB.SPK        ; TURN ON SPEAKER
     783/  2.143 :                      
     784/  2.143 : 343                  HRN0    XTHL                    ; SAVE (HL), (H) = COUNT
     785/  2.144 : 325                          PUSH    D               ; SAVE (DE)
     786/  2.145 : 353                          XCHG                    ; (D) = LOOP COUNT
     787/  2.146 : 041 011 040                  LXI     H,CTLFLG
     788/  2.151 : 256                          XRA     M
     789/  2.152 : 136                          MOV     E,M             ; (E) = OLD CTLFLG VALUE
     790/  2.153 : 167                          MOV     M,A             ; TURN ON HORN
     791/  2.154 : 056 033                      MVI     L,TICCNT#256
     792/  2.156 :                      
     793/  2.156 : 172                          MOV     A,D             ; (A) = CYCLE COUNT
     794/  2.157 : 206                          ADD     M
     795/  2.160 : 276                  HRN2    CMP     M               ; WAIT REQUIRED TICCOUNTS
     796/  2.161 : 302 160 002                  JNZ     HRN2
     797/  2.164 : 056 011                      MVI     L,CTLFLG#256
     798/  2.166 : 163                          MOV     M,E             ; TURN HORN OFF
     799/  2.167 : 321                          POP     D
     800/  2.170 : 341                          POP     H
     801/  2.171 : 311                          RET
     802/  2.172 :                      
     803/  2.172 :                      ;       CTC - VERIFY CHECKSUM.
     804/  2.172 :                      ;
     805/  2.172 :                      ;       ENTRY   TAPE JUST BEFORE CRC
     806/  2.172 :                      ;       EXIT    TO CALLER IF OK
     807/  2.172 :                      ;               TO *TPERR* IF BAD
     808/  2.172 :                      ;       USES    A,F,H,L
     809/  2.172 :                      
     810/  2.172 : 315 325 002          CTC     CALL    RNP             ; READ NEXT PAIR
     811/  2.175 : 052 027 040                  LHLD    CRCSUM
     812/  2.200 : 174                          MOV     A,H
     813/  2.201 : 265                          ORA     L
     814/  2.202 : 310                          RZ                      ; RETURN IF OK
     815/  2.203 : 076 001                      MVI     A,1             ; CHECKSUM ERROR
     816/  2.205 :                      ;       JMP     TPERR           ; (B) = CODE
     817/  2.205 :                      
     818/  2.205 :                      ;       TPERR - PROCESS TAPE ERROR.
     819/  2.205 :                      ;
 AS V1.42 Beta [Bld 269] - Source File pam8.asm - Page 16 - 2024-05-01 01:09:38 PM


     820/  2.205 :                      ;       DISPLAY ERR NUMBER IN LOW BYTE OF ABUSS
     821/  2.205 :                      ;
     822/  2.205 :                      ;       IF ERROR NUMBER EVEN, DON'T ALLOW #
     823/  2.205 :                      ;       IF ERROR NUMBER ODD, ALLOW #
     824/  2.205 :                      ;
     825/  2.205 :                      ;       ENTRY   (A) = NUMBER
     826/  2.205 :                      
     827/  2.205 : 062 024 040          TPERR   STA     ABUSS
     828/  2.210 : 107                          MOV     B,A             ; (B) = CODE
     829/  2.211 : 315 133 002                  CALL    TFT             ; TURN OFF TAPE
     830/  2.214 :                      
     831/  2.214 :                      ;       IS #, RETURN (IF PARITY ERROR)
     832/  2.214 :                      
     833/  2.214 : 346                          DB      MI.ANI          ; FALL THROUGH WITH CARRY CLEAR
     834/  2.215 : 170                  TER3    MOV     A,B
     835/  2.216 :                      
     836/  2.216 : 017                          RRC
     837/  2.217 : 330                          RC                      ; RETURN IF OK
     838/  2.220 :                      
     839/  2.220 :                      ;       BEEP AND FLASH ERROR NUMBER
     840/  2.220 :                      
     841/  2.220 : 334 136 002          TER1    CC      ALARM           ; ALARM IF PROPER TIME
     842/  2.223 : 315 252 002                  CALL    TPXIT           ; SEE IF #
     843/  2.226 : 333 360                      IN      IP.PAD
     844/  2.230 : 376 057                      CPI     00101111B       ; CHECK FOR #
     845/  2.232 : 312 215 002                  JZ      TER3            ; IF #
     846/  2.235 : 072 034 040                  LDA     TICCNT+1
     847/  2.240 : 037                          RAR                     ; 'C' SET IF 1/2 SECOND
     848/  2.241 : 303 220 002                  JMP     TER1
     849/  2.244 :                      
     850/  2.244 :                      ;       TPABT - ABORT TAPE LOAD OR DUMP.
     851/  2.244 :                      ;
     852/  2.244 :                      ;       ENTERED WHEN LOADING OR DUMPING, AND THE '*' KEY
     853/  2.244 :                      ;       IS STRUCK.
     854/  2.244 :                      
     855/  2.244 : 257                  TPABT   XRA     A
     856/  2.245 : 323 371                      OUT     OP.TPC          ; OFF TAPE
     857/  2.247 : 303 322 000                  JMP     ERROR
     858/  2.252 :                      
     859/  2.252 :                      ;       TPXIT - CHECK FOR USER FORCED EDIT.
     860/  2.252 :                      ;
     861/  2.252 :                      ;       TPXIT CHECKS FOR AN `*` KEYPAD ENTRY. IF SO, TAKE
     862/  2.252 :                      ;       THE TAPE DRIVER ABNORMAL EXIT.
     863/  2.252 :                      ;
     864/  2.252 :                      ;       ENTRY   NONE
     865/  2.252 :                      ;       EXIT    TO *RET* IF NOT '*'
     866/  2.252 :                      ;               (A) = PORT STATUS
     867/  2.252 :                      ;               TO (TPERRX) IF '*' DOWN
     868/  2.252 :                      ;       USES    A,F
     869/  2.252 :                      
     870/  2.252 : 333 360              TPXIT   IN      IP.PAD
     871/  2.254 : 376 157                      CPI     01101111B       ; *
     872/  2.256 : 333 371                      IN      IP.TPC          ; READ TAPE STATUS
     873/  2.260 : 300                          RNZ                     ; NOT '*', RETURN WITH STATUS
     874/  2.261 : 052 031 040                  LHLD    TPERRX
     875/  2.264 : 351                          PCHL                    ; ENTER (TPERRX)
     876/  2.265 :                      
     877/  2.265 :                      ;       SRS - SCAN RECORD START
     878/  2.265 :                      ;
     879/  2.265 :                      ;       SRS READS BYTES UNTIL IT RECOGNIZES THE START OF A RECORD.
 AS V1.42 Beta [Bld 269] - Source File pam8.asm - Page 17 - 2024-05-01 01:09:38 PM


     880/  2.265 :                      ;
     881/  2.265 :                      ;       THIS REQUIRES
     882/  2.265 :                      ;       AT LEAST 10 SYNC CHARACTERS
     883/  2.265 :                      ;       1 STX CHARACTER
     884/  2.265 :                      ;
     885/  2.265 :                      ;       THE CRC-16 IS THEN INITIALIZED.
     886/  2.265 :                      ;
     887/  2.265 :                      ;       ENTRY   NONE
     888/  2.265 :                      ;       EXIT    TAPE POSITIONED (AND MOVING), CRCSUM=0
     889/  2.265 :                      ;               (DE) = HEADER BYTES
     890/  2.265 :                      ;               (HL) = RECORD COUNT
     891/  2.265 :                      ;       USES    A,F,D,E,H,L
     892/  2.265 :                      
     893/  2.265 :                      SRS
     894/  2.265 : 026 000              SRS1    MVI     D,0
     895/  2.267 : 142                          MOV     H,D
     896/  2.270 : 152                          MOV     L,D             ; (HL) = 0
     897/  2.271 : 315 331 002          SRS2    CALL    RNB             ; READ NEXT BYTE
     898/  2.274 : 024                          INR     D
     899/  2.275 : 376 026                      CPI     A.SYN
     900/  2.277 : 312 271 002                  JZ      SRS2            ; HAVE SYN
     901/  2.302 : 376 002                      CPI     A.STX
     902/  2.304 : 302 265 002                  JNZ     SRS1            ; NOT STX - START OVER
     903/  2.307 :                      
     904/  2.307 : 076 012                      MVI     A,10
     905/  2.311 : 272                          CMP     D               ; SEE IF ENOUGH SYNC CHARACTERS
     906/  2.312 : 322 265 002                  JNC     SRS1            ; NOT ENOUGH
     907/  2.315 : 042 027 040                  SHLD    CRCSUM          ; CLEAR CRC-16
     908/  2.320 : 315 325 002                  CALL    RNP             ; READ LEADER
     909/  2.323 : 124                          MOV     D,H
     910/  2.324 : 137                          MOV     E,A
     911/  2.325 :                      ;       JMP     RNP             ; READ COUNT
     912/  2.325 :                      
     913/  2.325 :                      ;       RNP - READ NEXT PAIR.
     914/  2.325 :                      ;
     915/  2.325 :                      ;       RNP READS THE NEXT TWO BYTES FROM THE INPUT DEVICE.
     916/  2.325 :                      ;
     917/  2.325 :                      ;       ENTRY   NONE
     918/  2.325 :                      ;       EXIT    (H,A) = BYTE PAIR
     919/  2.325 :                      ;       USES    A,F,H
     920/  2.325 :                      
     921/  2.325 : 315 331 002          RNP     CALL    RNB             ; READ NEXT BYTE
     922/  2.330 : 147                          MOV     H,A
     923/  2.331 :                      ;       JMP     RNB             ; READ NEXT BYTE
     924/  2.331 :                      
     925/  2.331 :                      ;       RNB - READ NEXT BYTE
     926/  2.331 :                      ;
     927/  2.331 :                      ;       RNB READS THE NEXT SINGLE BYTE FROM THE INPUT DEVICE.
     928/  2.331 :                      ;       THE CHECKSUM IS TAKEN FOR THE CHARACTER.
     929/  2.331 :                      ;
     930/  2.331 :                      ;       ENTRY   NONE
     931/  2.331 :                      ;       EXIT    (A) = CHARACTER
     932/  2.331 :                      ;       USES    A,F
     933/  2.331 :                      
     934/  2.331 : 076 064              RNB     MVI     A,UCI.RO+UCI.ER+UCI.RE ; TURN ON READER FOR NEXT BYTE
     935/  2.333 : 323 371                      OUT     OP.TPC
     936/  2.335 : 315 252 002          RNB1    CALL    TPXIT           ; CHECK FOR *, READ STATUS
     937/  2.340 : 346 002                      ANI     USR.RXR
     938/  2.342 : 312 335 002                  JZ      RNB1            ; IF NOT READY
     939/  2.345 : 333 370                      IN      IP.TPD          ; INPUT DATA
 AS V1.42 Beta [Bld 269] - Source File pam8.asm - Page 18 - 2024-05-01 01:09:38 PM


     940/  2.347 :                      ;       JMP     CRC             ; CHECKSUM
     941/  2.347 :                      
     942/  2.347 :                      ;       CRC - COMPUTE CRC-16
     943/  2.347 :                      ;
     944/  2.347 :                      ;       CRC COMPUTES A CRC-16 CHECKSUM FOR THE POLYNOMIAL
     945/  2.347 :                      ;
     946/  2.347 :                      ;       (X + 1) * (X^15 + X + 1)
     947/  2.347 :                      ;
     948/  2.347 :                      ;       SINCE THE CHECKSUM GENERATED IS A DIVISION REMAINDER,
     949/  2.347 :                      ;       A CHECKSUMED DATA SEQUENCE CAN BE VERIFIED BY RUNNING
     950/  2.347 :                      ;       THE DATA THROUGH CRC, AND THEN RUNNING THE PREVIOUSLY OBTAINED
     951/  2.347 :                      ;       CHECKSUM THROUGH CRC. THE RESULTANT CHECKSUM SHOULD BE 0.
     952/  2.347 :                      ;
     953/  2.347 :                      ;       ENTRY   (CRCSUM) = CURRENT CHECKSUM
     954/  2.347 :                      ;               (A) = BYTE
     955/  2.347 :                      ;       EXIT    (CRCSUM) UPDATED
     956/  2.347 :                      ;               (A) UNCHANGED
     957/  2.347 :                      ;       USES    F
     958/  2.347 :                      
     959/  2.347 : 305                  CRC     PUSH    B               ; SAVE (BC)
     960/  2.350 : 006 010                      MVI     B,8             ; (B) = BIT COUNT
     961/  2.352 : 345                          PUSH    H
     962/  2.353 : 052 027 040                  LHLD    CRCSUM
     963/  2.356 : 007                  CRC1    RLC
     964/  2.357 : 117                          MOV     C,A             ; (C) = BIT
     965/  2.360 : 175                          MOV     A,L
     966/  2.361 : 207                          ADD     A
     967/  2.362 : 157                          MOV     L,A
     968/  2.363 : 174                          MOV     A,H
     969/  2.364 : 027                          RAL
     970/  2.365 : 147                          MOV     H,A
     971/  2.366 : 027                          RAL
     972/  2.367 : 251                          XRA     C
     973/  2.370 : 017                          RRC
     974/  2.371 : 322 004 003                  JNC     CRC2            ; IF NOT TO XOR
     975/  2.374 : 174                          MOV     A,H
     976/  2.375 : 356 200                      XRI     200Q
     977/  2.377 : 147                          MOV     H,A
     978/  3.000 : 175                          MOV A,L
     979/  3.001 : 356 005                      XRI     5Q
     980/  3.003 : 157                          MOV     L,A
     981/  3.004 : 171                  CRC2    MOV     A,C
     982/  3.005 : 005                          DCR     B
     983/  3.006 : 302 356 002                  JNZ     CRC1            ; IF MORE TO GO
     984/  3.011 : 042 027 040                  SHLD    CRCSUM
     985/  3.014 : 341                          POP     H               ; RESTORE (HL)
     986/  3.015 : 301                          POP     B               ; RESTORE (BC)
     987/  3.016 : 311                          RET                     ; EXIT
     988/  3.017 :                      
     989/  3.017 :                      ;       WNP - WRITE NEXT PAIR
     990/  3.017 :                      ;
     991/  3.017 :                      ;       WNP WRITE THE NEXT TWO BYTES TO THE CASSETTE DRIVE.
     992/  3.017 :                      ;
     993/  3.017 :                      ;       ENTRY   (H,L) = BYTES
     994/  3.017 :                      ;       EXIT    WRITTEN.
     995/  3.017 :                      ;       USES    A,F
     996/  3.017 :                      
     997/  3.017 : 174                  WNP     MOV     A,H
     998/  3.020 : 315 024 003                  CALL    WNB
     999/  3.023 : 175                          MOV     A,L
 AS V1.42 Beta [Bld 269] - Source File pam8.asm - Page 19 - 2024-05-01 01:09:38 PM


    1000/  3.024 :                      ;       JMP     WNB             ; WRITE NEXT BYTE
    1001/  3.024 :                      
    1002/  3.024 :                      ;       WNB - WRITE NEXT BYTE
    1003/  3.024 :                      ;
    1004/  3.024 :                      ;       WNB WRITE THE NEXT BYTE TO THE CASSETTE TAPE.
    1005/  3.024 :                      ;
    1006/  3.024 :                      ;       ENTRY   (A) = BYTE
    1007/  3.024 :                      ;       EXIT    NONE.
    1008/  3.024 :                      ;       USES    F
    1009/  3.024 :                      
    1010/  3.024 : 365                  WNB     PUSH    PSW
    1011/  3.025 : 315 252 002          WNB1    CALL    TPXIT           ; CHECK FOR #, READ STATUS
    1012/  3.030 : 346 001                      ANI     USR.TXR
    1013/  3.032 : 312 025 003                  JZ      WNB1            ; IF MORE TO GO
    1014/  3.035 : 076 021                      MVI     A,UCI.ER+UCI.TE ; ENABLE TRANSMITTER
    1015/  3.037 : 323 371                      OUT     OP.TPC          ; TURN ON TAPE
    1016/  3.041 : 361                          POP     PSW
    1017/  3.042 : 323 370                      OUT     OP.TPD          ; OUTPUT DATA
    1018/  3.044 : 303 347 002                  JMP     CRC             ; COMPUTE CRC
    1019/  3.047 :                      
    1020/  3.047 :                      ;       LRA - LOCATE REGISTER ADDRESS
    1021/  3.047 :                      ;
    1022/  3.047 :                      ;       ENTRY   NONE.
    1023/  3.047 :                      ;       EXIT    (A) = REGISTER INDEX
    1024/  3.047 :                      ;               (H,L) = STORAGE ADDRESS
    1025/  3.047 :                      ;               (D,E) = (0,A)
    1026/  3.047 :                      ;       USES    A,D,E,H,L,F
    1027/  3.047 :                      
    1028/  3.047 : 072 005 040          LRA     LDA     REGI
    1029/  3.052 : 137                  LRA.    MOV     E,A
    1030/  3.053 : 026 000                      MVI     D,0
    1031/  3.055 : 052 035 040                  LHLD    REGPTR
    1032/  3.060 : 031                          DAD     D               ; (DE) = (REGPTR)+(REGI)
    1033/  3.061 : 311                          RET
    1034/  3.062 :                      
    1035/  3.062 :                      ;       IOA - INPUT OCTAL NUMBER
    1036/  3.062 :                      ;
    1037/  3.062 :                      ;       ENTRY   (H,L) = ADDRESS OF RECEPTION DOUBLE BYTE.
    1038/  3.062 :                      ;       EXIT    TO *RET* IF ERROK
    1039/  3.062 :                      ;               TO *RET*+1 IF OK, VALUE IN MEMORY.
    1040/  3.062 :                      ;       USES    A,B,E,H,C,F
    1041/  3.062 :                      
    1042/  3.062 : 315 066 003          IOA     CALL    IOB             ; INPUT BYTE
    1043/  3.065 : 053                          DCX     H
    1044/  3.066 :                      
    1045/  3.066 :                      ;       IOB - INPUT OCTAL BYTE.
    1046/  3.066 :                      ;
    1047/  3.066 :                      ;       READ ONE OCTAL BYTE FROM THE KEYSET.
    1048/  3.066 :                      ;
    1049/  3.066 :                      ;       ENTRY   (H,L) = ADDRESS OF BYTE TO HOLD VALUE
    1050/  3.066 :                      ;               'C' SET IF FIRST DIGIT IN (A)
    1051/  3.066 :                      ;       EXIT    TO *RET* IF ALL OK
    1052/  3.066 :                      ;               TO *ERROR* IF ERROR
    1053/  3.066 :                      ;       USES    A,D,E,H,L,F
    1054/  3.066 :                      
    1055/  3.066 : 026 003              IOB     MVI     D,3             ; (D) = DIGIT COUNT
    1056/  3.070 : 324 260 003          IOB1    CNC     RCK             ; READ CONSOLE KEYSET
    1057/  3.073 :                      
    1058/  3.073 : 376 010                      CPI     8
    1059/  3.075 : 322 322 000                  JNC     ERROR           ; IF ILLEGAL DIGIT
 AS V1.42 Beta [Bld 269] - Source File pam8.asm - Page 20 - 2024-05-01 01:09:38 PM


    1060/  3.100 :                      
    1061/  3.100 : 137                          MOV     E,A             ; (E) = VALUE
    1062/  3.101 : 176                          MOV     A,M
    1063/  3.102 : 007                          RLC                     ; SHIFT 3
    1064/  3.103 : 007                          RLC
    1065/  3.104 : 007                          RLC
    1066/  3.105 : 346 370                      ANI     370Q
    1067/  3.107 : 263                          ORA     E
    1068/  3.110 : 167                          MOV     M,A             ; REPLACE
    1069/  3.111 : 025                          DCR     D
    1070/  3.112 : 302 070 003                  JNZ     IOB1            ; IF NOT DONE
    1071/  3.115 : 076 017                      MVI     A,30/2          ; BEEP FOR 30 MS
    1072/  3.117 : 303 140 002                  JMP     HORN
    1073/  3.122 :                      
    1074/  3.122 :                      ;       DOD - DECODE FOR OCTAL DISPLAY
    1075/  3.122 :                      ;
    1076/  3.122 :                      ;       ENTRY   (H,L) = ADDRESS OF LED REFRESH AREA
    1077/  3.122 :                      ;               (B) = *OR* PATTERN TO FORCE ON BARS OR PERIODS
    1078/  3.122 :                      ;               (A) = OCTAL VALUE
    1079/  3.122 :                      ;       EXIT    (H,L) = HEX DIGIT ADDRESS
    1080/  3.122 :                      ;       USES    A,B,C,D,H,L
    1081/  3.122 :                      
    1082/  3.122 : 325                  DOD     PUSH    D
    1083/  3.123 : 026 003                      MVI     D,DODA/256
    1084/  3.125 : 016 003                      MVI     C,3
    1085/  3.127 : 027                  DOD1    RAL                     ; LEFT 3 PLACES
    1086/  3.130 : 027                          RAL
    1087/  3.131 : 027                          RAL
    1088/  3.132 : 365                          PUSH    PSW             ; SAVE FOR NEXT DIGIT
    1089/  3.133 : 346 007                      ANI     7
    1090/  3.135 : 306 356                      ADI     DODA#256
    1091/  3.137 : 137                          MOV     E,A             ; (D) = INDEX
    1092/  3.140 : 032                          LDAX    D               ; (A) = PATTERN
    1093/  3.141 : 250                          XRA     B
    1094/  3.142 : 346 177                      ANI     177Q
    1095/  3.144 : 250                          XRA     B
    1096/  3.145 : 167                          MOV     M,A             ; SET IN MEMORY
    1097/  3.146 : 043                          INX     H
    1098/  3.147 : 170                          MOV     A,B
    1099/  3.150 : 007                          RLC
    1100/  3.151 : 107                          MOV     B,A
    1101/  3.152 : 361                          POP     PSW             ; (A) = VALUE
    1102/  3.153 : 015                          DCR     C
    1103/  3.154 : 302 127 003                  JNZ     DOD1            ; IF MORE TO GO
    1104/  3.157 : 321                          POP     D
    1105/  3.160 : 311                          RET                     ; RETURN
    1106/  3.161 :                      
    1107/  3.161 :                      ;       UFD - UPDATE FRONT PANEL DISPLAYS.
    1108/  3.161 :                      ;
    1109/  3.161 :                      ;       UFD IS CALLED BY THE CLOCK INTERRUPT PROCESSOR WHEN IT IS
    1110/  3.161 :                      ;       TIME TO UPDATE THE DISPLAY CONTENTS. CURRENTLY, THIS IS DONE
    1111/  3.161 :                      ;       EVERY 32 INTERRUPTS, OR ABOUT 32 TIMES A SECOND.
    1112/  3.161 :                      ;
    1113/  3.161 :                      ;       ENTRY   (H,L) = ADDRESS OF REFCNT
    1114/  3.161 :                      ;       EXIT    NONE
    1115/  3.161 :                      ;       USES    ALL
    1116/  3.161 :                      
    1117/  3.161 : 076 002              UFD     MVI     A,UO.DDU
    1118/  3.163 : 240                          ANA     B
    1119/  3.164 : 300                          RNZ                     ; IF NOT TO HANDLE UPDATE
 AS V1.42 Beta [Bld 269] - Source File pam8.asm - Page 21 - 2024-05-01 01:09:38 PM


    1120/  3.165 :                      
    1121/  3.165 : 056 006                      MVI     L,DSPROT#256
    1122/  3.167 : 176                          MOV     A,M
    1123/  3.170 : 007                          RLC
    1124/  3.171 : 167                          MOV     M,A             ; ROTATE PATTERN
    1125/  3.172 : 107                          MOV     B,A
    1126/  3.173 : 043                          INX     H
    1127/  3.174 :                      ;       ERRNZ   DSPMOD-DSPROT-1
    1128/  3.174 : 176                          MOV     A,M             ; (A) = DSPMOD
    1129/  3.175 : 346 002                      ANI     2
    1130/  3.177 : 052 024 040                  LHLD    ABUSS
    1131/  3.202 : 312 227 003                  JZ      UFD1            ; IF MEMORY
    1132/  3.205 :                      
    1133/  3.205 :                      ;       AM DISPLAYING REGISTERS
    1134/  3.205 :                      
    1135/  3.205 : 315 047 003                  CALL    LRA             ; LOCATE REGISTER ADDRESS
    1136/  3.210 : 345                          PUSH    H
    1137/  3.211 : 041 342 003                  LXI     H,DSPA
    1138/  3.214 : 031                          DAD     D               ; (H,L) = ADDRESS OF REG NAME PATTERNS
    1139/  3.215 : 176                          MOV     A,M
    1140/  3.216 : 043                          INX     H
    1141/  3.217 : 146                          MOV     H,M
    1142/  3.220 : 157                          MOV     L,A             ; (H,L) = REG NAME PATTERN
    1143/  3.221 : 343                          XTHL
    1144/  3.222 : 264                          ORA     H               ; CLEAR 'Z'
    1145/  3.223 : 176                          MOV     A,M
    1146/  3.224 : 043                          INX     H
    1147/  3.225 : 146                          MOV     H,M
    1148/  3.226 : 157                          MOV     L,A             ; (HL) = ADDRESS OF REGISTER PAIR CONTENTS
    1149/  3.227 :                      
    1150/  3.227 :                      ;       SETUP DISPLAY
    1151/  3.227 :                      
    1152/  3.227 : 365                  UFD1    PUSH    PSW
    1153/  3.230 : 353                          XCHG
    1154/  3.231 : 041 013 040                  LXI     H,ALEDS
    1155/  3.234 : 172                          MOV     A,D
    1156/  3.235 : 315 122 003                  CALL    DOD             ; FORMAT ABANK HIGH HALF
    1157/  3.240 : 173                          MOV     A,E
    1158/  3.241 : 315 122 003                  CALL    DOD             ; FORMAT ABANK LOW HALF
    1159/  3.244 : 361                          POP     PSW
    1160/  3.245 : 032                          LDAX    D
    1161/  3.246 : 312 122 003                  JZ      DOD             ; IF MEMORY, DECODE BYTE VALUE
    1162/  3.251 :                      
    1163/  3.251 :                      ;       IS REGISTER, SET REGISTER NAME,
    1164/  3.251 :                      
    1165/  3.251 : 066 377                      MVI     M,377Q          ; CLEAR DIGIT
    1166/  3.253 : 341                          POP     H
    1167/  3.254 : 042 022 040                  SHLD    DLEDS+1
    1168/  3.257 : 311                          RET
    1169/  3.260 :                      
    1170/  3.260 :                      ;       RCK - READ CONSOLE KEYPAD.
    1171/  3.260 :                      ;
    1172/  3.260 :                      ;       RCK IS CALLED TO READ A KEYSTROKE FROM THE CONSOLE KEYPAD.
    1173/  3.260 :                      ;       WHENEVER A KEY IS ACCEPTED.
    1174/  3.260 :                      ;       RCK PERFORMS DEBOUNCING, AND AUTO-REPEAT. A *BIP* IS SOUNDED
    1175/  3.260 :                      ;       WHEN A VALUE IS ACCEPTED.
    1176/  3.260 :                      ;
    1177/  3.260 :                      ;       KEY PAD VALUES:
    1178/  3.260 :                      ;
    1179/  3.260 :                      ;       1111 1110  -  0
 AS V1.42 Beta [Bld 269] - Source File pam8.asm - Page 22 - 2024-05-01 01:09:38 PM


    1180/  3.260 :                      ;       1111 1100  -  1
    1181/  3.260 :                      ;       1111 1010  -  2
    1182/  3.260 :                      ;       1111 1000  -  3
    1183/  3.260 :                      ;       1111 0110  -  4
    1184/  3.260 :                      ;       1111 0100  -  5
    1185/  3.260 :                      ;       1111 0010  -  6
    1186/  3.260 :                      ;       1111 0000  -  7
    1187/  3.260 :                      ;       1110 1111  -  8
    1188/  3.260 :                      ;       1100 1111  -  9
    1189/  3.260 :                      ;       1010 1111  -  +
    1190/  3.260 :                      ;       1000 1111  -  -
    1191/  3.260 :                      ;       0110 1111  -  *
    1192/  3.260 :                      ;       0100 1111  -  /
    1193/  3.260 :                      ;       0010 1111  0  #
    1194/  3.260 :                      ;       0000 1111  -  .
    1195/  3.260 :                      ;
    1196/  3.260 :                      ;
    1197/  3.260 :                      ;       ENTRY   NONE
    1198/  3.260 :                      ;       EXIT    TO CALLER WHEN A KEY IS HIT
    1199/  3.260 :                      ;               (A) = 0 - '0'
    1200/  3.260 :                      ;                     1 - '1'
    1201/  3.260 :                      ;                     2 - '2'
    1202/  3.260 :                      ;                     3 - '3'
    1203/  3.260 :                      ;                     4 - '4'
    1204/  3.260 :                      ;                     5 - '5'
    1205/  3.260 :                      ;                     6 - '6'
    1206/  3.260 :                      ;                     7 - '7'
    1207/  3.260 :                      ;                     8 - '8'
    1208/  3.260 :                      ;                     9 - '9'
    1209/  3.260 :                      ;                    10 - '+ '
    1210/  3.260 :                      ;                    11 - '-'
    1211/  3.260 :                      ;                    12 - '*'
    1212/  3.260 :                      ;                    13 - '/'
    1213/  3.260 :                      ;                    14 - '#'
    1214/  3.260 :                      ;                    15 - '.'
    1215/  3.260 :                      ;       USES    A,F
    1216/  3.260 :                      
    1217/  3.260 : 345                  RCK     PUSH    H
    1218/  3.261 : 305                          PUSH    B
    1219/  3.262 : 016 024                      MVI     C,400/20        ; WAIT 400 MS
    1220/  3.264 : 041 026 040                  LXI     H,RCKA
    1221/  3.267 :                      
    1222/  3.267 : 333 360              RCK1    IN      IP.PAD          ; INPUT PAD VALUE
    1223/  3.271 : 107                          MOV     B,A             ; (B) = VALUE
    1224/  3.272 : 076 012                      MVI     A,20/2          ; WAIT 20 MS
    1225/  3.274 : 315 053 000                  CALL    DLY
    1226/  3.277 : 170                          MOV     A,B
    1227/  3.300 : 276                          CMP     M
    1228/  3.301 : 302 310 003                  JNZ     RCK2            ; HAVE A CHANGE
    1229/  3.304 : 015                          DCR     C
    1230/  3.305 : 302 267 003                  JNZ     RCK1            ; WAIT N CYCLE
    1231/  3.310 :                      
    1232/  3.310 :                      ;       HAVE KEY VALUE
    1233/  3.310 :                      
    1234/  3.310 : 167                  RCK2    MOV     M,A             ; UPDATE RCKA
    1235/  3.311 : 356 376                      XRI     376Q            ; INVERT ALL BUT GROUP 0 FLAG
    1236/  3.313 : 017                          RRC
    1237/  3.314 : 322 326 003                  JNC     RCK3            ; HIT BANK 0
    1238/  3.317 : 017                          RRC
    1239/  3.320 : 017                          RRC
 AS V1.42 Beta [Bld 269] - Source File pam8.asm - Page 23 - 2024-05-01 01:09:38 PM


    1240/  3.321 : 017                          RRC
    1241/  3.322 : 017                          RRC
    1242/  3.323 : 322 267 003                  JNC     RCK1            ; NO HIT AT ALL
    1243/  3.326 : 107                  RCK3    MOV     B,A             ; (B) = CODE
    1244/  3.327 : 076 002                      MVI     A,4/2
    1245/  3.331 : 315 140 002                  CALL    HORN            ; MAKE BIP
    1246/  3.334 : 170                          MOV     A,B
    1247/  3.335 : 346 017                      ANI     17Q
    1248/  3.337 : 301                          POP     B
    1249/  3.340 : 341                          POP     H
    1250/  3.341 : 311                          RET                     ; RETURN
    1251/  3.342 :                      
    1252/  3.342 :                      ;       DISPLAY SEGMENT CODING:
    1253/  3.342 :                      ;
    1254/  3.342 :                      ;       BYTE = 76 5453 210
    1255/  3.342 :                      ;
    1256/  3.342 :                      ;          1
    1257/  3.342 :                      ;         ---
    1258/  3.342 :                      ;       6|   |2
    1259/  3.342 :                      ;        | 0 |
    1260/  3.342 :                      ;         ---
    1261/  3.342 :                      ;       5|   |3
    1262/  3.342 :                      ;        |   |
    1263/  3.342 :                      ;         --- o7
    1264/  3.342 :                      ;          4
    1265/  3.342 :                      
    1266/  3.342 :                      ;       REGISTER INDEX TO 7-SEGMENT PATTERN
    1267/  3.342 :                      
    1268/  3.342 :                      DSPA
    1269/  3.342 : 244 230                      DW      1001100010100100B ; SP
    1270/  3.344 : 220 234                      DW      1001110010010000B ; AF
    1271/  3.346 : 206 215                      DW      1000110110000110B ; BC
    1272/  3.350 : 302 214                      DW      1000110011000010B ; DE
    1273/  3.352 : 222 217                      DW      1000111110010010B ; HL
    1274/  3.354 : 230 316                      DW      1100111010011000B ; PC
    1275/  3.356 :                      
    1276/  3.356 :                      ;       OCTAL TO 7-SEGMENT PATTERN
    1277/  3.356 :                      
    1278/  3.356 :                      DODA
    1279/  3.356 : 001                          DB      00000001B       ; 0
    1280/  3.357 : 163                          DB      01110011B       ; 1
    1281/  3.360 : 110                          DB      01001000B       ; 2
    1282/  3.361 : 140                          DB      01100000B       ; 3
    1283/  3.362 : 062                          DB      00110010B       ; 4
    1284/  3.363 : 044                          DB      00100100B       ; 5
    1285/  3.364 : 004                          DB      00000100B       ; 6
    1286/  3.365 : 161                          DB      01110001B       ; 7
    1287/  3.366 : 000                          DB      00000000B       ; 8
    1288/  3.367 : 040                          DB      00100000B       ; 9
    1289/  3.370 :                      
    1290/  3.370 : 000                          DB      0               ; One unused byte
    1291/  3.371 :                      
    1292/  3.371 :                      ;       I/O ROUTINES TO BE COPIED INTO AND USED IN RAM.
    1293/  3.371 :                      ;
    1294/  3.371 :                      ;       MUST CONTINUE TO 3777A FOR PROPER COPY.
    1295/  3.371 :                      ;       THE TABLE MUST ALSO BE BACKWARDS TO THE FINAL RAM.
    1296/  3.371 :                      
    1297/  3.371 :                              ORG     2000Q-7
    1298/  3.371 :                      
    1299/  3.371 : 001                  PRSROM  DB      1               ; REFIND
 AS V1.42 Beta [Bld 269] - Source File pam8.asm - Page 24 - 2024-05-01 01:09:38 PM


    1300/  3.372 : 000                          DB      0               ; CTLFLG
    1301/  3.373 : 000                          DB      0               ; MFLAG
    1302/  3.374 : 000                          DB      0               ; DSPMOD
    1303/  3.375 : 000                          DB      0               ; DSPROT
    1304/  3.376 : 012                          DB      10              ; REGI
    1305/  3.377 : 311                          DB      MI.RET
    1306/  4.000 :                      
    1307/  4.000 : (MACRO)                      ERRNZ   $-2000Q
    1307/  4.000 : =>FALSE                      IF ($-2000Q) != 0
    1307/  4.000 :                                ERROR Expression is not zero
    1307/  4.000 : [5.027]                      ENDIF
    1308/  4.000 :                      
    1309/  4.000 :                      ;       THE FOLLOWING ARE CONTROL CELLS AND FLAGS USED BY THE KEYPAD
    1310/  4.000 :                      ;       MONITOR.
    1311/  4.000 :                      
    1312/ 40.000 :                              ORG     20000Q          ; 8192
    1313/ 40.000 :                      START   DS      2               ; DUMP STARTING ADDRESS
    1314/ 40.002 :                      IOWRK   DS      2               ; IN OR OUT INSTRUCTION
    1315/ 40.004 :                      PRSRAM                          ; FOLLOWING CELLS INITIALIZED FROM ROM
    1316/ 40.004 :                              DS      1               ; RET
    1317/ 40.005 :                      
    1318/ 40.005 :                      REGI    DS      1               ; INDEX OF REGISTER UNDER DISPLAY
    1319/ 40.006 :                      DSPROT  DS      1               ; PERIOD FLAG BYTE
    1320/ 40.007 :                      DSPMOD  DS      1               ; DISPLAY MODE
    1321/ 40.010 :                      
    1322/ 40.010 :                      MFLAG   DS      1               ; USER FLAG OPTIONS
    1323/ 40.011 :                                                      ; SEE *UI.XXX* BITS DESCRIBED AT FRONT
    1324/ 40.011 :                      
    1325/ 40.011 :                      CTLFLG  DS      1               ; FRONT PANEL CONTROL BITS
    1326/ 40.012 :                      REFIND  DS      1               ; REFRESH INDEX (0 TO 7)
    1327/ 40.013 : =7O                  PRSL    EQU     7               ; END OF AREA INITIALIZED FROM ROM
    1328/ 40.013 :                      
    1329/ 40.013 :                      FPLEDS                          ; FRONT PANEL LED PATTERNS
    1330/ 40.013 :                      ALEDS   DS      1               ; ADDR 0
    1331/ 40.014 :                              DS      1               ; ADDR 1
    1332/ 40.015 :                              DS      1               ; ADDR 2
    1333/ 40.016 :                      
    1334/ 40.016 :                              DS      1               ; ADDR 3
    1335/ 40.017 :                              DS      1               ; ADDR 4
    1336/ 40.020 :                              DS      1               ; ADDR 5
    1337/ 40.021 :                      
    1338/ 40.021 :                      DLEDS   DS      1               ; DATA 0
    1339/ 40.022 :                              DS      1               ; DATA 1
    1340/ 40.023 :                              DS      1               ; DATA 2
    1341/ 40.024 :                      
    1342/ 40.024 :                      ABUSS   DS      2               ; ADDRESS BUS
    1343/ 40.026 :                      RCKA    DS      1               ; RCK SAVE AREA
    1344/ 40.027 :                      CRCSUM  DS      2               ; CRC-16 CHECKSUM
    1345/ 40.031 :                      TPERRX  DS      2               ; TAPE ERROR EXIT ADDRESS
    1346/ 40.033 :                      TICCNT  DS      2               ; CLOCK TIC COUNTER
    1347/ 40.035 :                      
    1348/ 40.035 :                      REGPTR  DS      2               ; REGISTER CONTENTS POINTER
    1349/ 40.037 :                      
    1350/ 40.037 :                      UIVEC                           ; USER INTERRUPT VECTOR
    1351/ 40.037 :                              DS      3               ; JUMP TO CLOCK PROCESSOR
    1352/ 40.042 :                              DS      3               ; JUMP TO SINGLE STEP PROCESSOR
    1353/ 40.045 :                              DS      3               ; JUMP TO I/O 3
    1354/ 40.050 :                              DS      3               ; JUMP TO I/O 4
    1355/ 40.053 :                              DS      3               ; JUMP TO I/O 5
    1356/ 40.056 :                              DS      3               ; JUMP TO I/O 6
 AS V1.42 Beta [Bld 269] - Source File pam8.asm - Page 25 - 2024-05-01 01:09:38 PM


    1357/ 40.061 :                              DS      3               ; JUMP TO I/O 7
    1358/ 40.064 :                      
    1359/ 40.064 :                              END
 AS V1.42 Beta [Bld 269] - Source File pam8.asm - Page 26 - 2024-05-01 01:09:38 PM


  Symbol Table (* = unused):
  --------------------------

 A.STX :                          2 - |  A.SYN :                         26 - |
 ABORT :                      1.147 C |  ABUSS :                     40.024 C |
 ALARM :                      2.136 C |  ALEDS :                     40.013 C |
*ARCHITECTURE :                                      "x86_64-unknown-linux" - |
*BLKSIZ :                     2.000 - | *CASESENSITIVE :                  0 - |
 CB.CLI :                       100 - |  CB.MTL :                        40 - |
 CB.SPK :                       200 - |  CB.SSI :                        20 - |
 CLK2 :                         234 C |  CLK3 :                         237 C |
 CLK4 :                         313 C |  CLOCK :                        201 C |
*CONSTPI :        3.141592653589793 - |  CRC :                        2.347 C |
 CRC1 :                       2.356 C |  CRC2 :                       3.004 C |
 CRCSUM :                    40.027 C |  CTC :                        2.172 C |
 CTLFLG :                    40.011 C |  CUI1 :                         165 C |
*DATE :                "2024-05-01" - |  DLEDS :                     40.021 C |
 DLY :                           53 C | *DM.MR :                          0 - |
*DM.MW :                          1 - | *DM.RR :                          2 - |
*DM.RW :                          3 - |  DOD :                        3.122 C |
 DOD1 :                       3.127 C |  DODA :                       3.356 C |
 DSPA :                       3.342 C |  DSPMOD :                    40.007 C |
 DSPROT :                    40.006 C | *DUMP :                       2.002 C |
 ERROR :                        322 C | *FALSE :                          0 - |
*FPLEDS :                    40.013 C |  GO :                         1.222 C |
 GO. :                           63 C | *HAS64 :                          1 - |
 HORN :                       2.140 C |  HRN0 :                       2.143 C |
 HRN2 :                       2.160 C |  IN :                         1.177 C |
 INIT :                          73 C | *INIT0 :                          0 C |
 INIT1 :                        107 C | *INIT2 :                        117 C |
*INT1 :                          10 - | *INT2 :                          20 - |
*INT3 :                          30 C | *INT4 :                          40 C |
*INT5 :                          50 C | *INT6 :                          60 C |
*INT7 :                          70 C |  INTXIT :                       172 C |
 IOA :                        3.062 C |  IOB :                        3.066 C |
 IOB1 :                       3.070 C |  IOWRK :                     40.002 C |
 IP.PAD :                       360 - |  IP.TPC :                       371 - |
 IP.TPD :                       370 - |  LAST :                       1.150 C |
*LISTON :                         1 - |  LOA0 :                       1.272 C |
 LOA1 :                       1.342 C | *LOAD :                       1.267 C |
 LRA :                        3.047 C |  LRA. :                       3.052 C |
*LST2 :                       1.154 C | *MACEXP :                         7 - |
 MEMM :                       1.165 C |  MFLAG :                     40.010 C |
 MI.ANI :                       346 - |  MI.HLT :                       166 - |
 MI.IN :                        333 - | *MI.LDA :                        72 - |
 MI.LXID :                       21 - |  MI.OUT :                       323 - |
 MI.RET :                       311 - | *MOMCPU :                   200.200 - |
*MOMCPUNAME :                "8080" - |  MTR :                          344 C |
 MTR1 :                         345 C |  MTR4 :                       1.005 C |
 MTR5 :                       1.051 C |  MTR6 :                       1.067 C |
 MTRA :                       1.035 C | *NESTMAX :                    1.000 - |
 NEXT :                       1.132 C |  OP.CTL :                       360 - |
 OP.DIG :                       360 - |  OP.SEG :                       361 - |
 OP.TPC :                       371 - |  OP.TPD :                       370 - |
 OUT :                        1.202 C |  PRSL :                           7 - |
 PRSRAM :                    40.004 C |  PRSROM :                     3.371 C |
 RCK :                        3.260 C |  RCK1 :                       3.267 C |
 RCK2 :                       3.310 C |  RCK3 :                       3.326 C |
 RCKA :                      40.026 C | *REFIND :                    40.012 C |
 REGI :                      40.005 C |  REGM :                       1.104 C |
 AS V1.42 Beta [Bld 269] - Source File pam8.asm - Page 27 - 2024-05-01 01:09:38 PM


 REGPTR :                    40.035 C | *RELAXED :                        0 - |
 RMEM :                       1.261 C |  RNB :                        2.331 C |
 RNB1 :                       2.335 C |  RNP :                        2.325 C |
*RT.BP :                          2 - | *RT.CT :                          3 - |
*RT.MI :                          1 - |  RW :                         1.126 C |
 SAE :                        1.063 C |  SAVALL :                       132 C |
 SINCR :                      4.000 - |  SRS :                        2.265 C |
 SRS1 :                       2.265 C |  SRS2 :                       2.271 C |
 SST1 :                       1.235 C |  SSTEP :                      1.225 C |
 START :                     40.000 C |  STPRTN :                     1.244 C |
 TER1 :                       2.220 C |  TER3 :                       2.215 C |
 TFT :                        2.133 C |  TICCNT :                    40.033 C |
*TIME :               "01:09:38 PM" - |  TPABT :                      2.244 C |
 TPERR :                      2.205 C |  TPERRX :                    40.031 C |
 TPXIT :                      2.252 C | *TRUE :                           1 - |
 UCI.ER :                        20 - | *UCI.IE :                         2 - |
*UCI.IR :                       100 - |  UCI.RE :                         4 - |
 UCI.RO :                        40 - |  UCI.TE :                         1 - |
 UFD :                        3.161 C |  UFD1 :                       3.227 C |
*UI.CLK :                         1 - |  UIVEC :                     40.037 C |
 UMI.16X :                        2 - |  UMI.1B :                       100 - |
*UMI.1X :                         1 - | *UMI.2B :                       300 - |
*UMI.64X :                        3 - | *UMI.HB :                       200 - |
*UMI.L5 :                         0 - | *UMI.L6 :                         4 - |
*UMI.L7 :                        10 - |  UMI.L8 :                        14 - |
*UMI.PA :                        20 - | *UMI.PE :                        40 - |
 UO.DDU :                         2 - |  UO.HLT :                       200 - |
 UO.NFR :                       100 - | *USR.FE :                        40 - |
*USR.OE :                        20 - | *USR.PE :                        10 - |
 USR.RXR :                        2 - | *USR.TXE :                        4 - |
 USR.TXR :                        1 - | *VERSION :                   24.057 - |
 WME1 :                       2.012 C |  WME2 :                       2.104 C |
 WMEM :                       1.374 C |  WNB :                        3.024 C |
 WNB1 :                       3.025 C |  WNP :                        3.017 C |
*Z80SYNTAX :                      0 - |

    182 symbols
     55 unused symbols

 AS V1.42 Beta [Bld 269] - Source File pam8.asm - Page 28 - 2024-05-01 01:09:38 PM


  Defined Macros:
  ---------------

ERRMI                                 | ERRNZ                                
ERRPL                                 | ERRZR                                

      4 macros

 AS V1.42 Beta [Bld 269] - Source File pam8.asm - Page 29 - 2024-05-01 01:09:38 PM


  Code Pages:
  ----------

STANDARD (0 changed characters)

1 code page

0.03 seconds assembly time

  5.152 lines source file
  5.164 lines incl. macro expansions
      2 passes
      0 errors
      0 warnings
