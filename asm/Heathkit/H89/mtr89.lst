 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 1 - 2024-04-22 06:03:31 PM


       1/      0 :                              INCLUDE macros.mac
(1)    1/      0 :                      ; Macros to emulate the Heathkit HDOS assembler.
(1)    2/      0 :                      
(1)    3/      0 :                      ; Code currently commented out as the assembler enforces that the
(1)    4/      0 :                      ; expression must be evaluatable in first pass.
(1)    5/      0 :                      
(1)    6/      0 :                      ERRPL   MACRO EXP
(1)    7/      0 :                      ;       IF (EXP) > 0
(1)    8/      0 :                      ;         ERROR Expression is positive
(1)    9/      0 :                      ;       ENDIF
(1)   10/      0 :                              ENDM
(1)   11/      0 :                      
(1)   12/      0 :                      ERRMI   MACRO EXP
(1)   13/      0 :                      ;       IF (EXP) < 0
(1)   14/      0 :                      ;         ERROR Expression is negative
(1)   15/      0 :                      ;       ENDIF
(1)   16/      0 :                              ENDM
(1)   17/      0 :                      
(1)   18/      0 :                      ERRNZ   MACRO EXP
(1)   19/      0 :                      ;       IF (EXP) != 0
(1)   20/      0 :                      ;         ERROR Expression is not zero
(1)   21/      0 :                      ;       ENDIF
(1)   22/      0 :                              ENDM
(1)   23/      0 :                      
(1)   24/      0 :                      ERRZR   MACRO EXP
(1)   25/      0 :                      ;       IF (EXP) == 0
(1)   26/      0 :                      ;         ERROR Expression is zero
(1)   27/      0 :                      ;       ENDIF
(1)   28/      0 :                              ENDM
(1)   29/      0 :                      
       2/      0 :                      
       3/      0 :                      ;       MTR88 - H89 MONITOR
       4/      0 :                      ;
       5/      0 :                      ;       MTR89 IS A MODIFICATION OF MTR88 BY REX CHEN IN MAY, 1980.
       6/      0 :                      ;       MTR89 IS IDENTICAL TO THE MTR88 IN THAT ALL ENTRY POINTS TO
       7/      0 :                      ;       THE CURRENT ROUTINES REMAIN UNCHANGED AND ALL ROUTINES
       8/      0 :                      ;       REMAIN UNALTERED WITH THE FOLLOWING EXCEPTIONS:
       9/      0 :                      ;
      10/      0 :                      ;         (1). ALL CODE WHICH SUPPORTS THE CASSETTE IS REMOVED.
      11/      0 :                      ;              THIS INCLUDES THE LOAD ('L') AND DUMP ('D') COMMANDS.
      12/      0 :                      ;              AS WELL AS ALL OF THE DEVICE DRIVERS.
      13/      0 :                      ;         (2). 'TYPE SPACES TO DETERMINE BAUD RATE' MESSAGE IS REMOVED.
      14/      0 :                      ;         (3). THE BOOTSTRAP FOR THE Z-47 IS INSTALLED.
      15/      0 :                      ;         (4). 15 SECONDS TIME OUT FOR Z-87, OR H-17 AND Z-47 IS INSERTED.
      16/      0 :                      ;         (5). <DELETE> KEY SERVES AS AN ABORT-BOOT KEY.
      17/      0 :                      ;         (6). ALLOWS BOOT FROM SELECTED DEVICE AND UNIT.
      18/      0 :                      ;
      19/      0 :                      ;
      20/      0 :                      ;       MTR88 IS AN ADAPTATION OF PAM/8 ORIGINALLY WRITTEN FOR THE
      21/      0 :                      ;       HEATH H8 COMPUTER BY J. G. LETWIN IN 1976 AND MODIFIED BY
      22/      0 :                      ;       R. N. BORCHARDT IN 1979 FOR USE IN THE HEATH H88/H89
      23/      0 :                      ;       COMPUTERS.
      24/      0 :                      ;
      25/      0 :                      ;       MTR88 PROVIDES COMPATIBILITY WITH PAM/8 SUCH THAT ALL ROUTINES
      26/      0 :                      ;       HAVE RETAINED PREVIOUSLY DESCRIBED ENTRY POINTS AND ENTRY AND
      27/      0 :                      ;       EXIT CONDITIONS. ROUTINES WHICH ARE NOT APPLICABLE SUCH AS
      28/      0 :                      ;       THOSE PERTAINING TO THE FRONT PANEL DISPLAY HAVE BEEN DELETED.
      29/      0 :                      ;
      30/      0 :                      ;
      31/      0 :                      ;       COPYRIGHT  05/1976, WINTEK CORPORATION.
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 2 - 2024-04-22 06:03:31 PM


      32/      0 :                      ;                           902 N. 9TH ST.
      33/      0 :                      ;                           LAFAYETTE, IND.
      34/      0 :                      ;
      35/      0 :                      ;       COPYRIGHT  01/1979, HEATH COMPANY
      36/      0 :                      ;                           BENTON HARBOR, MI.
      37/      0 :                      ;
      38/      0 :                      ;       COPYRIGHT  05/1980, ZENITH DATA SYSTEMS INC.
      39/      0 :                      ;                           ST. JOSEPH, MI.
      40/      0 :                      
      41/      0 : =0O                  RAM     EQU     0
      42/      0 :                      
      43/      0 : =>FALSE                      IF      RAM
      44/      0 : [43]                         ENDIF
      45/      0 :                      
      46/      0 :                      ;       MTR88 - H88/H89 MONITOR.
      47/      0 :                      ;
      48/      0 :                      ;       THIS PROGRAM RESIDES (IN ROM) IN THE LOW 2048 BYTES OF THE HEATH
      49/      0 :                      ;       H88/H89 COMPUTERS.
      50/      0 :                      
      51/      0 :                      ;       INTERRUPTS.
      52/      0 :                      ;
      53/      0 :                      ;       MTR88 IS THE PRIMARY PROCESSOR FOR ALL INTERRUPTS.
      54/      0 :                      ;       THEY ARE PROCESSED AS FOLLOWS:
      55/      0 :                      ;
      56/      0 :                      ;       RST     USE
      57/      0 :                      ;
      58/      0 :                      ;       0       MASTER CLEAR. (NEVER USED FOR I/O OR REST)
      59/      0 :                      ;
      60/      0 :                      ;       1       CLOCK INTERRUPT. NORMALLY TAKEN BY MTR88,
      61/      0 :                      ;               SETTING BIT *UO.CLK* IN BYTE *MFLAG* ALLOWS
      62/      0 :                      ;               USER PROCESSING (VIA A JUMP THROUGH *UIVEC*).
      63/      0 :                      ;               UPON ENTRY OF THE USER ROUTINE, THE STACK
      64/      0 :                      ;               CONTAINS:
      65/      0 :                      ;               (STACK+0)  = RETURN ADDRESS (TO MTR88)
      66/      0 :                      ;               (STACK+2)  = (STACKPTR+14)
      67/      0 :                      ;               (STACK+4)  = (AF)
      68/      0 :                      ;               (STACK+6)  = (BC)
      69/      0 :                      ;               (STACK+8)  = (DE)
      70/      0 :                      ;               (STACK+10) = (HL)
      71/      0 :                      ;               (STACK+12) = (PC)
      72/      0 :                      ;               THE USER'S ROUTINE SHOULD RETURN TO MTR88 VIA
      73/      0 :                      ;               A *RET* WITHOUT ENABLING INTERRUPTS.
      74/      0 :                      ;
      75/      0 :                      ;       2       SINGLE STEP INTERRUPTS RECEIVED WHEN IN
      76/      0 :                      ;               USER MODE CAUSES A JUMP THROUGH *UIVEC*+3.
      77/      0 :                      ;               STACK UPON USER ROUTINE ENTRY:
      78/      0 :                      ;               (STACK+0)  = (STACKPTR+12)
      79/      0 :                      ;               (STACK+2)  = (AF)
      80/      0 :                      ;               (STACK+4)  = (BC)
      81/      0 :                      ;               (STACK+6)  = (DE)
      82/      0 :                      ;               (STACK+8)  = (HL)
      83/      0 :                      ;               (STACK+10) = (PC)
      84/      0 :                      ;               THE USER'S ROUTINE SHOULD HANDLE IT'S OWN RETURN
      85/      0 :                      ;               FROM THE INTERRUPT.  THAT IS, *EI* FOLLOWED BY *RET*.
      86/      0 :                      ;
      87/      0 :                      ;       THE FOLLOWING INTERRUPTS ARE VECTORED DIRECTLY THROUGH *UIVEC*.
      88/      0 :                      ;       THE USER ROUTINE MUST HAVE SETUP A JUMP IN *UIVEC* BEFORE ANY
      89/      0 :                      ;       OF THESE INTERRUPTS MAY OCCUR. RETURN IS VIA *EI* AND THEN *RET*.
      90/      0 :                      ;
      91/      0 :                      ;       3       I/O 3. CAUSES A DIRECT JUMP THROUGH *UIVEC*+6
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 3 - 2024-04-22 06:03:31 PM


      92/      0 :                      ;
      93/      0 :                      ;       4       I/O 4. CAUSES A DIRECT JUMP THROUGH *UIVEC*+9
      94/      0 :                      ;
      95/      0 :                      ;       5       I/O 5. CAUSES A DIRECT JUMP THROUGH *UIVEC*+12
      96/      0 :                      ;
      97/      0 :                      ;       6       I/O 6. CAUSES A DIRECT JUMP THROUGH *UIVEC*+15
      98/      0 :                      ;
      99/      0 :                      ;       7       I/O 7. CAUSES A DIRECT JUMP THROUGH *UIVEC*+18
     100/      0 :                      
     101/      0 :                      ;       ASSEMBLY CONSTANTS
     102/      0 :                      
     103/      0 :                              INCLUDE mtr88.asm       ; DEFINE MTR88 OLD EQUATES
(1)    1/      0 :                      ;       IO PORTS
(1)    2/      0 :                      
(1)    3/      0 :                      ;       ALL REFERENCES TO THE H8 FRONT PANEL PORTS ARE TRAPPED BY THE
(1)    4/      0 :                      ;       Z80 NMI OF THE H88/H89.  OP.CTL WILL STILL PERFORM AS IN AN H8
(1)    5/      0 :                      ;       IN RESPECT TO THE CLOCK AND SINGLE STEP CONTROL.  FOR MORE
(1)    6/      0 :                      ;       INFORMATION SEE THE NMI ROUTINE.
(1)    7/      0 :                      ;
(1)    8/      0 : =360O                IP.PAD  EQU     360Q            ; PAD INPUT PORT
(1)    9/      0 : =360O                OP.CTL  EQU     360Q            ; CONTROL OUTPUT PORT
(1)   10/      0 : =360O                OP.DIG  EQU     360Q            ; DIGIT SELECT OUTPUT PORT
(1)   11/      0 : =361O                OP.SEQ  EQU     361Q            ; SEGMENT SELECT OUTPUT PORT
(1)   12/      0 :                      
(1)   13/      0 :                      ;       H88/H89 CONTROL PORT
(1)   14/      0 : =362O                H88.CTL EQU     362Q            ; H88/H89 PORT FOR CLOCK AND SINGLE STEP
(1)   15/      0 : =2O                  H88B.CK EQU     00000010B       ; 2MS CLOCK ENABLE/DISABLE
(1)   16/      0 : =1O                  H88B.SS EQU     00000001B       ; SINGLE STEP ENABLE/DISABLE
(1)   17/      0 :                      
(1)   18/      0 : =362O                H88.SW  EQU     362Q            ; 8 POSITION DIP SWITCH
(1)   19/      0 : =200O                H88S.AT EQU     10000000B       ; AUTO BOOT SWITCH
(1)   20/      0 : =100O                H88S.BR EQU     01000000B       ; BAUD RATE SWITCHE        **/RNC/**
(1)   21/      0 : =40O                 H88S.M  EQU     00100000B       ; MEMORY TEST/NORMAL OPERATION SWITCH
(1)   22/      0 : =20O                 H88S.DV EQU     00010000B       ; = 0, BOOT FROM DEVICE AT 174-177Q
(1)   23/      0 :                                                      ; = 1, BOOT FROM DEVICE AT 170-173Q
(1)   24/      0 : =14O                 H88S.0  EQU     00001100B       ; = 00, NO DEVICE INSTALLED AT 170-173Q
(1)   25/      0 :                                                      ; = 01, DEVICE AT 170-173Q = Z47
(1)   26/      0 : =3O                  H88S.4  EQU     00000011B       ; = 00, DEVICE AT 174-177Q = H17
(1)   27/      0 :                                                      ; = 01, DEVICE AT 174-177Q = Z47
(1)   28/      0 :                      
(1)   29/      0 :                      ;       CASSETTE PORTS
(1)   30/      0 :                      
(1)   31/      0 : =371O                IP.TPC  EQU     371Q            ; TAPE CONTROL IN
(1)   32/      0 : =371O                OP.TPC  EQU     371Q            ; TAPE CONTROL OUT
(1)   33/      0 : =370O                IP.TPD  EQU     370Q            ; TAPE DATA IN
(1)   34/      0 : =370O                OP.TPD  EQU     370Q            ; TAPE DATA OUT
(1)   35/      0 :                      
(1)   36/      0 :                      ;       ASCII CHARACTERS
(1)   37/      0 :                      
(1)   38/      0 : =26O                 A.SYN   EQU     026Q            ; SYNC CHARACTER
(1)   39/      0 : =2O                  A.STX   EQU     002Q            ; STX CHARACTER
(1)   40/      0 : =7O                  A.BEL   EQU     007Q            ; BELL CHARACTER
(1)   41/      0 : =10O                 A.BKS   EQU     010Q            ; BACKSPACE CHARACTER
(1)   42/      0 : =12O                 A.LF    EQU     012Q            ; LINE FEED CHARACTER
(1)   43/      0 : =15O                 A.CR    EQU     015Q            ; CARRIAGE RETURN CHARACTER
(1)   44/      0 : =33O                 A.ESC   EQU     033Q            ; ESCAPE CHARACTER
(1)   45/      0 : =177O                A.DEL   EQU     177Q            ; DELETE OR RUBOUT CHARACTER
(1)   46/      0 :                      
(1)   47/      0 :                      ;       FRONT PANEL HARDWARE CONTROL BITS.
(1)   48/      0 :                      
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm(mtr88.asm) - Page 4 - 2024-04-22 06:03:31 PM


(1)   49/      0 : =20O                 CB.SSI  EQU     00010000B       ; SINGLE STEP INTERRUPT
(1)   50/      0 : =40O                 CB.MTL  EQU     00100000B       ; MONITOR LIGHT
(1)   51/      0 : =100O                CB.CLI  EQU     01000000B       ; CLOCK INTERRUPT ENABLE
(1)   52/      0 : =200O                CB.SPK  EQU     10000000B       ; SPEAKER ENABLE
(1)   53/      0 :                      
(1)   54/      0 :                      ;       DISPLAY MODE FLAGS (IN *DSPMOD*)
(1)   55/      0 :                      
(1)   56/      0 : =0O                  DM.MR   EQU     0               ; MEMORY READ
(1)   57/      0 : =1O                  DM.MW   EQU     1               ; MEMORY WRITE
(1)   58/      0 : =2O                  DM.RR   EQU     2               ; REGISTER READ
(1)   59/      0 : =3O                  DM.RW   EQU     3               ; REGISTER WRITE
(1)   60/      0 :                      
(1)   61/      0 :                              INCLUDE tape.asm
(2)    1/      0 :                      ;       TAPE EQUIVALENCES.
(2)    2/      0 :                      
(2)    3/      0 : =1O                  RT.MI   EQU     1       ; RECORD TYPE - MEMORY DUMP IMAGE
(2)    4/      0 : =2O                  RT.BP   EQU     2       ; RECORD TYPE - BASIC PROGRAM
(2)    5/      0 : =3O                  RT.CT   EQU     3       ; RECORD TYPE - COMPRESSED TEXT
(2)    6/      0 :                      
(2)    7/      0 :                      ;       BLOCK SIZE FOR INTER-PRODUCT COMMUNICATION
(2)    8/      0 :                      
(2)    9/      0 : =2.000O              BLKSIZ  EQU   512
(2)   10/      0 :                      
(1)   62/      0 :                      
(1)   63/      0 :                      ;       MACHINE INSTRUCTIONS
(1)   64/      0 :                      
(1)   65/      0 : =166O                MI.HLT  EQU     01110110B       ; HALT
(1)   66/      0 : =311O                MI.RET  EQU     11001001B       ; RETURN
(1)   67/      0 : =333O                MI.IN   EQU     11011011B       ; INPUT
(1)   68/      0 : =323O                MI.OUT  EQU     11010011B       ; OUTPUT
(1)   69/      0 : =72O                 MI.LDA  EQU     00111010B       ; LDA
(1)   70/      0 : =346O                MI.ANI  EQU     11100110B       ; ANI
(1)   71/      0 : =21O                 MI.LXID EQU     00010001B       ; LXI D
(1)   72/      0 : =303O                MI.JMP  EQU     11000011B       ; JMP
(1)   73/      0 : =335O                MI.LDXA EQU     11011101B       ; LD IX,  (BYTE A)
(1)   74/      0 : =41O                 MI.LDXB EQU     00100001B       ; LD IX,  (BYTE B)
(1)   75/      0 : =375O                MI.LDYA EQU     11111101B       ; LD IY,  (BYTE A)
(1)   76/      0 : =41O                 MI.LDYB EQU     00100001B       ; LD IY,  (BYTE B)
(1)   77/      0 : =10O                 MI.EXAF EQU     00001000B       ; EX AF,AF'
(1)   78/      0 : =335O                MI.JIXA EQU     11011101B       ; JP (IX)  (BYTE A)
(1)   79/      0 : =351O                MI.JIXB EQU     11101001B       ; JP (IX)  (BYTE B)
(1)   80/      0 : =375O                MI.JIYA EQU     11111101B       ; JP (IY)  (BYTE A)
(1)   81/      0 : =351O                MI.JIYB EQU     11101001B       ; JP (IY)  (BYTE B)
(1)   82/      0 :                      
(1)   83/      0 :                      ;       USER OPTION BITS
(1)   84/      0 :                      ;
(1)   85/      0 :                      ;       THESE BITS ARE IN SELL MFLAG.
(1)   86/      0 :                      ;
(1)   87/      0 :                      
(1)   88/      0 : =200O                UO.HLT  EQU     10000000B       ; DISABLE HALT PROCESSING
(1)   89/      0 : =100O                UO.NFR  EQU     CB.CLI          ; NO REFRESH OF FRONT PANEL
(1)   90/      0 : =2O                  UO.DDU  EQU     00000010B       ; DISABLE DISPLAY UPDATE
(1)   91/      0 : =1O                  UO.CLK  EQU     00000001B       ; ALLOW PRIVATE INTERRUPT PROCESSING
(1)   92/      0 :                      
     104/      0 :                      
     105/      0 :                              INCLUDE z47def.asm      ; DEFINE Z47 EQUATES
(1)    1/      0 :                      ;
(1)    2/      0 :                      ;       DISK INTERFACE CONSTANTS
(1)    3/      0 :                      ;
(1)    4/      0 : =170O                D.STA   EQU     170Q            ; INTERFACE STATUS PORT
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm(z47def.asm) - Page 5 - 2024-04-22 06:03:31 PM


(1)    5/      0 : =171O                D.DAT   EQU     D.STA+1         ; INTERFACE DATA PORT
(1)    6/      0 :                      ;
(1)    7/      0 : =1O                  S.ERR   EQU     00000001B       ; ERROR BIT
(1)    8/      0 : =40O                 S.DON   EQU     00100000B       ; DONE
(1)    9/      0 : =200O                S.DTR   EQU     10000000B       ; DATA TRANSFER REQUEST
(1)   10/      0 :                      ;
(1)   11/      0 : =2O                  W.RES   EQU     00000010B       ; RESET COMMAND
(1)   12/      0 :                      
(1)   13/      0 :                      ;       CONTROLLER STATUS REGISTER
(1)   14/      0 :                      ;
(1)   15/      0 : =200O                CS.UNR  EQU     10000000B       ; UNIT NOT READY
(1)   16/      0 : =100O                CS.WPD  EQU     01000000B       ; WRITE PROTECTED DRIVE
(1)   17/      0 :                      
(1)   18/      0 :                      ;       AUXILIARY STATUS REGISTER
(1)   19/      0 :                      ;
(1)   20/      0 : =100O                AS.0DD  EQU     01000000B       ; TRACK 0 DOUBLE DENSITY
(1)   21/      0 : =40O                 AS.1DD  EQU     00100000B       ; TRACK 1 - 76 DOUBLE DENSITY
(1)   22/      0 : =20O                 AS.S1A  EQU     00010000B       ; SIDE 1 AVAILABLE
(1)   23/      0 : =3O                  AS.SWL  EQU     00000011B       ; SECTOR LENGTH MASK
(1)   24/      0 :                      
(1)   25/      0 :                      ;       DISK COMMANDS
(1)   26/      0 :                      ;
(1)   27/      0 : =0O                  DC.BOOT EQU     0               ; BOOT
(1)   28/      0 : =1O                  DC.RST  EQU     1               ; READ CONTROLLER STATUS
(1)   29/      0 : =2O                  DC.RAS  EQU     2               ; READ AUX. STATUS
(1)   30/      0 : =3O                  DC.LSC  EQU     3               ; LOAD SECTOR COUNT
(1)   31/      0 : =4O                  DC.RAD  EQU     4               ; READ ADDR. OF LAST SECTOR ADDRESSED
(1)   32/      0 : =5O                  DC.REA  EQU     5               ; READ SECTORS
(1)   33/      0 : =6O                  DC.WRI  EQU     6               ; WRITE SECTORS
(1)   34/      0 : =7O                  DC.REAB EQU     7               ; READ SECTORS BUFFERED
(1)   35/      0 : =10O                 DC.WRIB EQU     8               ; WRITE SECTORS BUFFERED
(1)   36/      0 : =11O                 DC.WRD  EQU     9               ; WRITE SECTORS & DELETE
(1)   37/      0 : =12O                 DC.WRDB EQU     10              ; WRITE SECTORS BUFFERED & DELETE
(1)   38/      0 : =13O                 DC.CPY  EQU     11              ; COPY
(1)   39/      0 : =14O                 DC.FRM0 EQU     12              ; FORMAT IBM SD
(1)   40/      0 : =15O                 DC.FRM1 EQU     13              ; FORMAT     SD
(1)   41/      0 : =16O                 DC.FRM2 EQU     14              ; FORMAT IBM DD
(1)   42/      0 : =17O                 DC.FRM3 EQU     15              ; FORMAT     DD
(1)   43/      0 :                      
(1)   44/      0 :                      ;       USEFUL FLAGS
(1)   45/      0 :                      ;
(1)   46/      0 : =0O                  UNT.0   EQU     00000000B       ; UNIT 0
(1)   47/      0 : =40O                 UNT.1   EQU     00100000B       ; UNIT 1
(1)   48/      0 : =100O                UNT.2   EQU     01000000B       ; UNIT 2
(1)   49/      0 : =140O                UNT.3   EQU     01100000B       ; UNIT 3
(1)   50/      0 :                      ;
(1)   51/      0 : =1.000O              C.256   EQU     256             ; SECTOR SIZE = 256 BYTES
(1)   52/      0 : =200O                C.128   EQU     128             ; SECTOR SIZE
(1)   53/      0 :                      
     106/      0 :                      
     107/      0 :                              INCLUDE h17def.asm      ; EQUATES FOR H17 BOOT ROM
(1)    1/      0 :                      ;       H17 CONTROL INFORMATION.
(1)    2/      0 :                      
(1)    3/      0 : =177O                DP.DC   EQU     07FH            ; DISK CONTROL PORT
(1)    4/      0 :                      
(1)    5/      0 : =1O                  DF.HD   EQU     00000001B       ; HOLE DETECT
(1)    6/      0 : =2O                  DF.T0   EQU     00000010B       ; TRACK 0 DETECT
(1)    7/      0 : =4O                  DF.WP   EQU     00000100B       ; WRITE PROTECT
(1)    8/      0 : =10O                 DF.SD   EQU     00001000B       ; SYNC DETECT
(1)    9/      0 :                      
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm(h17def.asm) - Page 6 - 2024-04-22 06:03:31 PM


(1)   10/      0 : =1O                  DF.WQ   EQU     00000001B       ; WRITE GATE ENABLE
(1)   11/      0 : =2O                  DF.DS0  EQU     00000010B       ; DRIVE SELECT 0
(1)   12/      0 : =4O                  DF.DS1  EQU     00000100B       ; DRIVE SELECT 1
(1)   13/      0 : =10O                 DF.DS2  EQU     00001000B       ; DRIVE SELECT 2
(1)   14/      0 : =20O                 DF.MO   EQU     00010000B       ; MOTOR ON (BOTH DRIVES)
(1)   15/      0 : =40O                 DF.DI   EQU     00100000B       ; DIRECTION (0=OUT)
(1)   16/      0 : =100O                DF.ST   EQU     01000000B       ; STEP COMMAND (ACTIVE HIGH)
(1)   17/      0 : =200O                DF.WR   EQU     10000000B       ; WRITE ENABLE RAM
(1)   18/      0 :                      
(1)   19/      0 :                      ;       DISK UART PORTS AND CONTROL FLAGS.
(1)   20/      0 :                      
(1)   21/      0 : =174O                UP.DP   EQU     07CH            ; DATA PORT
(1)   22/      0 : =175O                UP.FC   EQU     07DH            ; FILL CHARACTER
(1)   23/      0 : =175O                UP.ST   EQU     07DH            ; STATUS FLAGS
(1)   24/      0 : =176O                UP.SC   EQU     07EH            ; SYN CHARACTER (OUTPUT)
(1)   25/      0 : =176O                UP.SR   EQU     07EH            ; SYNC RESET (INPUT)
(1)   26/      0 :                      
(1)   27/      0 : =1O                  UF.RDA  EQU     00000001B       ; RECEIVE DATA AVAILABLE
(1)   28/      0 : =2O                  UF.ROR  EQU     00000010B       ; RECEIVER OVERRUN
(1)   29/      0 : =4O                  UF.RPE  EQU     00000100B       ; RECEIVER PARITY ERROR
(1)   30/      0 : =100O                UF.FCT  EQU     01000000B       ; FILL CHAR TRANSMITTED
(1)   31/      0 : =200O                UF.TB   EQU     10000000B       ; TRANSMITTER BUFFER EMPTY
(1)   32/      0 :                      
(1)   33/      0 :                      ;       CHARACTER DEFINITIONS
(1)   34/      0 :                      
(1)   35/      0 : =375O                C.DSYN  EQU     0FDH            ; PREFIX SYNC CHARACTER
(1)   36/      0 :                      
     108/      0 :                      
     109/      0 :                              INCLUDE hosequ.asm      ; HDOS EQUATES
(1)    1/      0 :                      ;       HDOS SYSTEM EQUIVALENCES.
(1)    2/      0 :                      ;
(1)    3/      0 :                      
(1)    4/      0 : =24.000O             S.GRT   EQU     12000Q          ; SYSTEM AREA FOR GRT0
(1)    5/      0 : =25.000O             S.GRT1  EQU     12400Q          ; SYSTEM AREA FOR GRT 1
(1)    6/      0 : =26.000O             SECSCR  EQU     13000Q          ; SYSTEM 512 BYTE SCRATCH AREA
(1)    7/      0 : =30.000O             ROMBOOT EQU     14000Q          ; ROM BOOT ENTRY
(1)    8/      0 :                      
(1)    9/      0 :                      
(1)   10/ 40.100 :                              ORG     20100Q          ; FREE SPACE FROM PAM-8
(1)   11/ 40.100 :                      
(1)   12/ 40.100 :                              DS      8               ; JUMP TO SYSTEM EXIT
(1)   13/ 40.110 :                      D.CON   DS      16              ; DISK CONSTANTS
(1)   14/ 40.130 :                      SYDD                            ; SYSTEM DISK ENTRY POINT
(1)   15/ 40.130 :                      D.VEC   DS      24*3            ; SYSTEM ROM ENTRY VECTORS
(1)   16/ 40.240 :                      D.RAM   DS      31              ; SYSTEM ROM WORK AREA
(1)   17/ 40.277 :                      S.VAL   DS      36              ; SYSTEM VALUES
(1)   18/ 40.343 :                      S.INT   DS      115             ; SYSTEM INTERNAL WORK AREAS
(1)   19/ 41.126 :                              DS      16
(1)   20/ 41.146 :                      S.OVR   DS      2               ; STACK OVERFLOW WARNING
(1)   21/ 41.150 :                              DS      280             ; SYSTEM STACK
(1)   22/ 42.200 : =1.032O              STACKL  EQU     432Q            ; STACK SIZE
(1)   23/ 42.200 :                      
(1)   24/ 42.200 :                      STACK                           ; LWA+1 SYSTEM STACK
(1)   25/ 42.200 :                      USERFWA                         ; USER FWA
(1)   26/ 42.200 :                      
     110/ 42.200 :                      
     111/ 42.200 :                              INCLUDE misc.asm        ; MISCELLANEOUS EQUATES FOR H17 BOOT ROM
(1)    1/ 42.200 :                      ;; MISCELLANEOUS EQUATES FROM H17 BOOT ROM.
(1)    2/ 42.200 :                      ;  REFER TO H17 BOOT ROM IF MORE INFORMATION REQUIRED
(1)    3/ 42.200 :                      
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm(misc.asm) - Page 7 - 2024-04-22 06:03:31 PM


(1)    4/ 42.200 : =36.235O             WHD     EQU     17235Q          ; WAIT FOR HOLE ROUTINE ENTRY POINT
(1)    5/ 42.200 : =36.271O             WNH     EQU     17271Q          ; WAIT FOR NO HOLE ROUTINE ENTRY POINT
(1)    6/ 42.200 :                      
(1)    7/ 42.200 : =130O                BOOTAL  EQU     130Q            ; NUMBER OF RAM TO CLEAR
(1)    8/ 42.200 : =37.132O             BOOTA   EQU     17532Q          ; RAM CLEAR START LOCATION
(1)    9/ 42.200 : =30.252O             DMOVE   EQU     14252Q          ; MOVE DATA ROUTINE
(1)   10/ 42.200 : =37O                 D.RAML  EQU     37Q
(1)   11/ 42.200 : =31.212O             DZERO   EQU     14612Q          ; ZERO RAM ROUTINE
(1)   12/ 42.200 : =41.061O             AIO.UNI EQU     20461Q          ; DISK UNIT NUMBER STORAGE
(1)   13/ 42.200 : =40.037O             UIVEC   EQU     20037Q          ; USER INTERRUPT VECTOR
(1)   14/ 42.200 : =34.031O             CLOCK17 EQU     16031Q          ; Z17 TIMER INTERRUPT HANDLER LOCATION
(1)   15/ 42.200 : =33.366O             R.ABORT EQU     15766Q          ; RESET Z17 ROUTINE LOCATION
(1)   16/ 42.200 : =34.077O             R.READ  EQU     16077Q          ; READ Z17 ROUTINE LOCATION
(1)   17/ 42.200 : =40.206O             D.SDP   EQU     20206Q          ; SET DEVICE PARAMETER RAM LOCATION
(1)   18/ 42.200 : =36.073O             SDP3    EQU     17073Q          ; SET DEVICE PARAMETER ENTRY
(1)   19/ 42.200 : =34.027O             EIXIT   EQU     16027Q          ; EI/RET LOCATION
(1)   20/ 42.200 : =12O                 ERPTCNT EQU     12Q             ; ERROR COUNT
(1)   21/ 42.200 : =40.264O             D.OECNT EQU     20264Q
(1)   22/ 42.200 :                      
     112/ 42.200 :                      
     113/ 42.200 :                              INCLUDE u8251.asm       ; DEFINE 8251 USART BITS
(1)    1/ 42.200 :                      ;       8251 USART BIT DEFINITIONS.
(1)    2/ 42.200 :                      ;
(1)    3/ 42.200 :                      
(1)    4/ 42.200 :                      ;       PORT ADDRESSES
(1)    5/ 42.200 :                      
(1)    6/ 42.200 : =0O                  UDR     EQU     0               ; DATA REGISTER IS EVEN
(1)    7/ 42.200 : =1O                  UBR     EQU     1               ; STATUS REGISTER IS NEXT
(1)    8/ 42.200 :                      
(1)    9/ 42.200 : =372O                SC.UART EQU     372Q            ; CONSOLE USART ADDRESS (IFF 8251)
(1)   10/ 42.200 :                      
(1)   11/ 42.200 :                      
(1)   12/ 42.200 :                      ;       MODE INSTRUCTION CONTROL BITS.
(1)   13/ 42.200 :                      
(1)   14/ 42.200 : =100O                UMI.1B  EQU     01000000B       ; 1 STOP BIT
(1)   15/ 42.200 : =200O                UMI.HB  EQU     10000000B       ; 1 1/2 STOP BITS
(1)   16/ 42.200 : =300O                UMI.2B  EQU     11000000B       ; 2 STOP BITS
(1)   17/ 42.200 : =40O                 UMI.PE  EQU     00100000B       ; EVEN PARITY
(1)   18/ 42.200 : =20O                 UMI.PA  EQU     00010000B       ; USE PARITY
(1)   19/ 42.200 : =0O                  UMI.L5  EQU     00000000B       ; 5 BIT CHARACTERS
(1)   20/ 42.200 : =4O                  UMI.L6  EQU     00000100B       ; 6 BIT CHARACTERS
(1)   21/ 42.200 : =10O                 UMI.L7  EQU     00001000B       ; 7 BIT CHARACTERS
(1)   22/ 42.200 : =14O                 UMI.L8  EQU     00001100B       ; 8 BIT CHARACTERS
(1)   23/ 42.200 : =1O                  UMI.1X  EQU     00000001B       ; CLOCK X 1
(1)   24/ 42.200 : =2O                  UMI.16X EQU     00000010B       ; CLOCK X 16
(1)   25/ 42.200 : =3O                  UMI.64X EQU     00000011B       ; CLOCK X 64
(1)   26/ 42.200 :                      
(1)   27/ 42.200 :                      ;       COMMAND INSTRUCTION BITS.
(1)   28/ 42.200 :                      
(1)   29/ 42.200 : =100O                UCI.IR  EQU     01000000B       ; INTERNAL RESET
(1)   30/ 42.200 : =40O                 UCI.RO  EQU     00100000B       ; READER-ON CONTROL FLAG
(1)   31/ 42.200 : =20O                 UCI.ER  EQU     00010000B       ; ERROR RESET
(1)   32/ 42.200 : =4O                  UCI.RE  EQU     00000100B       ; RECEIVE ENABLE
(1)   33/ 42.200 : =2O                  UCI.IE  EQU     00000010B       ; ENABLE INTERRUPTS FLAG
(1)   34/ 42.200 : =1O                  UCI.TE  EQU     00000001B       ; TRANSMIT ENABLE
(1)   35/ 42.200 :                      
(1)   36/ 42.200 :                      ;       STATUS READ BITS.
(1)   37/ 42.200 :                      
(1)   38/ 42.200 : =40O                 USR.FE  EQU     00100000B       ; FRAMING ERROR
(1)   39/ 42.200 : =20O                 USR.OE  EQU     00010000B       ; OVERRUN ERROR
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm(u8251.asm) - Page 8 - 2024-04-22 06:03:31 PM


(1)   40/ 42.200 : =10O                 USR.PE  EQU     00001000B       ; PARITY ERROR
(1)   41/ 42.200 : =4O                  USR.TXE EQU     00000100B       ; TRANSMITTER EMPTY
(1)   42/ 42.200 : =2O                  USR.RXR EQU     00000010B       ; RECEIVER READY
(1)   43/ 42.200 : =1O                  USR.TXR EQU     00000001B       ; TRANSMITTER READY
(1)   44/ 42.200 :                      
     114/ 42.200 :                      
     115/ 42.200 :                              INCLUDE u8250.asm       ; DEFINE 8250 ACE BITS
(1)    1/ 42.200 :                      ;;      8250 UART CONTROL AND BIT DEFINITIONS.
(1)    2/ 42.200 :                      
(1)    3/ 42.200 : =350O                SC.ACE  EQU     350Q            ; SYSTEM CONSOLE PORT IF 8250 ACE
(1)    4/ 42.200 : =156O                AC.DLY  EQU     110             ; 220 MIL. SEC. DELAY FOR 8250
(1)    5/ 42.200 :                      
(1)    6/ 42.200 : =0O                  UR.RBR  EQU     0               ; RECEIVE BUFFER REGISTER (READ ONLY)
(1)    7/ 42.200 :                      
(1)    8/ 42.200 : =0O                  UR.THR  EQU     0               ; TRANSMITTER HOLDING REGISTER (WRITE ONLY)
(1)    9/ 42.200 :                      
(1)   10/ 42.200 : =0O                  UR.DLL  EQU     0               ; DIVISOR LATCH (LEAST SIGNIFICANT)
(1)   11/ 42.200 :                      
(1)   12/ 42.200 : =1O                  UR.DLM  EQU     1               ; DIVISOR LATCH (MOST SIGNIFICANT)
(1)   13/ 42.200 :                      
(1)   14/ 42.200 : =1O                  UR.IER  EQU     1               ; INTERRUPT ENABLE REGISTER
(1)   15/ 42.200 : =1O                  UC.EDA  EQU     00000001B       ;  ENABLE RECEIVED DATA AVAILABLE INTERRUPT
(1)   16/ 42.200 : =2O                  UC.TRE  EQU     00000010B       ;  ENABLE TRANSMIT HOLD REGISTER EMPTY INTERRUPT
(1)   17/ 42.200 : =4O                  UC.RSI  EQU     00000100B       ;  ENABLE RECEIVE STATUS INTERRUPT
(1)   18/ 42.200 : =10O                 UC.MSI  EQU     00001000B       ;  ENABLE MODEM STATUS INTERRUPT
(1)   19/ 42.200 :                      
(1)   20/ 42.200 : =2O                  UR.IIR  EQU     2               ; INTERRUPT IDENTIFICATION REGISTER
(1)   21/ 42.200 : =1O                  UC.IIP  EQU     00000001B       ;  INVERTED INTERRUPT PENDING (0 MEANS PENDING)
(1)   22/ 42.200 : =6O                  UC.IID  EQU     00000110B       ;  INTERRUPT ID
(1)   23/ 42.200 :                      
(1)   24/ 42.200 : =3O                  UR.LCR  EQU     3               ; LINE CONTROL REGISTER
(1)   25/ 42.200 : =0O                  UC.5BW  EQU     00000000B       ;  5 BIT WORDS
(1)   26/ 42.200 : =1O                  UC.6BW  EQU     00000001B       ;  6 BIT WORDS
(1)   27/ 42.200 : =2O                  UC.7BW  EQU     00000010B       ;  7 BIT WORDS
(1)   28/ 42.200 : =3O                  UC.8BW  EQU     00000011B       ;  8 BIT WORDS
(1)   29/ 42.200 : =4O                  UC.2SB  EQU     00000100B       ;  TWO STOP BITS SELECTED
(1)   30/ 42.200 : =10O                 UC.PEN  EQU     00001000B       ;  PARITY COMPUTATION ENABLED
(1)   31/ 42.200 : =20O                 UC.EPS  EQU     00010000B       ;  EVEN PARITY SELECT
(1)   32/ 42.200 : =40O                 UC.SKP  EQU     00100000B       ;  STICK PARITY
(1)   33/ 42.200 : =100O                UC.SB   EQU     01000000B       ;  SET BREAK
(1)   34/ 42.200 : =200O                UC.DLA  EQU     10000000B       ;  DIVIDER LATCH ACCESS
(1)   35/ 42.200 :                      
(1)   36/ 42.200 : =4O                  UR.MCR  EQU     4               ; MODEM CONTROL REGISTER
(1)   37/ 42.200 : =1O                  UC.DTR  EQU     00000001B       ;  DATA TERMINAL READY
(1)   38/ 42.200 : =2O                  UC.RTS  EQU     00000010B       ;  REQUEST TO SEN
(1)   39/ 42.200 : =4O                  UC.OU1  EQU     00000100B       ;  OUT 1
(1)   40/ 42.200 : =10O                 UC.OU2  EQU     00001000B       ;  OUT 2
(1)   41/ 42.200 : =20O                 UC.LOO  EQU     00010000B       ;  LOOP
(1)   42/ 42.200 :                      
(1)   43/ 42.200 : =5O                  UR.LSR  EQU     5               ; LINE STATUS REGISTER
(1)   44/ 42.200 : =1O                  UC.DR   EQU     00000001B       ;  DATA READY
(1)   45/ 42.200 : =2O                  UC.OR   EQU     00000010B       ;  OVERRUN
(1)   46/ 42.200 : =4O                  UC.PE   EQU     00000100B       ;  PARITY ERROR
(1)   47/ 42.200 : =10O                 UC.FE   EQU     00001000B       ;  FRAMING ERROR
(1)   48/ 42.200 : =20O                 UC.BI   EQU     00010000B       ;  BREAK INTERRUPT
(1)   49/ 42.200 : =40O                 UC.THE  EQU     00100000B       ;  TRANSMITTER HOLDING REGISTER EMPTY
(1)   50/ 42.200 : =100O                UC.TSE  EQU     01000000B       ;  TRANSMITTER SHIFT REGISTER EMPTY
(1)   51/ 42.200 :                      
(1)   52/ 42.200 : =6O                  UR.MSR  EQU     6               ; MODEM STATUS REGISTER
(1)   53/ 42.200 : =1O                  UC.DCS  EQU     00000001B       ;  DELTA CLEAR TO SEND
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm(u8250.asm) - Page 9 - 2024-04-22 06:03:31 PM


(1)   54/ 42.200 : =2O                  UC.DDR  EQU     00000010B       ;  DELTA DATA SET READY
(1)   55/ 42.200 : =4O                  UC.TER  EQU     00000100B       ;  TRAILING EDGE OF RING
(1)   56/ 42.200 : =10O                 UC.DRL  EQU     00001000B       ;  DELTA RECEIVE LINE SIGNAL DETECT
(1)   57/ 42.200 : =20O                 UC.CTS  EQU     00010000B       ;  CLEAR TO SEND
(1)   58/ 42.200 : =40O                 UC.DSR  EQU     00100000B       ;  DATA SET READY
(1)   59/ 42.200 : =100O                UC.RI   EQU     01000000B       ;  RING INDICATOR
(1)   60/ 42.200 : =200O                UC.RLS  EQU     10000000B       ;  RECEIVED LINE SIGNAL DETECT
(1)   61/ 42.200 :                      
     116/ 42.200 :                      
     117/ 42.200 :                      ;       INTERRUPT VECTORS.
     118/ 42.200 :                      ;
     119/ 42.200 :                      
     120/ 42.200 :                      ;       LEVEL 0 - RESET
     121/ 42.200 :                      ;
     122/ 42.200 :                      ;       THIS 'INTERRUPT' MAY NOT BE PROCESSED BY A USER PROGRAM.
     123/ 42.200 :                      
     124/ 42.200 : =>FALSE                      IF      RAM
     125/ 42.200 : =>TRUE                       ELSE
     126/      0 :                              ORG     00Q
     127/      0 : [124]                        ENDIF
     128/      0 :                      
     129/      0 : 303 000 004          INIT0   JMP     INIT0X          ; DO H88 EXTENSION OF INITIALIZATION
     130/      3 : 041 012 040          INIT0.0 LXI     H,PRSRAM+PRSL-1 ; (HL) = RAM DESTINATION FOR CODE
     131/      6 : 303 073 000                  JMP     INIT            ; INITIALIZE
     132/     11 :                      
     133/     11 : =>FALSE                      IF      RAM
     134/     11 : =>TRUE                       ELSE
     135/     11 : (MACRO)                      ERRPL   INIT-1000Q      ; BYTE IN WORD 10A MUST BE 0
     135/     11 :                      ;       IF (INIT-1000Q) > 0
     135/     11 :                      ;         ERROR Expression is positive
     135/     11 :                      ;       ENDIF
     136/     11 : [133]                        ENDIF
     137/     11 :                      
     138/     11 :                      ;       LEVEL 1 - CLOCK
     139/     11 :                      
     140/     11 : =>FALSE                      IF      RAM
     141/     11 : =>TRUE                       ELSE
     142/     11 : =10O                 INT1    EQU     10Q             ; INTERRUPT ENTRY POINT
     143/     11 :                      
     144/     11 : (MACRO)                      ERRNZ   *-110           ; INT0 TAKES UP ONE BYTE
     144/     11 :                      ;       IF (*-110) != 0
     144/     11 :                      ;         ERROR Expression is not zero
     144/     11 :                      ;       ENDIF
     145/     11 : [140]                        ENDIF
     146/     11 :                      
     147/     11 : 315 132 000                  CALL    SAVALL          ; SAVE USER REGISTERS
     148/     14 : 026 000                      MVI     D,0
     149/     16 : 303 201 000                  JMP     CLOCK           ; PROCESS CLOCK INTERRUPT
     150/     21 : =>FALSE                      IF      RAM
     151/     21 : =>TRUE                       ELSE
     152/     21 : (MACRO)                      ERRPL   CLOCK-1000Q     ; EXTRA BYTE MUST BE 0
     152/     21 :                      ;       IF (CLOCK-1000Q) > 0
     152/     21 :                      ;         ERROR Expression is positive
     152/     21 :                      ;       ENDIF
     153/     21 : [150]                        ENDIF
     154/     21 :                      
     155/     21 :                      ;       LEVEL 2 - SINGLE STEP
     156/     21 :                      ;
     157/     21 :                      ;       IF THIS INTERRUPT IS RECEIVED WHEN NOT IN MONITOR MODE,
     158/     21 :                      ;       THEN IT IS ASSUMED TO BE GENERATED BY A USER PROGRAM
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 10 - 2024-04-22 06:03:31 PM


     159/     21 :                      ;       (SINGLE STEPPING OR BREAKPOINTING). IN SUCH CASE, THE
     160/     21 :                      ;       USER PROGRAM IS ENTERED THROUGH (UIVEC+3)
     161/     21 :                      
     162/     21 : =>FALSE                      IF      RAM
     163/     21 : =>TRUE                       ELSE
     164/     21 : =20O                 INT2    EQU     20Q             ; LEVEL 2 ENTRY
     165/     21 :                      
     166/     21 : (MACRO)                      ERRNZ   *-21Q           ; INT1 TAKES EXTRA BYTE
     166/     21 :                      ;       IF (*-21Q) != 0
     166/     21 :                      ;         ERROR Expression is not zero
     166/     21 :                      ;       ENDIF
     167/     21 : [162]                        ENDIF
     168/     21 :                      
     169/     21 : 315 132 000                  CALL    SAVALL          ; SAVE REGISTERS
     170/     24 : 032                          LDAX    D               ; (A) = (CTLFLG)
     171/     25 :                      ;       SET     CTLFLG
     172/     25 : 303 244 001                  JMP     STPRTN          ; STEP RETURN
     173/     30 :                      
     174/     30 :                      ;       I/O INTERRUPT VECTORS.
     175/     30 :                      ;
     176/     30 :                      ;       INTERRUPTS 3 THROUGH 7 ARE AVAILABLE FOR GENERAL I/O USE.
     177/     30 :                      ;
     178/     30 :                      ;       THESE INTERRUPTS ARE NOT SUPPORTED BY MTR88, AND SHOULD
     179/     30 :                      ;       NEVER OCCUR UNLESS THE USER HAS SUPPLIED HANDLER ROUTINES
     180/     30 :                      ;       (THROUGH UIVEC).
     181/     30 :                      
     182/     30 : =>FALSE                      IF      RAM
     183/     30 : =>TRUE                       ELSE
     184/     30 :                              ORG     30Q
     185/     30 : [182]                        ENDIF
     186/     30 :                      
     187/     30 : 303 045 040          INT3    JMP     UIVEC+6         ; JUMP TO USER ROUTINE
     188/     33 :                      
     189/     33 : 064 064 064 064 060          DB      '44440'         ; HEATH PART NUMBER 444-10
     190/     40 :                      
     191/     40 : =>FALSE                      IF      RAM
     192/     40 : =>TRUE                       ELSE
     193/     40 :                              ORG     40Q
     194/     40 : [191]                        ENDIF
     195/     40 :                      
     196/     40 : 303 050 040          INT4    JMP     UIVEC+9         ; JUMP TO USER ROUTINE
     197/     43 :                      
     198/     43 : 044 122 116 102 044          DB      44Q,122Q,116Q,102Q,44Q ; SUPPORT CODE
     199/     50 :                      
     200/     50 : =>FALSE                      IF      RAM
     201/     50 : =>TRUE                       ELSE
     202/     50 :                              ORG     50Q
     203/     50 : [200]                        ENDIF
     204/     50 :                      
     205/     50 : 303 053 040          INT5    JMP     UIVEC+12        ; JUMP TO USER ROUTINE
     206/     53 :                      
     207/     53 :                      
     208/     53 :                      ;       DLY - DELAY TIME INTERVAL
     209/     53 :                      ;
     210/     53 :                      ;       ENTRY   (A) = MILLISECOND DELAY COUNT/2
     211/     53 :                      ;       EXIT    NONE
     212/     53 :                      ;       USES    A,F
     213/     53 :                      
     214/     53 : =>FALSE                      IF      RAM
     215/     53 : =>TRUE                       ELSE
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 11 - 2024-04-22 06:03:31 PM


     216/     53 : (MACRO)                      ERRNZ   *-53A
     216/     53 :                      ;       IF (*-53A) != 0
     216/     53 :                      ;         ERROR Expression is not zero
     216/     53 :                      ;       ENDIF
     217/     53 : [214]                        ENDIF
     218/     53 :                      
     219/     53 : 365                  DLY     PUSH    PSW             ; SAVE COUNT
     220/     54 : 257                          XRA     A               ; DONT SOUND HORN
     221/     55 : 303 143 002                  JMP     HRN0            ; PROCESS AS HORN
     222/     60 :                      
     223/     60 : =>FALSE                      IF      RAM
     224/     60 : =>TRUE                       ELSE
     225/     60 :                              ORG     60Q
     226/     60 : [223]                        ENDIF
     227/     60 :                      
     228/     60 : 303 056 040          INT6    JMP     UIVEC+15        ; JUMP TO USER ROUTINE
     229/     63 :                      
     230/     63 : 076 320              GO.     MVI     A,CB.SSI+CB.CLI+CB.SPK ; OFF MONITOR MODE LIGHT
     231/     65 : 303 235 001                  JMP     SST1            ; RETURN TO USER PROGRAM
     232/     70 :                      
     233/     70 : =>FALSE                      IF      RAM
     234/     70 : =>TRUE                       ELSE
     235/     70 :                              ORG     70Q
     236/     70 : [233]                        ENDIF
     237/     70 :                      
     238/     70 : 303 061 040          INT7    JMP     UIVEC+18        ; JUMP TO USER ROUTINE
     239/     73 :                      
     240/     73 :                      ;       INIT - INITIALIZE SYSTEM
     241/     73 :                      ;
     242/     73 :                      ;       INIT IS CALLED WHENEVER A HARDWARE MASTER-CLEAR IS INITIATED.
     243/     73 :                      ;
     244/     73 :                      ;       SETUP MTR88 CONTROL CELLS IN RAM.
     245/     73 :                      ;       DECODE HOW MUCH MEMORY EXISTS. SETUP STACKPOINTER, AND
     246/     73 :                      ;       ENTER THE MONITOR LOOP.
     247/     73 :                      ;
     248/     73 :                      ;       ENTRY   FROM MASTER CLEAR
     249/     73 :                      ;       EXIT    INTO MTR88 MAIN LOOP
     250/     73 :                      
     251/     73 : =>FALSE                      IF      RAM
     252/     73 : =>TRUE                       ELSE
     253/     73 : (MACRO)                      ERRNZ   *-73Q
     253/     73 :                      ;       IF (*-73Q) != 0
     253/     73 :                      ;         ERROR Expression is not zero
     253/     73 :                      ;       ENDIF
     254/     73 : [251]                        ENDIF
     255/     73 :                      
     256/     73 : 032                  INIT    LDAX    D               ; COPY *PRSROM* INTO RAM
     257/     74 : 167                          MOV     M,A             ; MOVE BYTE
     258/     75 : 053                          DCX     H               ; DECREMENT DESTINATION
     259/     76 : 034                          INR     E               ; INCREMENT SOURCE
     260/     77 : 302 073 000                  JNZ     INIT            ; IF NOT DONE
     261/    102 :                      
     262/    102 : =4.000O              SINCR   EQU     2000Q           ; SEARCH INCREMENT
     263/    102 :                      
     264/    102 : 026 004                      MVI     D,SINCR/256     ; (DE) = SEARCH INCREMENT
     265/    104 : 041 000 034                  LXI     H,START-SINCR   ; (HL) = FIRST RAM - SEARCH INCREMENT
     266/    107 :                      
     267/    107 :                      ;       DETERMINE MEMORY LIMIT
     268/    107 :                      
     269/    107 : 167                  INIT1   MOV     M,A             ; RESTORE VALUE READ
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 12 - 2024-04-22 06:03:31 PM


     270/    110 : 031                          DAD     D               ; INCREMENT TRIAL ADDRESS
     271/    111 : 176                          MOV     A,M             ; (A) = CURRENT MEMORY VALUE
     272/    112 : 065                          DCR     M               ; TRY TO CHANGE IT
     273/    113 : 276                          CMP     M
     274/    114 : 302 107 000                  JNZ     INIT1           ; IF MEMORY CHANGED
     275/    117 :                      
     276/    117 : 053                  INIT2   DCX     H
     277/    120 :                      
     278/    120 : =>FALSE                      IF      RAM
     279/    120 : =>TRUE                       ELSE
     280/    120 : 371                          SPHL                    ; SET STACKPOINTER = MEMORY LIMIT -1
     281/    121 : [1.022]                      ENDIF
     282/    121 :                      
     283/    121 : 345                          PUSH    H               ; SET *PC* VALUE ON STACK
     284/    122 : 041 322 000                  LXI     H,ERROR
     285/    125 : 345                          PUSH    H               ; SET 'RETURN ADDRESS'
     286/    126 :                      
     287/    126 :                      ;       CONFIGURE LOAD/DUMP UART
     288/    126 :                      
     289/    126 : 076 116                      MVI     A,UMI.1B+UMI.L8+UMI.16X
     290/    130 : 323 371                      OUT     OP.TPC          ; SET 8 BIT, NO PARITY, 1 STOP, 16X
     291/    132 :                      
     292/    132 :                      ;       SAVALL - SAVE ALL REGISTERS ON STACK.
     293/    132 :                      ;
     294/    132 :                      ;       SAVALL IS CALLED WHEN AN INTERRUPT IS ACCEPTED, IN ORDER TO
     295/    132 :                      ;       SAVE THE CONTENTS OF THE REGISTERS ON THE STACK.
     296/    132 :                      ;
     297/    132 :                      ;       ENTRY   CALLED DIRECTLY FROM INTERRUPT ROUTINE
     298/    132 :                      ;       EXIT    ALL REGISTERS PUSHED ON STACK.
     299/    132 :                      ;               IF NO YET IN MONITOR MODE, REGPTR = ADDRESS OF REGISTERS
     300/    132 :                      ;               ON STACK.
     301/    132 :                      ;               (DE) = ADDRESS OF CTLFLG
     302/    132 :                      
     303/    132 : =>FALSE                      IF      RAM
     304/    132 : =>TRUE                       ELSE
     305/    132 : (MACRO)                      ERRNZ   *-132Q
     305/    132 :                      ;       IF (*-132Q) != 0
     305/    132 :                      ;         ERROR Expression is not zero
     305/    132 :                      ;       ENDIF
     306/    132 : [1.047]                      ENDIF
     307/    132 :                      
     308/    132 : 343                  SAVALL  XTHL                    ; SET H,L ON STACK TOP
     309/    133 : 325                          PUSH    D
     310/    134 : 305                          PUSH    B
     311/    135 : 365                          PUSH    PSW
     312/    136 : 353                          XCHG                    ; (D,E) = RETURN ADDRESS
     313/    137 : 041 012 000                  LXI     H,10
     314/    142 : 071                          DAD     SP              ; (H,L) = ADDRESS OF USERS SP
     315/    143 :                      
     316/    143 :                      ;       REPLACE THE INSTRUCTIONS WITH A JUMP AROUND THE NMI VECTOR JUMP
     317/    143 :                      ;
     318/    143 :                      ;       PUSH    H               ; SET ON STACK AS REGISTER
     319/    143 :                      ;       PUSH    D               ; SET RETURN ADDRESS
     320/    143 :                      ;       LXI     D,CTLFLG
     321/    143 :                      ;       LDAX    D               ; (A) = CTLFLG
     322/    143 :                      
     323/    143 : 303 105 004                  JMP     SAVALLX         ; GO TO SAVALL EXTENSION
     324/    146 :                      
     325/    146 : =>FALSE                      IF      RAM
     326/    146 : =>TRUE                       ELSE
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 13 - 2024-04-22 06:03:31 PM


     327/    146 :                      ;       ENTRY POINT FOR THE Z80 NMI
     328/    146 :                      ;
     329/    146 :                      
     330/    146 : (MACRO)                      ERRNZ   *-66H           ; Z80 NMI ADDRESS
     330/    146 :                      ;       IF (*-66H) != 0
     330/    146 :                      ;         ERROR Expression is not zero
     330/    146 :                      ;       ENDIF
     331/    146 : [1.069]                      ENDIF
     332/    146 :                      
     333/    146 : 303 116 004          NMIENT  JMP     NMI
     334/    151 :                      
     335/    151 : =>FALSE                      IF      RAM
     336/    151 : =>TRUE                       ELSE
     337/    151 : (MACRO)                      ERRNZ   SAVALLR-151Q    ; DO NOT CHANGE ORGANIZATION
     337/    151 :                      ;       IF (SAVALLR-151Q) != 0
     337/    151 :                      ;         ERROR Expression is not zero
     337/    151 :                      ;       ENDIF
     338/    151 : [1.079]                      ENDIF
     339/    151 :                      
     340/    151 :                      SAVALLR                         ; SAVALL EXTENSION RETURN ADDRESS
     341/    151 :                      
     342/    151 : 057                          CMA
     343/    152 : 346 060                      ANI     CB.MTL+CB.SSI   ; SAVE REGISTER ADDR IF USER OR SINGLE STEP
     344/    154 : 310                          RZ                      ; RETURN IF WAS INTERRUPT OF MONITOR LOOP
     345/    155 : 041 002 000                  LXI     H,2
     346/    160 : 071                          DAD     SP              ; (H,L) = ADDRESS OF 'STACKPTR' ON STACK
     347/    161 : 042 035 040                  SHLD    REGPTR
     348/    164 : 311                          RET
     349/    165 :                      
     350/    165 :                      ;       CUI - CHECK FOR USER INTERRUPT PROCESSING.
     351/    165 :                      ;
     352/    165 :                      ;       CUI IS CALLED TO SEE IF THE USER HAS SPECIFIED PROCESSING
     353/    165 :                      ;       FOR THE CLOCK INTERRUPT.
     354/    165 :                      
     355/    165 : =>FALSE                      IF      RAM
     356/    165 : =>TRUE                       ELSE
     357/    165 : (MACRO)                      ERRNZ   *-165Q
     357/    165 :                      ;       IF (*-165Q) != 0
     357/    165 :                      ;         ERROR Expression is not zero
     357/    165 :                      ;       ENDIF
     358/    165 : [1.099]                      ENDIF
     359/    165 :                      
     360/    165 :                      ;       SET     MFLAG           ; REFERENCE TO MFLAG
     361/    165 : 012                  CUI1    LDAX    B               ; (A) = MFLAG
     362/    166 : (MACRO)                      ERRNZ   UO.CLK-1        ; CODE ASSUMED = 01
     362/    166 :                      ;       IF (UO.CLK-1) != 0
     362/    166 :                      ;         ERROR Expression is not zero
     362/    166 :                      ;       ENDIF
     363/    166 : 017                          RRC
     364/    167 : 334 037 040                  CC      UIVEC           ; IF SPECIFIED, TRANSFER TO USER
     365/    172 :                      
     366/    172 :                      ;       RETURN TO PROGRAM FROM INTERRUPT.
     367/    172 :                      
     368/    172 : =>FALSE                      IF      RAM
     369/    172 : =>TRUE                       ELSE
     370/    172 : (MACRO)                      ERRNZ  *-172Q
     370/    172 :                      ;       IF (*-172Q) != 0
     370/    172 :                      ;         ERROR Expression is not zero
     370/    172 :                      ;       ENDIF
     371/    172 : [1.112]                      ENDIF
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 14 - 2024-04-22 06:03:31 PM


     372/    172 :                      
     373/    172 : 361                  INTXIT  POP     PSW             ; REMOVE FAKE 'STACK REGISTER'
     374/    173 : 361                          POP     PSW
     375/    174 : 301                          POP     B
     376/    175 : 321                          POP     D
     377/    176 : 341                          POP     H
     378/    177 : 373                          EI
     379/    200 : 311                          RET
     380/    201 :                      
     381/    201 :                      ;       CLOCK - PROCESS CLOCK INTERRUPT
     382/    201 :                      ;
     383/    201 :                      ;       CLOCK IS ENTERED WHENEVER A 2-MILLISECOND CLOCK INTERRUPT IS
     384/    201 :                      ;       PROCESSED.
     385/    201 :                      ;
     386/    201 :                      ;       TICCNT IS INCREMENTED EVERY INTERRUPT.
     387/    201 :                      
     388/    201 : =>FALSE                      IF       RAM
     389/    201 : =>TRUE                       ELSE
     390/    201 : (MACRO)                      ERRNZ   *-201Q
     390/    201 :                      ;       IF (*-201Q) != 0
     390/    201 :                      ;         ERROR Expression is not zero
     390/    201 :                      ;       ENDIF
     391/    201 : [1.132]                      ENDIF
     392/    201 :                      
     393/    201 : 052 033 040          CLOCK   LHLD    TICCNT
     394/    204 : 043                          INX     H
     395/    205 : 042 033 040                  SHLD    TICCNT          ; INCREMENT TICCOUNT
     396/    210 :                      
     397/    210 : 072 011 040                  LDA     CTLFLG          ; CLEAR CLOCK INTERRUPT FLIP-FLOP
     398/    213 : 323 360                      OUT     OP.CTL
     399/    215 :                      
     400/    215 :                      ;       EXIT CLOCK INTERRUPT.
     401/    215 :                      
     402/    215 : 001 011 040                  LXI     B,CTLFLG
     403/    220 : 012                          LDAX    B               ; (A) = CTLFLG
     404/    221 : 346 040                      ANI     CB.MTL
     405/    223 : 302 172 000                  JNZ     INTXIT          ; IF IN MONITOR MODE
     406/    226 : 013                          DCX     B
     407/    227 : (MACRO)                      ERRNZ   CTLFLG-MFLAG-1
     407/    227 :                      ;       IF (CTLFLG-MFLAG-1) != 0
     407/    227 :                      ;         ERROR Expression is not zero
     407/    227 :                      ;       ENDIF
     408/    227 : 012                          LDAX    B               ; (A) = MFLAG
     409/    230 : (MACRO)                      ERRNZ   UO.HLT-200Q     ; ASSUME HIGH-ORDER
     409/    230 :                      ;       IF (UO.HLT-200Q) != 0
     409/    230 :                      ;         ERROR Expression is not zero
     409/    230 :                      ;       ENDIF
     410/    230 : 027                          RAL
     411/    231 : 332 270 000                  JC      CLK4            ; SKIP IT
     412/    234 :                      
     413/    234 :                      ;       NOT IN MONITOR MODE. CHECK FOR HALT
     414/    234 :                      
     415/    234 : 076 012                      MVI     A,10            ; (A) = INDEX OF *P* REG
     416/    236 : 315 052 003                  CALL    LRA.            ; LOCATE REGISTER ADDRESS
     417/    241 : 136                          MOV     E,M
     418/    242 : 043                          INX     H
     419/    243 : 126                          MOV     D,M             ; (D,E) = PC CONTENTS
     420/    244 : 033                          DCX     D
     421/    245 : 032                          LDAX    D
     422/    246 : 376 166                      CPI     MI.HLT          ; CHECK FOR HALT
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 15 - 2024-04-22 06:03:31 PM


     423/    250 : 302 165 000                  JNZ     CUI1
     424/    253 :                      
     425/    253 : 076 007                      MVI     A,A.BEL         ; DING BELL
     426/    255 : 315 302 003                  CALL    WCC
     427/    260 : 076 110                      MVI     A,'H'           ; "H" FOR HALT
     428/    262 : 315 302 003                  CALL    WCC
     429/    265 : 303 322 000                  JMP     ERROR
     430/    270 :                      
     431/    270 :                      ;       JZ      ERROR           ; IF HALT, BE IN MONITOR MODE
     432/    270 :                      
     433/    270 :                      ;       NONE OF THE ABOVE, SO ALLOW USER PROCESSING OF CLOCK INTERRUPT
     434/    270 :                      
     435/    270 : 303 165 000          CLK4    JMP     CUI1            ; ALLOW USER PROCESSING OF CLOCK
     436/    273 :                      
     437/    273 :                      
     438/    273 :                      ;       THIS IS ONLY A PORTION OF THE DYNAMIC RAM TEST!!
     439/    273 :                      ;
     440/    273 :                      ;       WAIT BEFORE MAKING ANOTHER LOOP
     441/    273 :                      
     442/    273 : 041 000 000          DYMEM6  LXI     H,0
     443/    276 : 053                  DYMEM7  DCX     H
     444/    277 : 174                          MOV     A,H
     445/    300 : 265                          ORA     L
     446/    301 : 302 276 000                  JNZ     DYMEM7          ; IF (B,C) NOT ZERO
     447/    304 :                      
     448/    304 : 303 207 007                  JMP     DYMEM4          ; TRY AGAIN BY INCREMENTING ONCE MORE
     449/    307 :                      
     450/    307 :                      ;       HAVE A FAILURE PRIOR TO REACHING END OF MEMORY!
     451/    307 :                      ;
     452/    307 : 353                  DYMEM9  XCHG
     453/    310 : 041 047 001                  LXI     H,MSG.ERR       ; DISPLAY ERROR MESSAGE
     454/    313 :                      
     455/    313 :                              CPU     Z80
     456/    313 : 335 041 315 003              LD      IX,DY9.3        ; RETURN ADDRESS
     457/    317 :                              CPU     8080
     458/    317 :                      
     459/    317 : 303 306 007                  JMP     DYMSG
     460/    322 :                      
     461/    322 :                      ;       ERROR - COMMAND ERROR.
     462/    322 :                      ;
     463/    322 :                      ;       ERROR IS CALLED AS A 'BAIL-OUT' ROUTINE.
     464/    322 :                      ;
     465/    322 :                      ;       IT RESETS THE OPERATIONAL MODE, AND RESTORES THE STACKPOINTER.
     466/    322 :                      ;
     467/    322 :                      ;       ENTRY   NONE
     468/    322 :                      ;       EXIT    TO HTR LOOP
     469/    322 :                      ;               CTLFLG SET
     470/    322 :                      ;               MFLAG CLEARED
     471/    322 :                      ;       USES    ALL
     472/    322 :                      
     473/    322 : =>FALSE                      IF      RAM
     474/    322 : =>TRUE                       ELSE
     475/    322 : (MACRO)                      ERRNZ   *-322Q
     475/    322 :                      ;       IF (*-322Q) != 0
     475/    322 :                      ;         ERROR Expression is not zero
     475/    322 :                      ;       ENDIF
     476/    322 : [1.217]                      ENDIF
     477/    322 :                      
     478/    322 : 041 010 040          ERROR   LXI     H,MFLAG
     479/    325 : 176                          MOV     A,M             ; (A) = MFLAG
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 16 - 2024-04-22 06:03:31 PM


     480/    326 : 346 275                      ANI     377Q-UO.DDU-UO.NFR ; RE-ENABLE DISPLAYS
     481/    330 : 167                          MOV     M,A             ; REPLACE
     482/    331 : 043                          INX     H
     483/    332 : 066 360                      MVI     M,CB.SSI+CB.MTL+CB.CLI+CB.SPK ; RESTORE *CTLFLG*
     484/    334 : (MACRO)                      ERRNZ   CTLFLG-.MFLAG-1
     484/    334 :                      ;       IF (CTLFLG-.MFLAG-1) != 0
     484/    334 :                      ;         ERROR Expression is not zero
     484/    334 :                      ;       ENDIF
     485/    334 : 373                          EI
     486/    335 : 052 035 040                  LHLD    REGPTR
     487/    340 : 371                          SPHL                    ; RESTORE STACK POINTER TO EMPTY STATE
     488/    341 : 315 136 002                  CALL    ALARM
     489/    344 :                      
     490/    344 :                      ;       MTR - MONITOR LOOP.
     491/    344 :                      ;
     492/    344 :                      
     493/    344 : =>FALSE                      IF      RAM
     494/    344 : =>TRUE                       ELSE
     495/    344 : (MACRO)                      ERRNZ   *-344Q
     495/    344 :                      ;       IF (*-344Q) != 0
     495/    344 :                      ;         ERROR Expression is not zero
     495/    344 :                      ;       ENDIF
     496/    344 : [1.237]                      ENDIF
     497/    344 :                      
     498/    344 : 373                  MTR     EI
     499/    345 :                      
     500/    345 : 041 345 000          MTR1    LXI     H,MTR1
     501/    350 : 345                          PUSH    H               ; SET 'MTR1' AS RETURN ADDRESS
     502/    351 : 303 113 002                  JMP     CKAUTO          ; CHECK AUTO BOOT. IF NOT CONTROL BACK TO NEXT
     503/    354 : 315 100 006          MTR.15  CALL    TYPMSG          ; PRINT 'H:'
     504/    357 :                      
     505/    357 : 315 262 003          MTR.2   CALL    RCC             ; READ A CONSOLE CHARACTER
     506/    362 : 346 137                      ANI     01011111B       ; MAKE SURE ITS UPPER CASE TO MATCH TABLE
     507/    364 : 041 025 001                  LXI     H,MTRA          ; LOOK UP CHARACTER IN *MTRA*
     508/    367 : 006 004                      MVI     B,MTRAL         ; (B) = LENGTH OF TABLE
     509/    371 : 276                  MTR.3   CMP     M               ; SEE IF CHARACTER FROM CONSOLE = TABLE ENTRY
     510/    372 : 312 014 001                  JZ      MTR.4           ; IF EQUAL
     511/    375 :                      
     512/    375 : 043                          INX     H               ; POINT TO NEXT TABLE ENTRY
     513/    376 : 043                          INX     H
     514/    377 : 043                          INX     H
     515/  1.000 : 005                          DCR     B               ; SEE IF PAST END OF TABLE
     516/  1.001 : 302 371 000                  JNZ     MTR.3           ; IF NOT PAST
     517/  1.004 :                      
     518/  1.004 : 076 007                      MVI     A,A.BEL         ; ELSE, DING ERROR
     519/  1.006 : 315 302 003                  CALL    WCC
     520/  1.011 : 303 357 000                  JMP     MTR.2           ; TRY AGAIN
     521/  1.014 :                      
     522/  1.014 : 315 302 003          MTR.4   CALL    WCC             ; WRITE CHARACTER BACK TO CONSOLE
     523/  1.017 : 043                          INX     H               ; GET ROUTINE ADDRESS LSB
     524/  1.020 : 176                          MOV     A,M
     525/  1.021 : 043                          INX     H               ; GET MSB
     526/  1.022 : 146                          MOV     H,M
     527/  1.023 : 157                          MOV     L,A             ; (H,L) = ROUTINE ADDRESS
     528/  1.024 : 351                          PCHL                    ; GO TO ROUTINE
     529/  1.025 :                      
     530/  1.025 :                      MTRA                            ; JUMP TABLE
     531/  1.025 :                      
     532/  1.025 : 107                          DB      'G'             ; GO TO USER ROUTINE
     533/  1.026 : 146 001                      DW      GO88
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 17 - 2024-04-22 06:03:31 PM


     534/  1.030 :                      
     535/  1.030 : 123                          DB      'S'             ; SUBSTITUTE MEMORY MODE
     536/  1.031 : 370 004                      DW      SUBM
     537/  1.033 :                      
     538/  1.033 : 120                          DB      'P'             ; PROGRAM COUNTER ALTER MODE
     539/  1.034 : 103 001                      DW      PCA
     540/  1.036 :                      
     541/  1.036 : 102                          DB      'B'             ; BOOT H-17 OR Z-47 DRIVE
     542/  1.037 : 256 004                      DW      BOOT
     543/  1.041 :                      
     544/  1.041 : =4O                  MTRAL   EQU     ($-MTRA)/3      ; NUMBER OF TABLE ENTRYS   /JWT 790507/
     545/  1.041 :                      
     546/  1.041 :                      ;       BSMSG   - BOOT SECONDARY DEVICE MESSAGE
     547/  1.041 :                      
     548/  1.041 : 040 123 104 000      BSMSG   DB      ' SD',0         ; 'SECONDARY DEVICE'
     549/  1.045 :                      
     550/  1.045 : 077 000              ERRMSG  DB      '?',0           ; ERROR MESSAGE
     551/  1.047 :                      
     552/  1.047 :                              ORG     447Q
     553/  1.047 :                      ;       MSG.ERR - ERROR MESSAGE FOR RAM TEST
     554/  1.047 :                      ;
     555/  1.047 :                      ;       "ERROR @ "
     556/  1.047 :                      
     557/  1.047 : 015 012 012          MSG.ERR DB      A.CR,A.LF,A.LF
     558/  1.052 : 105 122 122 117 122          DB      'ERROR @ '
           1.057 : 040 100 040        
     559/  1.062 : 000                          DB      0
     560/  1.063 :                      
     561/  1.063 :                      
     562/  1.063 :                      ;       SAE - STORE ABUSS AND EXIT.
     563/  1.063 :                      ;
     564/  1.063 :                      ;       ENTRY   (HL) = ABUSS VALUE
     565/  1.063 :                      ;       EXIT    TO (RET)
     566/  1.063 :                      ;       USES    NONE
     567/  1.063 :                      
     568/  1.063 : =>FALSE                      IF      RAM
     569/  1.063 : =>TRUE                       ELSE
     570/  1.063 : (MACRO)                      ERRNZ   *-1063Q
     570/  1.063 :                      ;       IF (*-1063Q) != 0
     570/  1.063 :                      ;         ERROR Expression is not zero
     570/  1.063 :                      ;       ENDIF
     571/  1.063 : [2.056]                      ENDIF
     572/  1.063 :                      
     573/  1.063 : 042 024 040          SAE     SHLD    ABUSS
     574/  1.066 : 311                          RET
     575/  1.067 :                      
     576/  1.067 :                      ;       PIN     -       PORT IN
     577/  1.067 :                      ;
     578/  1.067 :                      ;       PIN INPUTS A BYTE FROM DISK
     579/  1.067 :                      ;
     580/  1.067 :                      ;       ENTRY:  NONE
     581/  1.067 :                      ;
     582/  1.067 :                      ;       EXIT:   (A) = INPUT BYTE FROM Z47
     583/  1.067 :                      ;
     584/  1.067 :                      ;       USE:    AF
     585/  1.067 :                      
     586/  1.067 : 315 170 006          PIN     CALL    IN.             ; GET STATUS
     587/  1.072 : 346 200                      ANI     S.DTR           ; CHECK FOR DATA TERMINAL REQUEST
     588/  1.074 :                              CPU     Z80
     589/  1.074 : 050 371                      JR      Z,PIN           ; IF READY, WAIT
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 18 - 2024-04-22 06:03:31 PM


     590/  1.076 :                              CPU     8080
     591/  1.076 : 315 156 006                  CALL    IN1.            ; INPUT A BYTE FROM PORT
     592/  1.101 : 311                          RET
     593/  1.102 :                      
     594/  1.102 : 000                          DB      0               ; UNUSED BYTE
     595/  1.103 :                      
     596/  1.103 :                              ORG     503Q
     597/  1.103 :                      ;       PCA - PROGRAM COUNTER ALTER
     598/  1.103 :                      ;
     599/  1.103 :                      ;       PCA INPUTS AND/OR DISPLAYS THE CURRENT USER PROGRAM VALUE AND ALLOWS
     600/  1.103 :                      ;       A NEW VALUE TO BE ENTERED OR RETAINS THE CURRENT VALUE IF
     601/  1.103 :                      ;       A CR IS TYPED
     602/  1.103 :                      ;
     603/  1.103 :                      ;       ENTRY   NONE
     604/  1.103 :                      ;       EXIT    NONE
     605/  1.103 :                      ;       USES    A,D,E,H,L,F
     606/  1.103 :                      
     607/  1.103 : 041 214 006          PCA     LXI     H,MSG.PC        ; COMPLETE PC MESSAGE
     608/  1.106 : 315 100 006                  CALL    TYPMSG
     609/  1.111 : 076 012                      MVI     A,10            ; GET LOCATION OF USER PC
     610/  1.113 : 315 052 003                  CALL    LRA.
     611/  1.116 : 136                          MOV     E,M             ; (D,E) = USER PC VALUE
     612/  1.117 : 043                          INX     H
     613/  1.120 : 126                          MOV     D,M
     614/  1.121 : 353                          XCHG                    ; (H,L) = USER PC VALUE
     615/  1.122 :                      
     616/  1.122 : 315 150 005                  CALL    IROC            ; INPUT NEXT CHARACTER
     617/  1.125 : 332 137 001                  JC      PCA1            ; IF FIRST CHARACTER WAS OCTAL, INPUT NEW PC
     618/  1.130 :                      
     619/  1.130 : 315 313 005                  CALL    TOA             ; ELSE, OUTPUT CURRENT VALUE
     620/  1.133 : 315 150 005                  CALL    IROC            ; SEE IF USER WANTS TO CHANGE IT NOW
     621/  1.136 : 320                          RNC                     ; IF NOT CHANGE, EXIT
     622/  1.137 :                      
     623/  1.137 :                      ;       ENTER NEW USER PC VALUE
     624/  1.137 :                      
     625/  1.137 : 353                  PCA1    XCHG                    ; (H,L) = ADDRESS OF USER PC VALUE
     626/  1.140 : 026 015                      MVI     D,A.CR          ; END BYTE WITH A RETURN
     627/  1.142 : 315 062 003                  CALL    IOA             ; INPUT NEW ADDRESS
     628/  1.145 : 311                          RET                     ; EXIT
     629/  1.146 :                      
     630/  1.146 :                      ;       GO88 - GO TO USER ROUTINE FROM H88 MONITOR
     631/  1.146 :                      ;
     632/  1.146 :                      ;       GO88 WAITS FOR A CARRIAGE RETURN OR A NEW ADDRESS TERMINATED WITH
     633/  1.146 :                      ;       A CARRIAGE RETURN.  IF NO ADDRESS IS ENTERED, GO88 TRANSFERS
     634/  1.146 :                      ;       CONTROL TO THE ADDRESS SPECIFIED BY THE USER PC VALUE
     635/  1.146 :                      
     636/  1.146 : 041 165 006          GO88    LXI     H,MSG.GO        ; COMPLETE GO MESSAGE
     637/  1.151 : 315 100 006                  CALL    TYPMSG
     638/  1.154 : 315 150 005                  CALL    IROC            ; INPUT A RETURN OR AN OCTAL CHARACTER
     639/  1.157 : 322 177 001                  JNC     GO88.1          ; IF RETURN, GO TO CURRENT USER PC
     640/  1.162 :                      
     641/  1.162 : 365                          PUSH    PSW             ; ELSE SAVE OCTAL CHARACTER AND FLAGS
     642/  1.163 : 076 012                      MVI     A,10            ; GET ADDRESS OF USER PC
     643/  1.165 : 315 052 003                  CALL    LRA.
     644/  1.170 : 043                          INX     H               ; POINT TO MSB
     645/  1.171 : 361                          POP     PSW             ; GET FIRST CHARACTER BACK
     646/  1.172 : 026 015                      MVI     D,A.CR          ; END ADDRESS WITH A RETURN
     647/  1.174 : 315 062 003                  CALL    IOA             ; INPUT NEW GO ADDRESS
     648/  1.177 : 315 302 003          GO88.1  CALL    WCC             ; ECHO RETURN
     649/  1.202 : 076 012                      MVI     A,A.LF          ; LINE FEED
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 19 - 2024-04-22 06:03:31 PM


     650/  1.204 : 315 302 003                  CALL    WCC
     651/  1.207 : 303 222 001                  JMP     GO              ; EXECUTE USER ROUTINE
     652/  1.212 :                      
     653/  1.212 :                      ;       AUTOBO - AUTO BOOT
     654/  1.212 :                      ;
     655/  1.212 :                      ;       ENTRY:  NONE
     656/  1.212 :                      ;
     657/  1.212 :                      ;       EXIT:   (SEE 'DEVICE' ROUTINE)
     658/  1.212 :                      ;
     659/  1.212 :                      ;       USE:    ALL
     660/  1.212 :                      
     661/  1.212 : 257                  AUTOBO  XRA     A               ; SET TO PRIMARY FLAG
     662/  1.213 : 315 301 002                  CALL    DEVICE          ; CHECK DEVICE INFORMATION
     663/  1.216 : 303 336 001                  JMP     BOOT0           ; GOTO BOOT IT
     664/  1.221 :                      
     665/  1.221 : 000                          DB      0               ; UNUSED BYTE
     666/  1.222 :                      
     667/  1.222 :                              ORG     622Q
     668/  1.222 :                      ;       GO - RETURN TO USER MODE
     669/  1.222 :                      ;
     670/  1.222 :                      ;       ENTRY   NONE
     671/  1.222 :                      
     672/  1.222 : =>FALSE                      IF      RAM
     673/  1.222 : =>TRUE                       ELSE
     674/  1.222 : (MACRO)                      ERRNZ   *-1222Q
     674/  1.222 :                      ;       IF (*-1222Q) != 0
     674/  1.222 :                      ;         ERROR Expression is not zero
     674/  1.222 :                      ;       ENDIF
     675/  1.222 : [2.160]                      ENDIF
     676/  1.222 :                      
     677/  1.222 : 303 063 000          GO      JMP     GO.             ; ROUTINE IS IN WASTE SPACE
     678/  1.225 :                      
     679/  1.225 :                      ;       SSTEP - SINGLE STEP INSTRUCTION.
     680/  1.225 :                      ;
     681/  1.225 :                      ;       ENTRY   NONE
     682/  1.225 :                      
     683/  1.225 : =>FALSE                      IF      RAM
     684/  1.225 : =>TRUE                       ELSE
     685/  1.225 : (MACRO)                      ERRNZ   *-1225Q
     685/  1.225 :                      ;       IF (*-1225Q) != 0
     685/  1.225 :                      ;         ERROR Expression is not zero
     685/  1.225 :                      ;       ENDIF
     686/  1.225 : [2.171]                      ENDIF
     687/  1.225 :                      
     688/  1.225 :                      SSTEP                           ; SINGLE STEP
     689/  1.225 : 363                          DI                      ; DISABLE INTERRUPTS UNTIL THE RIGHT TIME
     690/  1.226 : 072 011 040                  LDA     CTLFLG
     691/  1.231 : 356 020                      XRI     CB.SSI          ; CLEAR SINGLE STEP INHIBIT
     692/  1.233 : 323 360                      OUT     OP.CTL          ; PRIME SINGLE STEP INTERRUPT
     693/  1.235 : 062 011 040          SST1    STA     CTLFLG          ; SET NEW FLAG VALUES
     694/  1.240 : 341                          POP     H               ; CLEAN STACK
     695/  1.241 : 303 172 000                  JMP     INTXIT          ; RETURN TO USER ROUTINE FOR STEP
     696/  1.244 :                      
     697/  1.244 :                      ;       STPRTN - SINGLE STEP RETURN
     698/  1.244 :                      
     699/  1.244 : =>FALSE                      IF      RAM
     700/  1.244 : =>TRUE                       ELSE
     701/  1.244 : (MACRO)                      ERRNZ   *-1244Q
     701/  1.244 :                      ;       IF (*-1244Q) != 0
     701/  1.244 :                      ;         ERROR Expression is not zero
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 20 - 2024-04-22 06:03:31 PM


     701/  1.244 :                      ;       ENDIF
     702/  1.244 : [2.187]                      ENDIF
     703/  1.244 :                      
     704/  1.244 :                      STPRTN
     705/  1.244 : 366 020                      ORI     CB.SSI          ; DISABLE SINGLE STEP INTERRUPTION
     706/  1.246 : 323 360                      OUT     OP.CTL          ; TURN OFF SINGLE STEP ENABLE
     707/  1.250 :                      ;       SET     CTLFLG
     708/  1.250 : 022                          STAX    D
     709/  1.251 : 346 040                      ANI     CB.MTL          ; SEE IF IN MONITOR MODE
     710/  1.253 : 302 344 000                  JNZ     MTR
     711/  1.256 : 303 042 040                  JMP     UIVEC+3         ; TRANSFER TO USER'S ROUTINE
     712/  1.261 :                      
     713/  1.261 :                      ;       NBOOT   -               NORMAL BOOT
     714/  1.261 :                      ;
     715/  1.261 :                      ;       NBOOT IS ENTERED WHEN USER TYPES 'BOOT:' COMMAND FROM MONITOR.
     716/  1.261 :                      ;       IT WILL ACCEPT THE BOOT DEVICE AS WELL AS THE UNIT NUMBER FROM
     717/  1.261 :                      ;       CONSOLE AND GO TO THE BOOT CODE.
     718/  1.261 :                      ;
     719/  1.261 :                      ;       ENTRY:  NONE
     720/  1.261 :                      ;
     721/  1.261 :                      ;       EXIT:   (AIO.UNI) = UNIT NUMBER TO BOOT
     722/  1.261 :                      ;               (PRIM) = PORT ADDRESS OF THE BOOT DEVICE
     723/  1.261 :                      ;               (TMFG) = DEVICE TYPE, =1 IS Z47, =0 IS H17
     724/  1.261 :                      ;
     725/  1.261 :                      ;       USE:    ALL
     726/  1.261 :                      
     727/  1.261 : 257                  NBOOT   XRA     A               ; SET Z FLAG TO PRIMARY DEVICE
     728/  1.262 : 315 301 002          NBOOT0  CALL    DEVICE          ; READ SWITCH TO DETERMINE BOOT DEVICE
     729/  1.265 : 315 262 003          START1  CALL    RCC             ; INPUT FROM KB
     730/  1.270 : 376 015                      CPI     A.CR            ; IF INPUT IS CR
     731/  1.272 :                              CPU     Z80
     732/  1.272 : 050 042                      JR      Z,BOOT0         ;     THEN TAKE IT AS DRIVE 0
     733/  1.274 :                              CPU     8080
     734/  1.274 : 376 060                      CPI     '0'             ; CHECK INPUT IS WITHIN DRIVE 0 - (B)
     735/  1.276 :                              CPU     Z80
     736/  1.276 : 070 007                      JR      C,WRONG         ;   IF LESS THEN 0, WRONG INPUT
     737/  1.300 :                              CPU     8080
     738/  1.300 : 270                          CMP     B
     739/  1.301 :                              CPU     Z80
     740/  1.301 : 070 036                      JR      C,BOOT5
     741/  1.303 : 010                          EX      AF,AF'          ; SAVE INPUT, CHECK PRIM OR SEC?
     742/  1.304 : 050 010                      JR      Z,NB7           ; IF PRIMARY, CHECK 'S'
     743/  1.306 : 010                          EX      AF,AF'          ; RESTORE (Z) FLAG
     744/  1.307 :                              CPU     8080
     745/  1.307 :                      WRONG
     746/  1.307 : 076 007                      MVI     A,A.BEL         ; NOT THE CASES, BEEP!
     747/  1.311 : 315 302 003                  CALL    WCC
     748/  1.314 :                              CPU     Z80
     749/  1.314 : 030 347                      JR      START1          ; AND TRY AGAIN
     750/  1.316 :                      
     751/  1.316 : 010                  NB7     EX      AF,AF'          ; RESTORE INPUT & PRIM, SEC FLAG
     752/  1.317 :                              CPU     8080
     753/  1.317 : 346 137                      ANI     01011111B       ; MASK TO UPPER CASE LETTER
     754/  1.321 : 376 123                      CPI     'S'             ; CHECK THE USER LIKE TO BOOT FROM
     755/  1.323 :                              CPU     Z80
     756/  1.323 : 040 362                      JR      NZ,WRONG        ; BOOT SECONDARY DEVICE
     757/  1.325 :                              CPU     8080
     758/  1.325 :                      
     759/  1.325 :                      ;       USER WISHES TO BOOT FROM SECONDARY DEVICE
     760/  1.325 :                      
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 21 - 2024-04-22 06:03:31 PM


     761/  1.325 :                      BSEC
     762/  1.325 : 041 041 001                  LXI     H,BSMSG         ; PRINT BOOT SECONDARY MESSAGE
     763/  1.330 : 315 100 006                  CALL    TYPMSG
     764/  1.333 : 074                          INR     A               ; SET (Z)=0 FOR SECONDARY DEVICE
     765/  1.334 :                              CPU     Z80
     766/  1.334 : 030 324                      JR      NBOOT0
     767/  1.336 :                              CPU     8080
     768/  1.336 :                      
     769/  1.336 :                      ;       SAVE THE AIO.UNI, CHECK IF THERE IS THE BOOT DEVICE AND GO!
     770/  1.336 :                      
     771/  1.336 : 257                  BOOT0   XRA     A               ; TAKE CR OR AUTO BOOT AS DRIVE 0
     772/  1.337 :                              CPU     Z80
     773/  1.337 : 030 012                      JR      BOOT6
     774/  1.341 :                              CPU     8080
     775/  1.341 :                      
     776/  1.341 : 315 302 003          BOOT5   CALL    WCC             ; PRINT UNIT NUMBER
     777/  1.344 : 326 060                      SUI     '0'             ; MAKE IT BINARY
     778/  1.346 : 107                          MOV     B,A             ; SAVE THE UNIT #
     779/  1.347 : 315 003 006                  CALL    WCR             ; WAIT FOR A CR
     780/  1.352 : 170                          MOV     A,B             ; GET UNIT NUMBER BACK
     781/  1.353 : 062 061 041          BOOT6   STA     AIO.UNI         ; STORE THE UNIT #
     782/  1.356 : 174                          MOV     A,H             ; CHECK IF NO DEVICE AT ADDR. PORT
     783/  1.357 : 247                          ANA     A
     784/  1.360 : 312 171 002                  JZ      NODEV           ; NO DEVICE
     785/  1.363 : 351                          PCHL                    ; JMP TO THE EXECUTION ROUTINE
     786/  1.364 :                      
     787/  1.364 :                      ;       Z47     -               BOOT FORM Z47 DISK DRIVE
     788/  1.364 :                      ;
     789/  1.364 :                      ;       Z47 WILL LOAD DATA FROM DISK TRACK 0 SECTOR 1 AND 2 TO
     790/  1.364 :                      ;       USER FIRST AVAILABLE RAM LOCATION. IF THE BOOT IS SUCCEED,
     791/  1.364 :                      ;       CONTROL PASS TO THAT LOCATION.
     792/  1.364 :                      ;
     793/  1.364 :                      ;       ENTRY:  (AIO.UNI) = UNIT NUMBER TO BOOT
     794/  1.364 :                      ;
     795/  1.364 :                      ;       EXIT:   NONE
     796/  1.364 :                      ;
     797/  1.364 :                      ;       USE:    ALL
     798/  1.364 :                      
     799/  1.364 :                      Z47
     800/  1.364 :                      ;       LD      (STK),SP        ; SAVE STACK POINTER FOR RE-BOOT
     801/  1.364 : 355 163                      DB      355Q,163Q
     802/  1.366 : 124 041                      DW      STK
     803/  1.370 :                      
     804/  1.370 :                      Z47A
     805/  1.370 : 373                          EI                      ; LET THE TIMER FLY
     806/  1.371 : 072 061 041                  LDA     AIO.UNI         ; GET UNIT NUMBER
     807/  1.374 : 007                          RLC                     ; SET TO SIDE/UNIT/SECTOR FORMAT
     808/  1.375 : 007                          RLC
     809/  1.376 : 007                          RLC
     810/  1.377 : 007                          RLC
     811/  2.000 : 007                          RLC
     812/  2.001 : 074                          INR     A               ; SET TO SECTOR 1
     813/  2.002 : 117                          MOV     C,A             ; SAVE SIDE/UNIT/SECTOR (SIDE=0)
     814/  2.003 : 076 002              RESET   MVI     A,W.RES         ; RESET Z47
     815/  2.005 : 315 063 006                  CALL    OUT.
     816/  2.010 :                      
     817/  2.010 :                      ; DETERMINE THE DISK IS SINGLE OR DOUBLE DENSITY
     818/  2.010 :                      
     819/  2.010 : 076 002                      MVI     A,DC.RAS        ; SEND READ AUX. STATUS COMMAND
     820/  2.012 : 315 027 006                  CALL    COM
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 22 - 2024-04-22 06:03:31 PM


     821/  2.015 : 171                          MOV     A,C             ; GET SIDE/UNIT/SECTOR
     822/  2.016 : 315 023 006                  CALL    DAT             ; SEND SECOND COMMAND BYTE
     823/  2.021 : 315 067 001                  CALL    PIN             ; GET AUX. STATUS BYTE
     824/  2.024 : 346 100                      ANI     AS.0DD          ; CHECK IT IS SINGLE OR DOUBLE DENSITY
     825/  2.026 : 007                          RLC
     826/  2.027 : 356 200                      XRI     10000000B       ; REVERSE THE 7TH BIT, MAKE THE SECTOR
     827/  2.031 : 107                          MOV     B,A             ; # TO 128 OR 256(B=0) BYTES
     828/  2.032 :                      
     829/  2.032 :                      ;       READ BOOT CODE FROM Z47
     830/  2.032 :                      
     831/  2.032 : 041 200 042                  LXI     H,USERFWA       ; BOOT DESTINATION
     832/  2.035 : 305                          PUSH    B               ; SAVE SECTOR SIZE & SIDE/UNIT/SECTOR
     833/  2.036 : 315 121 006                  CALL    RDBLCK          ; READ A SECTOR FROM DISK
     834/  2.041 : 301                          POP     B               ; GET SECTOR SIZE & SUS BACK
     835/  2.042 : 014                          INR     C               ; SET TO NEXT SECTOR
     836/  2.043 : 315 121 006                  CALL    RDBLCK          ; READ ANOTHER SECTOR
     837/  2.046 :                      
     838/  2.046 :                      ;       CHECK ANY ERROR DURING BOOT
     839/  2.046 :                      
     840/  2.046 : 315 170 006                  CALL    IN.             ; GET INTERFACE STATUS
     841/  2.051 : 346 001                      ANI     S.ERR           ; IS THERE ANY ERROR WHEN BOOT
     842/  2.053 :                              CPU     Z80
     843/  2.053 : 040 114                      JR      NZ,NODEV        ;      THEN ABORT
     844/  2.055 :                              CPU     8080
     845/  2.055 : 062 010 040                  STA     MFLAG           ; STOP TIMER
     846/  2.060 : 303 200 042                  JMP     USERFWA
     847/  2.063 :                      
     848/  2.063 :                      ;       RETRY   -               RE-BOOT Z47
     849/  2.063 :                      ;
     850/  2.063 :                      ;       RETRY IS ENTERED WHEN 3.5 SECONDS TIME OUT & BOOT Z47
     851/  2.063 :                      ;       STILL NO SUCCEED. IT RESTORE STACK & JUMP TO BOOT Z47 ROUTINE
     852/  2.063 :                      ;
     853/  2.063 :                      ;       ENTRY:  NONE
     854/  2.063 :                      ;
     855/  2.063 :                      ;       EXIT:   (HL) = (SP)
     856/  2.063 :                      ;
     857/  2.063 :                      ;       USE:    HL, SP
     858/  2.063 :                      
     859/  2.063 : 052 124 041          RETRY   LHLD    STK             ; GET OLD STACK ADDRESS
     860/  2.066 : 371                          SPHL                    ; SET TO STACK POINTER
     861/  2.067 :                              CPU     Z80
     862/  2.067 : 030 277                      JR      Z47A            ; RE-BOOT
     863/  2.071 :                              CPU     8080
     864/  2.071 :                      
     865/  2.071 :                      
     866/  2.071 :                      ;       R.SDP   - SET DEVICE PARAMETER, ALLOW TO SET DRIVE 0, 1, AND 2.
     867/  2.071 :                      ;       (MORE INFORMATION CAN BE FOUND IN H17 ROM CODE 36062A)
     868/  2.071 :                      
     869/  2.071 : 076 012              R.SDP   MVI     A,ERPTCNT
     870/  2.073 : 062 264 040                  STA     D.OECNT         ; SET MAX ERROR COUNT FOR OPERATION
     871/  2.076 : 072 061 041                  LDA     AIO.UNI         ; LOAD DRIVE NUMBER
     872/  2.101 : 365                          PUSH    PSW             ; SAVE IT
     873/  2.102 : 376 002                      CPI     2               ; IS IT DRIVE 2?
     874/  2.104 :                              CPU     Z80
     875/  2.104 : 070 002                      JR      C,R.SDP1        ; IF NOT JMP TO H17 ROM ROUTINE
     876/  2.106 :                              CPU     8080
     877/  2.106 : 076 003                      MVI     A,3
     878/  2.110 : 303 073 036          R.SDP1  JMP     SDP3
     879/  2.113 :                      
     880/  2.113 :                      ;       CKAUTO  -       CHECK IF IT IS AUTO BOOT
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 23 - 2024-04-22 06:03:31 PM


     881/  2.113 :                      ;
     882/  2.113 :                      ;       CKAUTO IS ENTERED FROM MONITOR LOOP. IT WILL CHECK IF AUTO BOOT
     883/  2.113 :                      ;       CONDITION IS TRUE.IF NOT, BACK TO MONITOR LOOP.
     884/  2.113 :                      ;               IF AUTO BOOT, JUMP TO BOOT DEVICE ROUTINE.
     885/  2.113 :                      ;
     886/  2.113 :                      ;       ENTRY:  NONE
     887/  2.113 :                      ;
     888/  2.113 :                      ;       EXIT:   NONE
     889/  2.113 :                      ;
     890/  2.113 :                      ;       USE:    ALL
     891/  2.113 :                      
     892/  2.113 : 333 362              CKAUTO  IN      H88.SW          ; GET SWITCH DATA
     893/  2.115 : 346 200                      ANI     H88S.AT         ; CHECK AUTO BOOT SWITCH BIT SET
     894/  2.117 :                              CPU     Z80
     895/  2.117 : 050 007                      JR      Z,CHAT2         ; NOT SET
     896/  2.121 :                              CPU     8080
     897/  2.121 : 041 123 041                  LXI     H,AUTOB         ; SET AUTO BOOT FLAG ADDR.
     898/  2.124 : 276                          CMP     M               ; CHECK AUTO BOOT BEFORE?
     899/  2.125 : 302 243 004                  JNZ     ATB             ; YES, AUTO BOOT
     900/  2.130 : 041 111 006          CHAT2   LXI     H,MSG.PR        ; LOAD 'HI' ADDR.
     901/  2.133 : 303 354 000                  JMP     MTR.15          ; BACK TO MONITOR LOOP
     902/  2.136 :                      
     903/  2.136 :                      
     904/  2.136 :                      ;       HORN - MAKE NOISE.
     905/  2.136 :                      ;
     906/  2.136 :                      ;       ENTRY   (A) = (MILLISECOND COUNT)/2
     907/  2.136 :                      ;       EXIT    NONE
     908/  2.136 :                      ;       USES    A,F
     909/  2.136 :                      
     910/  2.136 : (MACRO)                      ERRNZ   *-2136Q
     910/  2.136 :                      ;       IF (*-2136Q) != 0
     910/  2.136 :                      ;         ERROR Expression is not zero
     910/  2.136 :                      ;       ENDIF
     911/  2.136 :                      
     912/  2.136 :                      ALARM
     913/  2.136 :                              CPU     Z80
     914/  2.136 : 030 026                      JR      ALARMB          ; BRANCH TO A JUMP TO NOISE TO DING BELL
     915/  2.140 :                              CPU     8080
     916/  2.140 :                      
     917/  2.140 : (MACRO)                      ERRNZ   *-2140Q
     917/  2.140 :                      ;       IF (*-2140Q) != 0
     917/  2.140 :                      ;         ERROR Expression is not zero
     917/  2.140 :                      ;       ENDIF
     918/  2.140 :                      
     919/  2.140 : 365                  HORN    PUSH    PSW
     920/  2.141 : 076 200                      MVI     A,CB.SPK        ; TURN ON SPEAKER
     921/  2.143 :                      
     922/  2.143 : 343                  HRN0    XTHL                    ; SAVE (HL), (H) = COUNT
     923/  2.144 : 325                          PUSH    D               ; SAVE (DE)
     924/  2.145 : 353                          XCHG                    ; (D) = LOOP COUNT
     925/  2.146 : 041 011 040                  LXI     H,CTLFLG
     926/  2.151 : 256                          XRA     M
     927/  2.152 : 136                          MOV     E,M             ; (E) = OLD CTLFLG VALUE
     928/  2.153 : 167                          MOV     M,A             ; TURN ON HORN
     929/  2.154 : 056 033                      MVI     L,TICCNT#256
     930/  2.156 :                      
     931/  2.156 : 172                          MOV     A,D             ; (A) = CYCLE COUNT
     932/  2.157 : 206                          ADD     M
     933/  2.160 : 276                  HRN2    CMP     M               ; WAIT REQUIRED TICCOUNTS
     934/  2.161 :                              CPU     Z80
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 24 - 2024-04-22 06:03:31 PM


     935/  2.161 : 040 375                      JR      NZ,HRN2
     936/  2.163 :                              CPU     8080
     937/  2.163 :                      
     938/  2.163 : 303 045 006                  JMP     HRNX            ; JUMP TO AN EXTENSION OF HORN SO ROOM
     939/  2.166 :                                                      ; CAN BE MADE FOR A JUMP TO NOISE
     940/  2.166 :                      
     941/  2.166 : 303 053 006          ALARMB  JMP     NOISE           ; SEND A BELL TO THE CONSOLE
     942/  2.171 :                      
     943/  2.171 :                      
     944/  2.171 :                      ;       NODEV   - NO DEVICE AT THE UNIT USER INDICATE
     945/  2.171 :                      ;
     946/  2.171 :                      ;       NODEV IS ENTERED WHEN:  1. 15 SECONDS TIME OUT
     947/  2.171 :                      ;                            OR 2. NO DEVICE IS INDICATED ON SWITCH
     948/  2.171 :                      ;                            OR 3. USER HIT <DELETE> TO ABORT BOOT
     949/  2.171 :                      ;                            OR 4. BOOT ERROR
     950/  2.171 :                      ;       IT WILL EXIT TO 'ERROR' ROUTINE AND MONITOR LOOP
     951/  2.171 :                      ;
     952/  2.171 :                      ;       ENTRY:  NONE
     953/  2.171 :                      ;
     954/  2.171 :                      ;       EXIT:   (A) = 0
     955/  2.171 :                      ;
     956/  2.171 :                      ;       USE:    AF, HL
     957/  2.171 :                      
     958/  2.171 : 041 045 001          NODEV   LXI     H,ERRMSG        ; PRINT ERROR MESSAGE
     959/  2.174 : 315 100 006                  CALL    TYPMSG
     960/  2.177 : 062 010 040                  STA     MFLAG           ; STOP TIMER
     961/  2.202 : 323 177                      OUT     DP.DC           ; OFF DISK
     962/  2.204 : 303 322 000                  JMP     ERROR           ; BACK TO MONITOR LOOP
     963/  2.207 :                      
     964/  2.207 :                      
     965/  2.207 :                      ;       H17     - BOOT FROM H17 DISK SYSTEM
     966/  2.207 :                      ;                 (THIS IS THE MODIFICATION OF THE H17 BOOT ROUTINE.
     967/  2.207 :                      ;                  MORE INFORMATION CAN BE FOUND O H17 BOOT ROM 300008)
     968/  2.207 :                      ;
     969/  2.207 :                      ;       ENTRY:  NONE 
     970/  2.207 :                      ;
     971/  2.207 :                      ;       USE:    ALL
     972/  2.207 :                      
     973/  2.207 : 001 130 000          H17     LXI     B,BOOTAL        ; SET THE COUNT TO MOVE IN CONSTANTS AND VECTORS
     974/  2.212 : 021 132 037                  LXI     D,BOOTA         ; SET THE SOURCE ADDRESS
     975/  2.215 : 041 110 040                  LXI     H,D.CON         ; SET THE DESTINATION ADDRESS
     976/  2.220 : 315 252 030                  CALL    DMOVE           ; MOVE IT
     977/  2.223 :                      
     978/  2.223 :                      ;       SET ADDRESS FOR 'SET DEVICE PARAMETER' ROUTINE
     979/  2.223 :                      ;       TO HANDLE DISK DRIVE 0, 1, AND 2.
     980/  2.223 :                      
     981/  2.223 : 041 071 002                  LXI     H,R.SDP         ; SET THIS ROM ROUTINE ADDRESS
     982/  2.226 : 042 206 040                  SHLD    D.SDP           ; SET INTO RAM JUMP VECTOR
     983/  2.231 : 373                          EI                      ; RESTORE INTERRUPT
     984/  2.232 :                      
     985/  2.232 :                      ;       WAIT TILL USER INSERT THE DISK AND CLOSE THE DOOR
     986/  2.232 :                      ;       (TIMER INTERRUPT IS AFFECTED NOW)
     987/  2.232 :                      
     988/  2.232 : 006 012                      MVI    B,10             ; LOOK FOR SOME HOLE AND NO HOLE
     989/  2.234 : 315 071 002                  CALL   R.SDP            ; SELECT UNIT & MOTOR ON
     990/  2.237 : 315 271 036          H17A    CALL   WNH              ; WAIT FOR NO HOLE
     991/  2.242 : 315 235 036                  CALL   WHD              ; WAIT FOR HOLE
     992/  2.245 :                              CPU    Z80
     993/  2.245 : 020 370                      DJNZ   H17A
     994/  2.247 :                              CPU    8080
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 25 - 2024-04-22 06:03:31 PM


     995/  2.247 :                      
     996/  2.247 :                      ;       READ BOOT CODE
     997/  2.247 :                      
     998/  2.247 : 315 366 033                  CALL   R.ABORT          ; RESET THE DISK DRIVE
     999/  2.252 : 021 200 042                  LXI    D,USERFWA        ; SET THE LOAD LOCATION
    1000/  2.255 : 001 000 011                  LXI    B,9*256          ; LOAD 9 SECTORS
    1001/  2.260 : 041 000 000                  LXI    H,0              ; LOAD FROM TRACK 0 SECTOR 1
    1002/  2.263 : 315 077 034                  CALL   R.READ           ; READ DISK BOOT CODE
    1003/  2.266 :                              CPU    Z80
    1004/  2.266 : 070 301                      JR     C,NODEV          ;   ERROR ON BOOT, BACK TO 'H:'
    1005/  2.270 :                              CPU    8080
    1006/  2.270 :                      
    1007/  2.270 :                      ;       SETUP CLOCK INTERRUPT FOR H17 ONLY
    1008/  2.270 :                      
    1009/  2.270 : 041 031 034                  LXI   H,CLOCK17         ; LOAD CLOCK ROUTINE ADDRESS
    1010/  2.273 : 042 040 040                  SHLD  UIVEC+1           ; SET IT INTO VECTOR LOCATION
    1011/  2.276 : 303 200 042                  JMP   USERFWA           ; GOTO BOOT CODE
    1012/  2.301 :                      
    1013/  2.301 :                      ;      DEVICE - DETERMINE BOOT WHICH DEVICE AT WHICH PORT
    1014/  2.301 :                      ;
    1015/  2.301 :                      ;       ENTRY:  Z FLAG ( Z=1 FOR PRIMARY, Z=0 FOR SECONDARY)
    1016/  2.301 :                      ;
    1017/  2.301 :                      ;       EXIT:   HL = DEVICE BOOT EXECUTION ADDRESS
    1018/  2.301 :                      ;                     IF H=0 THEN NO DEVICE THERE
    1019/  2.301 :                      ;                     (I.E. THE EXEC. ADDR. MUST RESIDENT > 1000A)
    1020/  2.301 :                      ;               REG B = PRIMARY MAXI. DRIVE NUMBER
    1021/  2.301 :                      ;                    IF Z47, #='4'; IF HL7, #='3'
    1022/  2.301 :                      ;               (PRIM) = PRIMARY DEVICE PORT ADDRESS
    1023/  2.301 :                      ;                    IF Z47 THEN THE PORT IS EITHER 170Q OR 174Q
    1024/  2.301 :                      ;                    IF H17 THEN DON'T CARE (H17 BOOT ROM TAKE CARE IT)
    1025/  2.301 :                      ;               (TMFG) = 1 IF BOOT FROM Z47, = 0 IF FROM H17
    1026/  2.301 :                      ;
    1027/  2.301 :                      ;       USE:    ALL
    1028/  2.301 :                      
    1029/  2.301 :                              CPU     Z80
    1030/  2.301 : 010                  DEVICE  EX      AF,AF'          ; SAVE Z FLAG
    1031/  2.302 :                              CPU     8080
    1032/  2.302 :                      
    1033/  2.302 :                      ;       INITIAL VARIABLES
    1034/  2.302 :                      
    1035/  2.302 : 363                          DI                      ; NO INTERRUPT
    1036/  2.303 : 041 240 040                  LXI     H,D.RAM         ; CLEAR H17 WORK RAM AREA
    1037/  2.306 : 006 037                      MVI     B,D.RAML        ; LENGTH TO CLEAR
    1038/  2.310 : 315 212 031                  CALL    DZERO
    1039/  2.313 : 323 177                      OUT     DP.DC           ; OFF DISK
    1040/  2.315 : 062 033 040                  STA     TICCNT          ; 0 TIMER COUNTER
    1041/  2.320 : 062 122 041                  STA     MYCNT           ; 0.5 SECOND TIMER = 0
    1042/  2.323 :                      
    1043/  2.323 : 074                          INR     A               ; (A)=1
    1044/  2.324 : 062 121 041                  STA     TMFG            ; SET TIMER TO Z47 FLAG
    1045/  2.327 : (MACRO)                      ERRNZ   UO.CLK-1        ; TIMER INTERRUPT MUST = 1
    1045/  2.327 :                      ;       IF (UO.CLK-1) != 0
    1045/  2.327 :                      ;         ERROR Expression is not zero
    1045/  2.327 :                      ;       ENDIF
    1046/  2.327 : 062 010 040                  STA     MFLAG           ; ALLOW TIMER INTERRUPT
    1047/  2.332 : 041 037 040                  LXI     H,UIVEC         ; SET ALL VECTOR TO EI/RET ADDRESS
    1048/  2.335 : 066 303              BOOT2   MVI     M,MI.JMP
    1049/  2.337 : 043                          INX     H
    1050/  2.340 : 066 027                      MVI     M,EIXIT#256     ; STORE LS BYTE
    1051/  2.342 : 043                          INX     H
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 26 - 2024-04-22 06:03:31 PM


    1052/  2.343 : 066 034                      MVI     M,EIXIT/256     ; STORE MS BYTE
    1053/  2.345 : 043                          INX     H
    1054/  2.346 : 207                          ADD     A
    1055/  2.347 : 362 335 002                  JP      BOOT2
    1056/  2.352 :                      
    1057/  2.352 : 041 302 004                  LXI     H,TMOUT         ; SET TIMER INTERRUPT VECTOR
    1058/  2.355 : 042 040 040                  SHLD    UIVEC+1
    1059/  2.360 :                      
    1060/  2.360 : 076 170                      MVI     A,D.STA         ; ASSUME ALL DEVICE ARE Z47 & BOOT AT 170Q
    1061/  2.362 : 062 120 041                  STA     PRIM            ; SINCE H17 BOOT ROM WILL TAKE CARE OF ITS MATTER
    1062/  2.365 : 041 364 001                  LXI     H,Z47           ; SET Z47 BOOT ADD.
    1063/  2.370 : 006 064                      MVI     B,'4'           ; SET MAX. UNIT TO 4
    1064/  2.372 :                      
    1065/  2.372 :                      ;       DETERMINE BOOT DEVICE AND ITS INFORMATION
    1066/  2.372 :                      
    1067/  2.372 : 333 362                      IN      H88.SW          ; READ SWITCH DATA
    1068/  2.374 : 365                          PUSH    PSW             ; SAVE IN STACK
    1069/  2.375 : 346 020                      ANI     H88S.DV         ; CHECK PRIMARY DEVICE ADDRESS
    1070/  2.377 :                              CPU     Z80
    1071/  2.377 : 010                          EX      AF,AF'          ; SAVE Z FLAG & GET Z' FOR PRIM. SEC. FLAG
    1072/  3.000 : 040 005                      JR      NZ,SECOND       ; IT SECONDARY
    1073/  3.002 : 010                          EX      AF,AF'
    1074/  3.003 : 040 033                      JR      NZ,B170
    1075/  3.005 : 030 003                      JR      B174
    1076/  3.007 : 010                  SECOND  EX      AF,AF'
    1077/  3.010 : 050 026                      JR      Z,B170          ; BOOT PRIMARY AT 170Q
    1078/  3.012 :                              CPU     8080
    1079/  3.012 : 076 174              B174    MVI     A,UP.DP         ; PRIMARY DEVICE IS AT 174Q
    1080/  3.014 : 062 120 041                  STA     PRIM
    1081/  3.017 : 361                          POP     PSW             ; GET SWITCH DATA BACK
    1082/  3.020 : 346 003                      ANI     H88S.4          ; CHECK THIS IS Z47 OR H17
    1083/  3.022 :                              CPU     Z80
    1084/  3.022 : 050 004                      JR      Z,BH17          ; IT H17
    1085/  3.024 :                              CPU     8080
    1086/  3.024 : 075                          DCR     A
    1087/  3.025 : 310                  DEV2    RZ                      ; IT IS Z47
    1088/  3.026 : 045                          DCR     H               ; NO DEVICE THERE, Z47 LOCATION MUST ON 1***A
    1089/  3.027 : 311                          RET
    1090/  3.030 : (MACRO)                      ERRNZ   Z47/256-1
    1090/  3.030 :                      ;       IF (Z47/256-1) != 0
    1090/  3.030 :                      ;         ERROR Expression is not zero
    1090/  3.030 :                      ;       ENDIF
    1091/  3.030 :                      
    1092/  3.030 :                      ;       PRIMARY DEVICE IS H17
    1093/  3.030 :                      
    1094/  3.030 : 041 207 002          BH17    LXI     H,H17           ; SET TO H17 EXECUTION LOCATION
    1095/  3.033 : 005                          DCR     B               ; SET TO MAX 3 DRIVE
    1096/  3.034 : 062 121 041                  STA     TMFG            ; SET TIMER INTERRUPT = 0 FOR H17
    1097/  3.037 : 311                          RET
    1098/  3.040 :                      
    1099/  3.040 :                      ;       PRIMARY DEVICE IS AT PORT 170Q
    1100/  3.040 :                      
    1101/  3.040 : 361                  B170    POP     PSW             ; GET SWITCH DATA
    1102/  3.041 : 346 014                      ANI     H88S.0          ; CHECK ANY DEVICE IN 170Q
    1103/  3.043 : 376 004                      CPI     00000100B       ; CHECK IF IT IS Z47
    1104/  3.045 :                              CPU     Z80
    1105/  3.045 : 030 356                      JR      DEV2
    1106/  3.047 :                              CPU     8080
    1107/  3.047 :                      
    1108/  3.047 :                              ORG     1447Q
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 27 - 2024-04-22 06:03:31 PM


    1109/  3.047 :                      ;       LRA - LOCATE REGISTER ADDRESS
    1110/  3.047 :                      ;
    1111/  3.047 :                      ;       ENTRY   NONE.
    1112/  3.047 :                      ;       EXIT    (A) = REGISTER INDEX
    1113/  3.047 :                      ;               (H,L) = STORAGE ADDRESS
    1114/  3.047 :                      ;               (D,E) = (O,A)
    1115/  3.047 :                      ;       USES    A,D,E,H,L,F
    1116/  3.047 :                      
    1117/  3.047 : =>FALSE                      IF      RAM
    1118/  3.047 : =>TRUE                       ELSE
    1119/  3.047 : (MACRO)                      ERRNZ   *-3047Q
    1119/  3.047 :                      ;       IF (*-3047Q) != 0
    1119/  3.047 :                      ;         ERROR Expression is not zero
    1119/  3.047 :                      ;       ENDIF
    1120/  3.047 : [4.093]                      ENDIF
    1121/  3.047 :                      
    1122/  3.047 : 072 005 040          LRA     LDA     REGI
    1123/  3.052 : 137                  LRA.    MOV     E,A
    1124/  3.053 : 026 000                      MVI     D,0
    1125/  3.055 : 052 035 040                  LHLD    REGPTR
    1126/  3.060 : 031                          DAD     D               ; (DE) = (REGPTR)+(REGI)
    1127/  3.061 : 311                          RET
    1128/  3.062 :                      
    1129/  3.062 :                      ;       IOA - INPUT OCTAL ADDRESS.
    1130/  3.062 :                      ;
    1131/  3.062 :                      ;       ENTRY   (H,L) = ADDRESS OF RECEPTION DOUBLE BYTE.
    1132/  3.062 :                      ;               (D) = TERMINATING CHARACTER
    1133/  3.062 :                      ;       EXIT    NONE
    1134/  3.062 :                      ;       USES    A,D,E,H,L,F
    1135/  3.062 :                      
    1136/  3.062 : =>FALSE                      IF      RAM
    1137/  3.062 : =>TRUE                       ELSE
    1138/  3.062 : (MACRO)                      ERRNZ   *-3062Q
    1138/  3.062 :                      ;       IF (*-3062Q) != 0
    1138/  3.062 :                      ;         ERROR Expression is not zero
    1138/  3.062 :                      ;       ENDIF
    1139/  3.062 : [4.112]                      ENDIF
    1140/  3.062 :                      
    1141/  3.062 : 303 176 005          IOA     JMP     IOA1
    1142/  3.065 : 000                          NOP                     ; RETAIN H8 ORG
    1143/  3.066 :                      
    1144/  3.066 :                      ;       IOB - INPUT OCTAL BYTE
    1145/  3.066 :                      ;
    1146/  3.066 :                      ;       READ ONE OCTAL BYTE FROM THE KEYSET.
    1147/  3.066 :                      ;
    1148/  3.066 :                      ;       ENTRY   (H,L) = ADDRESS OF BYTE TO HOLD VALUE
    1149/  3.066 :                      ;               'C' SET IF FIRST DIGIT N (A)
    1150/  3.066 :                      ;       EXIT    NONE
    1151/  3.066 :                      ;       USES    A,D,E,H,L,F
    1152/  3.066 :                      
    1153/  3.066 : =>FALSE                      IF      RAM
    1154/  3.066 : =>TRUE                       ELSE
    1155/  3.066 : (MACRO)                      ERRNZ   *-3066Q
    1155/  3.066 :                      ;       IF (*-3066Q) != 0
    1155/  3.066 :                      ;         ERROR Expression is not zero
    1155/  3.066 :                      ;       ENDIF
    1156/  3.066 : [4.129]                      ENDIF
    1157/  3.066 :                      
    1158/  3.066 : 066 000              IOB     MVI     M,0             ; ZERO OUT OLD VALUE
    1159/  3.070 : 324 262 003          IOB1    CNC     RCC             ; READ CONSOLE CHARACTER
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 28 - 2024-04-22 06:03:31 PM


    1160/  3.073 :                      
    1161/  3.073 :                      ;       SEE IF CHARACTER IS A VALID OCTAL VALUE
    1162/  3.073 :                      ;
    1163/  3.073 : 376 060                      CPI     '0'             ; LESS THAN ZERO?
    1164/  3.075 : 332 135 003                  JC      IOB2            ; IF (A) < 0, SEE IF A TERMINATING CHARACTER
    1165/  3.100 : 376 070                      CPI     '8'             ; GREATER THAN 7?
    1166/  3.102 : 322 070 003                  JNC     IOB1            ; IF TOO LARGE, TRY AGAIN
    1167/  3.105 :                      
    1168/  3.105 :                      ;       HAVE AN OCTAL DIGIT
    1169/  3.105 :                      ;
    1170/  3.105 : 315 302 003                  CALL    WCC             ; ECHO CHARACTER
    1171/  3.110 : 346 007                      ANI     00000111B       ; MASK FOR BINARY VALUE
    1172/  3.112 : 137                          MOV     E,A             ; (E) = VALUE
    1173/  3.113 : 176                          MOV     A,M             ; GET OLD VALUE
    1174/  3.114 : 007                          RLC                     ; SHIFT 3
    1175/  3.115 : 007                          RLC
    1176/  3.116 : 007                          RLC
    1177/  3.117 : 303 126 003                  JMP     IOB1.5          ; JUMP AROUND AN H88/H89 TO H8 FAKE ROUTINE
    1178/  3.122 :                      
    1179/  3.122 :                      ;       FAKE OUT ROUTINE FOR CALLERS OF *DOD* FROM THE H8 FRONT PANEL
    1180/  3.122 :                      
    1181/  3.122 : =>FALSE                      IF      RAM
    1182/  3.122 : =>TRUE                       ELSE
    1183/  3.122 : (MACRO)                      ERRNZ    *-3122Q
    1183/  3.122 :                      ;       IF (*-3122Q) != 0
    1183/  3.122 :                      ;         ERROR Expression is not zero
    1183/  3.122 :                      ;       ENDIF
    1184/  3.122 : [4.157]                      ENDIF
    1185/  3.122 :                      
    1186/  3.122 : 043                  DOD     INX      H
    1187/  3.123 : 043                          INX      H
    1188/  3.124 : 043                          INX      H
    1189/  3.125 : 311                          RET
    1190/  3.126 :                      
    1191/  3.126 :                      ;       CONTINUE
    1192/  3.126 :                      
    1193/  3.126 : 346 370              IOB1.5  ANI     11111000B       ; TOSS OLD LSB DIGIT
    1194/  3.130 : 263                          ORA     E               ; REPLACE WITH NEW VALUE
    1195/  3.131 : 167                          MOV     M,A
    1196/  3.132 : 303 070 003                  JMP     IOB1            ; INPUT ANOTHER CHARACTER
    1197/  3.135 :                      
    1198/  3.135 :                      ;       CHECK FOR A CARRIAGE RETURN TO TERMINATE BYTE
    1199/  3.135 :                      ;
    1200/  3.135 : 376 015              IOB2    CPI     A.CR            ; CARRIAGE RETURN?
    1201/  3.137 : 310                          RZ                      ; RETURN IF CARRIAGE RETURN         /JWT 790507/
    1202/  3.140 : 257                          XRA     A               ; CLEAR CARRY                       /JWT 790507/
    1203/  3.141 :                              CPU     Z80
    1204/  3.141 : 030 325                      JR      IOB1            ; GET A NEW CHARACTER               /JWT 790507/
    1205/  3.143 :                              CPU     8080
    1206/  3.143 :                      
    1207/  3.143 :                      
    1208/  3.143 :                      ;       DYASC - DYNAMIC RAM ASCII OUTPUT TO CONSOLE
    1209/  3.143 :                      ;
    1210/  3.143 :                      ;       ENTRY:  (A) = CHARACTER TO OUTPUT
    1211/  3.143 :                      ;               (IY) = RETURN ADDRESS
    1212/  3.143 :                      ;
    1213/  3.143 :                      ;       EXIT:   TO (IY)
    1214/  3.143 :                      ;       USES:   A,C,F
    1215/  3.143 :                      
    1216/  3.143 :                      DYASC
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 29 - 2024-04-22 06:03:31 PM


    1217/  3.143 :                              CPU     Z80
    1218/  3.143 : 010                          EX      AF,AF'          ; SAVE CHARACTER TO OUTPUT
    1219/  3.144 :                              CPU     8080
    1220/  3.144 : 333 355              DYASC1  IN      SC.ACE+UR.LSR   ; READ LINE STATUS REGISTER
    1221/  3.146 : 346 040                      ANI     UC.THE
    1222/  3.150 : 312 144 003                  JZ      DYASC1          ; WAIT IF UART CAN'T HOLD ANOTHER CHARACTER
    1223/  3.153 :                      
    1224/  3.153 :                              CPU     Z80
    1225/  3.153 : 010                          EX      AF,AF'          ; GET CHARACTER TO OUTPUT
    1226/  3.154 :                              CPU     8080
    1227/  3.154 : 323 350                      OUT     SC.ACE+UR.THR   ; OUTPUT TO UART
    1228/  3.156 :                              CPU     Z80
    1229/  3.156 : 375 351                      JP      (IY)            ; RETURN TO CALLER
    1230/  3.160 :                              CPU     8080
    1231/  3.160 :                      
    1232/  3.160 :                      ;       DYBYT - DYNAMIC RAM BYTE OUTPUT
    1233/  3.160 :                      ;
    1234/  3.160 :                      ;       ENTRY:  (A) = BYTE TO OUTPUT AS OCTAL
    1235/  3.160 :                      ;               (IX) = RETURN ADDRESS
    1236/  3.160 :                      ;       EXIT:   TO (IX)
    1237/  3.160 :                      ;       USES    A,C,IF.F
    1238/  3.160 :                      
    1239/  3.160 : 117                  DYBYT   MOV     C,A             ; SAVE CHARACTER
    1240/  3.161 : 346 300                      ANI     11000000B       ; OUTPUT FIRST CHARACTER OF OCTAL VALUE
    1241/  3.163 : 017                          RRC
    1242/  3.164 : 017                          RRC
    1243/  3.165 : 017                          RRC
    1244/  3.166 : 017                          RRC
    1245/  3.167 : 017                          RRC
    1246/  3.170 : 017                          RRC
    1247/  3.171 : 366 060                      ORI     00110000B       ; MAKE INTO ASCII
    1248/  3.173 :                      
    1249/  3.173 :                              CPU     Z80
    1250/  3.173 : 375 041 202 003              LD      IY,DYBYT.2
    1251/  3.177 :                              CPU     8080
    1252/  3.177 :                      
    1253/  3.177 : 303 143 003                  JMP     DYASC
    1254/  3.202 :                      
    1255/  3.202 : 171                  DYBYT.2 MOV     A,C             ; OUTPUT SECOND CHARACTER
    1256/  3.203 : 346 070                      ANI     00111000B
    1257/  3.205 : 017                          RRC
    1258/  3.206 : 017                          RRC
    1259/  3.207 : 017                          RRC
    1260/  3.210 : 366 060                      ORI     00110000B       ; MAKE INTO ASCII
    1261/  3.212 :                      
    1262/  3.212 :                              CPU     Z80
    1263/  3.212 : 375 041 221 003              LD      IY,DYBYT.4      ; RETURN ADDRESS
    1264/  3.216 :                              CPU     8080
    1265/  3.216 : 303 143 003                  JMP     DYASC
    1266/  3.221 :                      
    1267/  3.221 : 171                  DYBYT.4 MOV     A,C             ; OUTPUT LAST CHARACTER
    1268/  3.222 : 346 007                      ANI     00000111B
    1269/  3.224 : 366 060                      ORI     00110000B       ; MAKE ASCII
    1270/  3.226 :                      
    1271/  3.226 :                              CPU     Z80
    1272/  3.226 : 375 041 235 003              LD      IY,DYBYT.6      ; RETURN ADDRESS
    1273/  3.232 :                              CPU     8080
    1274/  3.232 :                      
    1275/  3.232 : 303 143 003                  JMP     DYASC
    1276/  3.235 :                      
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 30 - 2024-04-22 06:03:31 PM


    1277/  3.235 :                      DYBYT.6
    1278/  3.235 :                              CPU     Z80
    1279/  3.235 : 335 351                      JP      (IX)            ; RETURN TO CALLER
    1280/  3.237 :                              CPU     8080
    1281/  3.237 :                      
    1282/  3.237 :                      ;       MSQ.PAS - PASS MESSAGE FOR DYNAMIC RAM TEST
    1283/  3.237 :                      ;
    1284/  3.237 :                      
    1285/  3.237 : 015 012              MSG.PAS DB      A.CR,A.LF
    1286/  3.241 : 040 040 040 040 040          DB      '     Pass =   '
           3.246 : 120 141 163 163 040
           3.253 : 075 040 040 040    
    1287/  3.257 : 000                          DB      0
    1288/  3.260 :                      
    1289/  3.260 :                      
    1290/  3.260 :                      ;       RCK - READ CONSOLE KEYPAD
    1291/  3.260 :                      ;
    1292/  3.260 :                      ;       RCK IS CALLED TO READ A KEYSTROKE FROM THE CONSOLE FRONT PANEL KEYPAD.
    1293/  3.260 :                      ;       SINCE THE H88/H89 DOES NOT HAVE A FRONT PANEL, THIS ROUTINE IS PROVIDED
    1294/  3.260 :                      ;       ONLY TO MAINTAIN COMPATIBILITY WITH PAM-8.
    1295/  3.260 :                      ;       RCK WILL IMMEDIATELY RETURN WITH A VALUE OF 0 (ZERO) IN THE ACCUMULATOR.
    1296/  3.260 :                      ;
    1297/  3.260 :                      ;       ENTRY   NONE
    1298/  3.260 :                      ;       EXIT    (A) = 0
    1299/  3.260 :                      ;       USES    A,F
    1300/  3.260 :                      
    1301/  3.260 :                      ;       RCK MUST HAVE SAME ENTRY AS RCK IN PAM-8
    1302/  3.260 : (MACRO)                      ERRNZ   *-3260Q
    1302/  3.260 :                      ;       IF (*-3260Q) != 0
    1302/  3.260 :                      ;         ERROR Expression is not zero
    1302/  3.260 :                      ;       ENDIF
    1303/  3.260 :                      
    1304/  3.260 : 257                  RCK     XRA     A
    1305/  3.261 : 311                          RET
    1306/  3.262 :                      
    1307/  3.262 :                      
    1308/  3.262 :                      ;       RCC - READ CONSOLE CHARACTER.
    1309/  3.262 :                      ;
    1310/  3.262 :                      ;       RCC IS CALLED TO READ A KEYSTROKE FROM THE CONSOLE.
    1311/  3.262 :                      ;       IF A RUBOUT/DELETE IS RECEIVED, EXIT IT TO *ERROR*.
    1312/  3.262 :                      ;
    1313/  3.262 :                      ;       ENTRY   NONE
    1314/  3.262 :                      ;       EXIT    TO ERROR - IF A DELETE OR RUBOUT IS ENCOUNTERED
    1315/  3.262 :                      ;               TO CALLER - WHEN A KEY IS HIT
    1316/  3.262 :                      ;               (A) = ASCII KEY VALUE
    1317/  3.262 :                      ;       USES    A,F
    1318/  3.262 :                      
    1319/  3.262 :                      RCC
    1320/  3.262 :                      
    1321/  3.262 : 333 355              RCC1    IN      SC.ACE+UR.LSR   ; INPUT ACE LINE STATUS REGISTER
    1322/  3.264 : 346 001                      ANI     UC.DR           ; SEE IF THERE IS A DATA READY
    1323/  3.266 :                              CPU     Z80
    1324/  3.266 : 050 372                      JR      Z,RCC1
    1325/  3.270 :                              CPU     8080
    1326/  3.270 :                      
    1327/  3.270 : 333 350                      IN      SC.ACE+UR.RBR   ; ELSE, INPUT CHARACTER
    1328/  3.272 : 346 177                      ANI     01111111B       ; TOSS ANY PARITY
    1329/  3.274 : 376 177                      CPI     A.DEL
    1330/  3.276 : 312 322 000                  JZ      ERROR           ; IF RUBOUT, EXIT TO CALLER
    1331/  3.301 :                      
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 31 - 2024-04-22 06:03:31 PM


    1332/  3.301 : 311                          RET                     ; ELSE, EXIT TO CALLER
    1333/  3.302 :                      
    1334/  3.302 :                      ;       WCC - WRITE CONSOLE CHARACTER
    1335/  3.302 :                      ;
    1336/  3.302 :                      ;       WRITE A CHARACTER TO THE CONSOLE UART PORT
    1337/  3.302 :                      ;
    1338/  3.302 :                      ;       ENTRY   (A) = ASCII CHARACTER TI OUTPUT
    1339/  3.302 :                      ;       EXIT    NONE
    1340/  3.302 :                      ;       USES    NONE
    1341/  3.302 :                      
    1342/  3.302 : 365                  WCC     PUSH    PSW             ; SAVE CHARACTER
    1343/  3.303 : 333 355              WCC1    IN      SC.ACE+UR.LSR   ; INPUT ACE STATUS
    1344/  3.305 : 346 040                      ANI     UC.THE          ; SEE IF TRANSMITTER HOLDING IS EMPTY
    1345/  3.307 :                              CPU     Z80
    1346/  3.307 : 050 372                      JR      Z,WCC1
    1347/  3.311 :                              CPU     8080
    1348/  3.311 :                      
    1349/  3.311 : 361                          POP     PSW             ; GET CHARACTER
    1350/  3.312 : 323 350                      OUT     SC.ACE+UR.THR   ; OUTPUT TO CONSOLE
    1351/  3.314 : 311                          RET
    1352/  3.315 :                      
    1353/  3.315 :                      
    1354/  3.315 :                      ;       THE FOLLOWING IS ONLY A PORTION OF THE DYNAMIC RAM TEST!!
    1355/  3.315 :                      ;
    1356/  3.315 : 353                  DY9.3   XCHG
    1357/  3.316 : 174                          MOV     A,H             ; OUTPUT MSB
    1358/  3.317 :                      
    1359/  3.317 :                              CPU     Z80
    1360/  3.317 : 335 041 326 003              LD      IX,DY9.4        ; RETURN ADDRESS
    1361/  3.323 :                              CPU     8080
    1362/  3.323 :                      
    1363/  3.323 : 303 160 003                  JMP     DYBYT
    1364/  3.326 :                      
    1365/  3.326 : 175                  DY9.4   MOV     A,L             ; OUTPUT LSB
    1366/  3.327 :                      
    1367/  3.327 :                              CPU     Z80
    1368/  3.327 : 335 041 335 003              LD      IX,DY9.5        ; RETURN ADDRESS
    1369/  3.333 : 030 223                      JR      DYBYT
    1370/  3.335 :                              CPU     8080
    1371/  3.335 :                      
    1372/  3.335 : 353                  DY9.5   XCHG                    ; SAVE ERROR ADDRESS
    1373/  3.336 : 041 362 007                  LXI     H,MSG.EQ        ; OUTPUT ' = '
    1374/  3.341 :                      
    1375/  3.341 :                              CPU     Z80
    1376/  3.341 : 335 041 350 003              LD      IX,DY9.8        ; RETURN ADDRESS
    1377/  3.345 :                              CPU     8080
    1378/  3.345 :                      
    1379/  3.345 : 303 306 007                  JMP     DYMSG           ; OUTPUT STRING
    1380/  3.350 :                      
    1381/  3.350 : 032                  DY9.8   LDAX    D               ; OUTPUT RAM CONTENTS
    1382/  3.351 :                      
    1383/  3.351 :                              CPU     Z80
    1384/  3.351 : 335 041 360 003              LD      IX,DYMEM10      ; RETURN ADDRESS
    1385/  3.355 :                              CPU     8080
    1386/  3.355 :                      
    1387/  3.355 : 303 160 003                  JMP     DYBYT
    1388/  3.360 :                      
    1389/  3.360 : 076 007              DYMEM10 MVI     A,A.BEL         ; DING BELL
    1390/  3.362 :                      
    1391/  3.362 :                              CPU     Z80
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 32 - 2024-04-22 06:03:31 PM


    1392/  3.362 : 375 041 265 007              LD      IY,DY10.5       ; RETURN ADDRESS
    1393/  3.366 :                              CPU     8080
    1394/  3.366 :                      
    1395/  3.366 : 303 143 003                  JMP     DYASC
    1396/  3.371 :                      
    1397/  3.371 :                      
    1398/  3.371 :                      ;       IO ROUTINES TO BE COPIED INTO AND USED IN RAM.
    1399/  3.371 :                      ;
    1400/  3.371 :                      ;       MUST CONTINUE TO 3777A FOR PROPER COPY.
    1401/  3.371 :                      ;       THE TABLE MUST ALSO BE BACKWARDS TO THE FINAL RAM
    1402/  3.371 :                      
    1403/  3.371 : =>FALSE                      IF      RAM
    1404/  3.371 : =>TRUE                       ELSE
    1405/  3.371 : (MACRO)                      ERRNZ   4000Q-7-*
    1405/  3.371 :                      ;       IF (4000Q-7-*) != 0
    1405/  3.371 :                      ;         ERROR Expression is not zero
    1405/  3.371 :                      ;       ENDIF
    1406/  3.371 : [5.123]                      ENDIF
    1407/  3.371 :                      
    1408/  3.371 :                      PRSROM
    1409/  3.371 : 001                          DB      1               ; REFIND
    1410/  3.372 : 000                          DB      0               ; CTLFLG
    1411/  3.373 : 000                          DB      0               ; MFLAG
    1412/  3.374 : 000                          DB      0               ; DSPMOD
    1413/  3.375 : 000                          DB      0               ; DSPROT
    1414/  3.376 : 012                          DB      10              ; REGI
    1415/  3.377 : 311                          DB      MI.RET
    1416/  4.000 :                      
    1417/  4.000 : =>FALSE                      IF      RAM
    1418/  4.000 : =>TRUE                       ELSE
    1419/  4.000 : (MACRO)                      ERRNZ   *-4000Q
    1419/  4.000 :                      ;       IF (*-4000Q) != 0
    1419/  4.000 :                      ;         ERROR Expression is not zero
    1419/  4.000 :                      ;       ENDIF
    1420/  4.000 : [5.137]                      ENDIF
    1421/  4.000 :                      
    1422/  4.000 :                      ;       INIT0X - EXTENSION OF INIT0 TO SUPPORT H88
    1423/  4.000 :                      
    1424/  4.000 : 076 002              INIT0X  MVI     A,00000010B
    1425/  4.002 : 323 362                      OUT     H88.CTL
    1426/  4.004 :                      
    1427/  4.004 :                      ;       SET UP ACE FOR CONSOLE COMMUNICATIONS
    1428/  4.004 :                      ;
    1429/  4.004 : 076 200                      MVI     A,UC.DLA        ; SET DIVISOR LATCH ACCESS BIT
    1430/  4.006 : 323 353                      OUT     SC.ACE+UR.LCR
    1431/  4.010 : 041 101 004                  LXI     H,BRTAB         ; (H,L) = BEGINNING OF BAUD RATE TABLE
    1432/  4.013 : 333 362                      IN      H88.SW          ; INPUT SWITCHES FOR DESIRED BAUD RATE
    1433/  4.015 : 346 100                      ANI     H88S.BR         ; MASK FOR BAUD RATE SWITCHES ONLY
    1434/  4.017 : 017                          RRC                     ; SHIFT FOR A *2 FOR TABLE
    1435/  4.020 : 017                          RRC
    1436/  4.021 : 017                          RRC
    1437/  4.022 : 017                          RRC
    1438/  4.023 : 017                          RRC
    1439/  4.024 : 205                          ADD     L               ; ADD DISPLACEMENT FROM BEGINNING OF TABLE
    1440/  4.025 : 157                          MOV     L,A
    1441/  4.026 : 176                          MOV     A,M             ; GET MSB OF DIVISOR
    1442/  4.027 : 323 351                      OUT     SC.ACE+UR.DLM
    1443/  4.031 : 043                          INX     H               ; GET LSB
    1444/  4.032 : 176                          MOV     A,M
    1445/  4.033 : 323 350                      OUT     SC.ACE+UR.DLL
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 33 - 2024-04-22 06:03:31 PM


    1446/  4.035 : 076 003                      MVI     A,UC.8BW        ; SET 8 BITS, 1 STOP BIT, NO PARITY
    1447/  4.037 : 323 353                      OUT     SC.ACE+UR.LCR
    1448/  4.041 : 076 000                      MVI     A,0             ; SET NO INTERRUPTS
    1449/  4.043 : 323 351                      OUT     SC.ACE+UR.IER
    1450/  4.045 :                      
    1451/  4.045 :                      ;       WAIT A WHILE TO ALLOW THE CONSOLE RESET TO FINISH SO IT CAN
    1452/  4.045 :                      ;       ACCEPT THE FIRST PROMPT
    1453/  4.045 :                      ;
    1454/  4.045 : 001 000 065                  LXI     B,32400Q        ; APPROX. 100 MS
    1455/  4.050 : 015                  INIT0X1 DCR     C
    1456/  4.051 :                              CPU     Z80
    1457/  4.051 : 040 375                      JR      NZ,INIT0X1
    1458/  4.053 :                      
    1459/  4.053 : 020 373                      DJNZ    INIT0X1
    1460/  4.055 :                              CPU     8080
    1461/  4.055 :                      
    1462/  4.055 :                      ;       INPUT SWITCH TO SEE IF TO BEGIN OPERATION OF MEMORY TEST
    1463/  4.055 :                      ;
    1464/  4.055 : 333 362                      IN      H88.SW          ; GET SWITCHES
    1465/  4.057 : 346 040                      ANI     H88S.M          ; MASK FOR MEMORY TEST ONLY
    1466/  4.061 : 312 116 007                  JZ      DYMEM           ; IF TO PERFORM MEMORY TESTS
    1467/  4.064 :                      
    1468/  4.064 :                      ;       REPLACE WHAT WAS ORIGINALLY AT THE JUMP WHICH GOT US HERE
    1469/  4.064 :                      ;
    1470/  4.064 : 021 371 003                  LXI     D,PRSROM        ; (DE) = ROM COPY OF PRS CODE
    1471/  4.067 : 257                          XRA     A
    1472/  4.070 : 062 123 041                  STA     AUTOB           ; INITIAL AUTO BOOT FLAG
    1473/  4.073 : 062 066 040                  STA     DATA            ; INITIAL 362Q PORT DATA SAVE BYTE
    1474/  4.076 : 303 003 000                  JMP     INIT0.0         ; RETURN TO ORIGINAL CODE
    1475/  4.101 :                      
    1476/  4.101 :                      ;       BRTAB - BAUD RATE DIVISOR TABLE
    1477/  4.101 :                      ;
    1478/  4.101 :                      BRTAB
    1479/  4.101 :                      
    1480/  4.101 : 000 014              BR96    DB      0,12            ;   9600 BAUD
    1481/  4.103 : 000 006              BR19.2  DB      0,6             ; 19,200 BAUD
    1482/  4.105 :                      ;BR38.4 DB      0,3             ; 38,400 BAUD
    1483/  4.105 :                      ;BR56.0 DB      0,2             ; 56,000 BAUD
    1484/  4.105 :                      
    1485/  4.105 :                      ;       SET     */256
    1486/  4.105 : (MACRO)                      ERRNZ   ERTAB/256-.     ; TABLE MUST BE IN ONE PAGE
    1486/  4.105 :                      ;       IF (ERTAB/256-.) != 0
    1486/  4.105 :                      ;         ERROR Expression is not zero
    1486/  4.105 :                      ;       ENDIF
    1487/  4.105 :                      
    1488/  4.105 :                      ;       SAVALLX - SAVALL EXTENSION TO MAKE ROOM FOR A JUMP TO THE NMI HANDLER
    1489/  4.105 :                      
    1490/  4.105 :                      SAVALLX                         ; REPLACE OLD CODE
    1491/  4.105 : 345                          PUSH     H              ; SET ON STACK AS 'REGISTER'
    1492/  4.106 : 325                          PUSH     D              ; SET RETURN ADDRESS
    1493/  4.107 : 021 011 040                  LXI      D,CTLFLG
    1494/  4.112 : 032                          LDAX     D
    1495/  4.113 : 303 151 000                  JMP      SAVALLR        ; RETURN TO OLD CODE
    1496/  4.116 :                      
    1497/  4.116 :                      ;       NMI - NON MASKABLE INTERRUPT
    1498/  4.116 :                      ;
    1499/  4.116 :                      ;       NMI IS USED AS THE TRAP FOR ALL ILLEGAL PORT REQUESTS
    1500/  4.116 :                      ;
    1501/  4.116 :                      ;       PORT ADDRESSES TRAPPED ARE:
    1502/  4.116 :                      ;
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 34 - 2024-04-22 06:03:31 PM


    1503/  4.116 :                      ;                       IN 360Q FRONT PANEL KEYBOARD INPUT
    1504/  4.116 :                      ;                      OUT 360Q FRONT PANEL CONTROL
    1505/  4.116 :                      ;                      OUT 361Q FRONT PANEL DISPLAY CONTROL
    1506/  4.116 :                      ;                   IN/OUT 372Q CONSOLE DATA FOR AN 8251A
    1507/  4.116 :                      ;                      OUT 373Q CONSOLE CONTROL FOR AN 8251A
    1508/  4.116 :                      ;
    1509/  4.116 :                      ;
    1510/  4.116 :                      ;               THESE PORT REQUESTS ARE RESPONDED TO AS FOLLOWS:
    1511/  4.116 :                      ;
    1512/  4.116 :                      ;                       IN 360Q RETURNS WITH (A) = 377Q TO SHOW THAT
    1513/  4.116 :                      ;                               NO FRONT PANEL SWITCHES ARE PRESSED
    1514/  4.116 :                      ;
    1515/  4.116 :                      ;                      OUT 360Q MOVES BIT 6 (CB.CLI) TO BIT 1, AND
    1516/  4.116 :                      ;                              BIT 4 (CB.SSI) INVERTED, TO BIT 0. AND
    1517/  4.116 :                      ;                              OUTPUTS THESE BITS TO PORT 362Q TO
    1518/  4.116 :                      ;                              CONTROL THE CLOCK AND SINGLE STEP INTERRUPTS
    1519/  4.116 :                      ;
    1520/  4.116 :                      ;                      OUTPUTS TO 361Q, 372Q, AND 373Q JUST RETURN
    1521/  4.116 :                      ;
    1522/  4.116 :                      ;                      INPUTS FROM 361Q, 372Q, AND 373Q RETURN WITH (A) = 0
    1523/  4.116 :                      ;                              TO INDICATE AN EMPTY BUSS
    1524/  4.116 :                      ;
    1525/  4.116 :                      ;
    1526/  4.116 :                      ;       ENTRY   NONE
    1527/  4.116 :                      ;
    1528/  4.116 :                      ;       EXIT    NONE
    1529/  4.116 :                      ;
    1530/  4.116 :                      ;       USES    (A) ONLY IF 'FAKING' AN INPUT
    1531/  4.116 :                      
    1532/  4.116 : 343                  NMI     XTHL                    ; GET RETURN ADDRESS FROM STACK
    1533/  4.117 : 042 064 040                  SHLD    NMIRET          ; SAVE FOR LATER USE
    1534/  4.122 : 343                          XTHL                    ; PUT RETURN ADDRESS BACK ON STACK
    1535/  4.123 :                      
    1536/  4.123 : 345                          PUSH    H               ; SAVE REGISTERS
    1537/  4.124 : 305                          PUSH    B
    1538/  4.125 : 365                          PUSH    PSW
    1539/  4.126 : 107                          MOV     B,A             ; SAVE (A) PRIOR TO I/O
    1540/  4.127 : 052 064 040                  LHLD    NMIRET          ; GET RETURN ADDRESS
    1541/  4.132 : 053                          DCX     H               ; BACK UP TO PORT # WHICH GOT US HERE
    1542/  4.133 : 176                          MOV     A,M             ; GET PORT #
    1543/  4.134 :                      
    1544/  4.134 : 376 360                      CPI     360Q            ; PORT 360?
    1545/  4.136 :                              CPU     Z80
    1546/  4.136 : 050 033                      JR      Z,NMI1          ; IF PORT WAS 360Q
    1547/  4.140 :                              CPU     8080
    1548/  4.140 :                      
    1549/  4.140 :                      ;       PORT REFERENCED WAS 361Q, 372Q, OR 373Q
    1550/  4.140 :                      ;
    1551/  4.140 : 376 361                      CPI     361Q            ; MAKE SURE PORT IS LEGAL
    1552/  4.142 :                              CPU     Z80
    1553/  4.142 : 050 010                      JR      Z,NMI0.5        ; IF LEGAL
    1554/  4.144 :                              CPU     8080
    1555/  4.144 :                      
    1556/  4.144 : 376 372                      CPI     372Q
    1557/  4.146 :                              CPU     Z80
    1558/  4.146 : 050 004                      JR      Z,NMI0.5
    1559/  4.150 :                              CPU     8080
    1560/  4.150 :                      
    1561/  4.150 : 376 373                      CPI     373Q
    1562/  4.152 :                              CPU     Z80
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 35 - 2024-04-22 06:03:31 PM


    1563/  4.152 : 040 062                      JR      NZ,NMI2.5       ; IF NONE OF THE ABOVE, EXIT
    1564/  4.154 :                              CPU     8080
    1565/  4.154 :                      
    1566/  4.154 : 053                  NMI0.5  DCX     H               ; POINT TO IN/OUT INSTRUCTION
    1567/  4.155 : 176                          MOV     A,M             ; SEE IF INPUT OR OUTPUT
    1568/  4.156 : 376 323                      CPI     MI.OUT
    1569/  4.160 :                              CPU     Z80
    1570/  4.160 : 050 054                      JR      Z,NMI2.5        ; IF OUTPUT, JUST EXIT
    1571/  4.162 :                              CPU     8080
    1572/  4.162 :                      
    1573/  4.162 : 376 333                      CPI     MI.IN
    1574/  4.164 :                              CPU     Z80
    1575/  4.164 : 040 050                      JR      NZ,NMI2.5       ; IF NOT INPUT EITHER, ILLEGAL SO EXIT
    1576/  4.166 :                              CPU     8080
    1577/  4.166 :                      
    1578/  4.166 : 361                          POP     PSW             ; RESTORE FLAGS
    1579/  4.167 : 076 000                      MVI     A,0             ; ELSE, RETURN LIKE AN EMPTY BUSS
    1580/  4.171 :                              CPU     Z80
    1581/  4.171 : 030 044                      JR      NMI3            ; EXIT
    1582/  4.173 :                              CPU     8080
    1583/  4.173 :                      
    1584/  4.173 : 053                  NMI1    DCX     H               ; POINT TO IN/OUT INSTRUCTION
    1585/  4.174 : 176                          MOV     A,M             ; GET I/O INSTRUCTION
    1586/  4.175 : 376 333                      CPI     MI.IN           ; INPUT?
    1587/  4.177 :                              CPU     Z80
    1588/  4.177 : 040 005                      JR      NZ,NMI1.5       ; IF NOT 'IN'
    1589/  4.201 :                              CPU     8080
    1590/  4.201 :                      
    1591/  4.201 : 361                          POP     PSW             ; RESTORE FLAGS
    1592/  4.202 : 076 377                      MVI     A,11111111B     ; SHOW 'NO KEYS PRESSED'
    1593/  4.204 :                              CPU     Z80
    1594/  4.204 : 030 031                      JR      NMI3            ; EXIT
    1595/  4.206 :                              CPU     8080
    1596/  4.206 :                      
    1597/  4.206 : 376 323              NMI1.5  CPI     MI.OUT          ; MAKE SURE INSTRUCTION IF AN 'OUT'
    1598/  4.210 :                              CPU     Z80
    1599/  4.210 : 040 024                      JR      NZ,NMI2.5       ; IF NOT
    1600/  4.212 :                              CPU     8080
    1601/  4.212 :                      
    1602/  4.212 : 170                  NMI2    MOV     A,B             ; GET OUTPUT DATA AGAIN
    1603/  4.213 : 346 120                      ANI     CB.CLI+CB.SSI   ; MOVE CLOCK INFO TO BIT 1
    1604/  4.215 : 017                          RRC
    1605/  4.216 : 017                          RRC
    1606/  4.217 : 017                          RRC
    1607/  4.220 : 017                          RRC
    1608/  4.221 : 017                          RRC
    1609/  4.222 :                              CPU     Z80
    1610/  4.222 : 070 001                      JR      C,NMI2.2
    1611/  4.224 :                              CPU     8080
    1612/  4.224 : 074                          INR     A
    1613/  4.225 : 041 066 040          NMI2.2  LXI     H,DATA          ; OR WITH THE BYTE IN RAM
    1614/  4.230 : 266                          ORA     M               ; BEFORE OUTPUT IT
    1615/  4.231 : 323 362                      OUT     H88.CTL         ; SET IN HARDWARE
    1616/  4.233 : 346 374                      ANI     11111100B
    1617/  4.235 : 167                          MOV     M,A
    1618/  4.236 :                      
    1619/  4.236 : 361                  NMI2.5  POP     PSW             ; RESTORE (A,F)
    1620/  4.237 :                      
    1621/  4.237 : 301                  NMI3    POP     B
    1622/  4.240 : 341                          POP     H
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 36 - 2024-04-22 06:03:31 PM


    1623/  4.241 :                      ;       RET                     ; Z80 RETURN FROM NMI
    1624/  4.241 : 355 105                      DB      355Q,105Q
    1625/  4.243 :                      
    1626/  4.243 :                      
    1627/  4.243 :                      ;       ATB     - AUTO BOOT ROUTINE CONTINUE
    1628/  4.243 :                      
    1629/  4.243 : 167                  ATB     MOV     M,A             ; SET AUTO BOOT FLAG
    1630/  4.244 : 076 012                      MVI     A,10            ; SET TO AUTO BOOT ROUTINE
    1631/  4.246 : 315 052 003                  CALL    LRA.
    1632/  4.251 : 021 212 001                  LXI     D,AUTOBO        ; SET AUTO BOOT ROUTINE
    1633/  4.254 :                              CPU     Z80
    1634/  4.254 : 030 016                      JR      BOOTX
    1635/  4.256 :                              CPU     8080
    1636/  4.256 :                      
    1637/  4.256 :                              ORG     2256Q
    1638/  4.256 :                      ;       BOOT H-17 OR Z47 ENTRY POINT FOR H88
    1639/  4.256 :                      ;
    1640/  4.256 :                      ;       ENTRY   NONE
    1641/  4.256 :                      ;
    1642/  4.256 :                      ;       EXIT    (DE) = NORMAL BOOT ROUTINE ADDRESS
    1643/  4.256 :                      ;
    1644/  4.256 :                      ;       USES    ALL
    1645/  4.256 :                      
    1646/  4.256 : 041 234 006          BOOT    LXI     H,MSG.BT        ; COMPLETE BOOT MESSAGE
    1647/  4.261 : 315 100 006                  CALL    TYPMSG
    1648/  4.264 : 076 012                      MVI     A,10
    1649/  4.266 : 315 052 003                  CALL    LRA.            ; GET LOCATION OF USER PC
    1650/  4.271 : 021 261 001                  LXI     D,NBOOT         ; SET ITS VALUE TO THE NORMAL BOOT ROUTINE
    1651/  4.274 : 163                  BOOTX   MOV     M,E
    1652/  4.275 : 043                          INX     H
    1653/  4.276 : 162                          MOV     M,D
    1654/  4.277 :                      
    1655/  4.277 : 303 063 000                  JMP     GO.             ; DO IT
    1656/  4.302 :                      
    1657/  4.302 :                      
    1658/  4.302 :                      ;       TMOUT   - BOOT CODE TIME OUT ROUTINE
    1659/  4.302 :                      ;
    1660/  4.302 :                      ;       TMOUT IS ENTERED FROM TIMER INTERRUPT EVER 100MS. AND IT WILL
    1661/  4.302 :                      ;       EXIT:   IF BOOT SUCCESS THEN TIMER OFF.
    1662/  4.302 :                      ;               IF 15 SECONDS TIME OUT AND BOOT IS NOT SUCCESS YES
    1663/  4.302 :                      ;                  THEN ABORT BOOT Z47 & TO MONITOR LOOP
    1664/  4.302 :                      ;               IF < 15S & 3.5S THEN RE-BOOT
    1665/  4.302 :                      ;
    1666/  4.302 :                      ;       ENTRY:  (TMFG)  = 1 IF THE TIME OUT IS FOR Z47
    1667/  4.302 :                      ;                       = 0 IF THE TIME OUT IS FOR H17
    1668/  4.302 :                      ;
    1669/  4.302 :                      ;       EXIT:   NONE
    1670/  4.302 :                      ;
    1671/  4.302 :                      ;       USE:    ALL (WHEN RETURN, ALL REGISTERS ARE RESTORED)
    1672/  4.302 :                      
    1673/  4.302 : 333 355              TMOUT   IN      SC.ACE+UR.LSR   ; INPUT ACE LINE STATUS REGISTER
    1674/  4.304 : 346 001                      ANI     UC.DR           ; SEE IF THERE IS A DATA READY
    1675/  4.306 :                              CPU     Z80
    1676/  4.306 : 050 011                      JR      Z,TMOUT4        ; CHECK IF IT IS <DELETE>
    1677/  4.310 :                              CPU     8080
    1678/  4.310 :                      
    1679/  4.310 : 333 350                      IN      SC.ACE+UR.RBR   ; INPUT DATA FROM KB
    1680/  4.312 : 346 177                      ANI     01111111B       ; IS IT <DEL>?
    1681/  4.314 : 376 177                      CPI     A.DEL
    1682/  4.316 : 312 171 002                  JZ      NODEV           ; IF IT, ABORT THE BOOT
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 37 - 2024-04-22 06:03:31 PM


    1683/  4.321 :                                                      ; ELSE IGNORE THE INPUT
    1684/  4.321 :                      
    1685/  4.321 : 041 121 041          TMOUT4  LXI     H,TMFG
    1686/  4.324 : 176                          MOV     A,M
    1687/  4.325 : 247                          ANA     A
    1688/  4.326 :                              CPU     Z80
    1689/  4.326 : 010                          EX      AF,AF'          ; SAVE Z FLAG
    1690/  4.327 :                              CPU     8080
    1691/  4.327 : 072 033 040                  LDA     TICCNT          ; GET TIC
    1692/  4.332 : 247                          ANA     A               ; SET ZERO FLAG
    1693/  4.333 :                              CPU     Z80
    1694/  4.333 : 040 024                      JR      NZ,TMOUT2       ; NOT IN 0.5 SECOND
    1695/  4.335 :                              CPU     8080
    1696/  4.335 : 043                          INX     H               ; SET TO MYCNT
    1697/  4.336 : (MACRO)                      ERRNZ   MYCNT-TMFG-1    ; MYCNT MUST FOLLOW TMFG
    1697/  4.336 :                      ;       IF (MYCNT-TMFG-1) != 0
    1697/  4.336 :                      ;         ERROR Expression is not zero
    1697/  4.336 :                      ;       ENDIF
    1698/  4.336 : 064                          INR     M               ; INCREASE THE COUNT FOR 0.5 SECOND
    1699/  4.337 : 176                          MOV     A,M
    1700/  4.340 : 376 036                      CPI     30              ; CHECK IF MORE THAN 15 SECONDS
    1701/  4.342 : 322 171 002                  JNC     NODEV           ; NO DEVICE?
    1702/  4.345 : 336 007              TMOUT1  SBI     7               ; IS IT 3.5 SECONDS?
    1703/  4.347 :                              CPU     Z80
    1704/  4.347 : 070 010                      JR      C,TMOUT2        ; IF NOT, WAIT
    1705/  4.351 : 040 372                      JR      NZ,TMOUT1       ; CHECK MORE
    1706/  4.353 : 010                          EX      AF,AF'
    1707/  4.354 :                              CPU     8080
    1708/  4.354 : 302 063 002                  JNZ     RETRY           ; IF IT IS Z47, THEN RE-BOOT
    1709/  4.357 :                              CPU     Z80
    1710/  4.357 : 030 002                      JR      TMOUT3          ; IT IS H-17, CONTINUE IT CLOCK ROUTINE
    1711/  4.361 : 010                  TMOUT2  EX      AF,AF'          ; CHECK IT IS Z47 OR H17
    1712/  4.362 :                              CPU     8080
    1713/  4.362 : 300                          RNZ                     ; Z47, THEN RETURN
    1714/  4.363 : 303 031 034          TMOUT3  JMP     CLOCK17         ; CONTINUE H17 CLOCK ROUTINE
    1715/  4.366 :                      
    1716/  4.366 : 000 000                      DB      0,0             ; UNUSED BYTES
    1717/  4.370 :                      
    1718/  4.370 :                              ORG     2370Q
    1719/  4.370 :                      ;       SUBM - SUBSTITUTE MEMORY
    1720/  4.370 :                      ;
    1721/  4.370 :                      ;       SUBM INPUTS A MEMORY ADDRESS FROM THE CONSOLE AND THEN DISPLAYS
    1722/  4.370 :                      ;       THAT ADDRESS AND ITS CONTENTS.  IF A CARRIAGE RETURN IS THEN TYPED,
    1723/  4.370 :                      ;       CONTROL RETURNS TO THE MONITOR.  IF A SPACE IS TYPED, THE NEXT
    1724/  4.370 :                      ;       MEMORY LOCATION AND CONTENTS ARE DISPLAYED.  IF A MINUS SIGN IS
    1725/  4.370 :                      ;       TYPED, THE PREVIOUS MEMORY LOCATION AND CONTENTS ARE DISPLAYED.
    1726/  4.370 :                      ;       IF AN OCTAL CHARACTER IS TYPED, A BYTE IS ENTERED AN PLACED AT THE
    1727/  4.370 :                      ;       CURRENT MEMORY LOCATION.
    1728/  4.370 :                      ;
    1729/  4.370 :                      ;       ENTRY   NONE
    1730/  4.370 :                      ;       EXIT    NONE
    1731/  4.370 :                      ;       USES    A,E,H,L,F
    1732/  4.370 :                      
    1733/  4.370 : 041 201 006          SUBM    LXI     H,MSG.SUB       ; COMPLETE SUBSTITUTE MESSAGE
    1734/  4.373 : 315 100 006                  CALL    TYPMSG
    1735/  4.376 : 315 150 005                  CALL    IROC            ; INPUT FIRST CHARACTER
    1736/  5.001 : 320                          RNC                     ; IF A RETURN EXIT
    1737/  5.002 :                      
    1738/  5.002 : 041 003 040                  LXI     H,IOWRK+1       ; ELSE, INPUT A STARTING ADDRESS
    1739/  5.005 : 026 015                      MVI     D,A.CR          ; ENDING WITH A RETURN
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 38 - 2024-04-22 06:03:31 PM


    1740/  5.007 : 315 062 003                  CALL    IOA
    1741/  5.012 : 353                          XCHG                    ; (H,L) = INPUT ADDRESS
    1742/  5.013 :                      
    1743/  5.013 : 315 313 005          SUBM1   CALL    TOA             ; TYPE CRLF, ADDRESS, AND A SPACE
    1744/  5.016 : 176                          MOV     A,M             ; GET MEMORY CONTENTS FOR DISPLAY
    1745/  5.017 : 315 343 005                  CALL    TOB
    1746/  5.022 : 076 040                      MVI     A,' '           ; SPACE
    1747/  5.024 : 315 302 003                  CALL    WCC
    1748/  5.027 :                      
    1749/  5.027 : 315 301 005          SUBM2   CALL    IOC             ; INPUT FIRST CHARACTER
    1750/  5.032 : 322 075 005                  JNC     SUBM7           ; IF FIRST CHARACTER IS OCTAL
    1751/  5.035 :                      
    1752/  5.035 : 376 040                      CPI     ' '             ; SPACE?
    1753/  5.037 : 302 046 005                  JNZ     SUBM4           ; IF NOT A SPACE
    1754/  5.042 :                      
    1755/  5.042 : 043                  SUBM3   INX     H               ; POINT TO NEXT ADDRESS
    1756/  5.043 : 303 013 005                  JMP     SUBM1           ; DISPLAY NEXT
    1757/  5.046 :                      
    1758/  5.046 : 376 055              SUBM4   CPI     '-'             ; MINUS?
    1759/  5.050 : 302 062 005                  JNZ     SUBM6           ; IF NOT
    1760/  5.053 :                      
    1761/  5.053 : 315 302 003          SUBM5   CALL    WCC             ; ECHO HYPHEN
    1762/  5.056 : 053                          DCX     H               ; POINT TO PREVIOUS ADDRESS
    1763/  5.057 : 303 013 005                  JMP     SUBM1           ; DISPLAY PREVIOUS
    1764/  5.062 :                      
    1765/  5.062 : 376 015              SUBM6   CPI     A.CR            ; RETURN?
    1766/  5.064 : 310                          RZ                      ; IF RETURN, EXIT
    1767/  5.065 :                      
    1768/  5.065 : 076 007                      MVI     A,A.BEL         ; ELSE, DING BELL
    1769/  5.067 : 315 302 003                  CALL    WCC
    1770/  5.072 : 303 027 005                  JMP     SUBM2           ; TRY AGAIN
    1771/  5.075 :                      
    1772/  5.075 : 066 000              SUBM7   MVI     M,0             ; ZERO BYTE TO BE BUILT
    1773/  5.077 :                      
    1774/  5.077 : 315 302 003          SUBM8   CALL    WCC             ; ECHO OCTAL CHARACTER
    1775/  5.102 : 346 007                      ANI     00000111B       ; GET BINARY VALUE
    1776/  5.104 : 137                          MOV     E,A             ; SAVE PARTIAL
    1777/  5.105 : 176                          MOV     A,M             ; GET CURRENT
    1778/  5.106 : 007                          RLC                     ; MAKE ROOM FOR NEW CHARACTER
    1779/  5.107 : 007                          RLC
    1780/  5.110 : 007                          RLC
    1781/  5.111 : 346 370                      ANI     11111000B       ; TOSS PREVIOUS LSB
    1782/  5.113 : 263                          ORA     E               ; ADD NEW
    1783/  5.114 : 167                          MOV     M,A             ; SAVE NEW TOTAL
    1784/  5.115 : 315 301 005          SUBM9   CALL    IOC             ; INPUT NEXT CHARACTER
    1785/  5.120 : 322 077 005                  JNC     SUBM8           ; IF OCTAL
    1786/  5.123 :                      
    1787/  5.123 : 376 040                      CPI     ' '             ; SPACE?
    1788/  5.125 : 312 042 005                  JZ      SUBM3           ; IF SPACE, DISPLAY NEXT BYTE
    1789/  5.130 :                      
    1790/  5.130 : 376 055                      CPI     '-'             ; MINUS?
    1791/  5.132 : 312 053 005                  JZ      SUBM5           ; IF MINUS, DISPLAY PREVIOUS
    1792/  5.135 :                      
    1793/  5.135 : 376 015                      CPI     A.CR            ; RETURN?
    1794/  5.137 : 310                          RZ                      ; IF RETURN, EXIT
    1795/  5.140 :                      
    1796/  5.140 : 076 007                      MVI     A,A.BEL         ; ELSE, DING BELL
    1797/  5.142 : 315 302 003                  CALL    WCC
    1798/  5.145 : 303 115 005                  JMP     SUBM9           ; TRY AGAIN
    1799/  5.150 :                      
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 39 - 2024-04-22 06:03:31 PM


    1800/  5.150 :                      ;       IROC - INPUT A RETURN OR AN OCTAL CHARACTER
    1801/  5.150 :                      ;
    1802/  5.150 :                      ;       IROC INPUTS A CHARACTER FROM THE CONSOLE AND WAITS UNTIL IT
    1803/  5.150 :                      ;       RECEIVES EITHER A VALID OCTAL CHARACTER OR A CARRIAGE RETURN
    1804/  5.150 :                      ;
    1805/  5.150 :                      ;       ENTRY   NONE
    1806/  5.150 :                      ;       EXIT    (A) = INPUT CHARACTER
    1807/  5.150 :                      ;               'C' = SET IF CHARACTER IS OCTAL
    1808/  5.150 :                      ;       USES    A,F
    1809/  5.150 :                      
    1810/  5.150 : 315 262 003          IROC    CALL    RCC             ; INPUT CHARACTER
    1811/  5.153 : 376 015                      CPI     A.CR            ; RETURN?
    1812/  5.155 : 310                          RZ                      ; IF A CR
    1813/  5.156 :                      
    1814/  5.156 : 376 060                      CPI     '0'             ; < 0?
    1815/  5.160 : 332 166 005                  JC      IROC1           ; IF < OCTAL
    1816/  5.163 :                      
    1817/  5.163 : 376 070                      CPI     '8'             ; > 8?
    1818/  5.165 : 330                          RC                      ; IF OCTAL
    1819/  5.166 :                      
    1820/  5.166 : 076 007              IROC1   MVI     A,A.BEL         ; ELSE, RING BELL
    1821/  5.170 : 315 302 003                  CALL    WCC
    1822/  5.173 : 303 150 005                  JMP     IROC            ; TRY AGAIN
    1823/  5.176 :                      
    1824/  5.176 :                      ;       IOA1 - INPUT OCTAL ADDRESS
    1825/  5.176 :                      ;
    1826/  5.176 :                      ;       IOA1 IS A CONTINUATION OF *IOA* AND INPUTS A SPLIT OCTAL ADDRESS
    1827/  5.176 :                      ;       WITHOUT REQUIRING LEADING ZEROS
    1828/  5.176 :                      ;
    1829/  5.176 :                      ;       ENTRY   (H,L) = ADDRESS + 1 WHERE INPUT ADDRESS IS TO BE PLACED
    1830/  5.176 :                      ;               (A) = FIRST OCTAL CHARACTER IF 'C' IS SET
    1831/  5.176 :                      ;       EXIT    (D,E) = INPUT ADDRESS
    1832/  5.176 :                      ;               (A) = LAST INPUT CHARACTER
    1833/  5.176 :                      ;       USES    A,D,E,H,L,F
    1834/  5.176 :                      
    1835/  5.176 : 305                  IOA1    PUSH    B               ; SAVE (B,C)
    1836/  5.177 : 102                          MOV     B,D             ; (B) = TERMINATION CHARACTER
    1837/  5.200 : 345                          PUSH    H               ; SAVE ADDRESS WHERE INPUT IS TO BE PLACED
    1838/  5.201 : 041 000 000                  LXI     H,0             ; SET NEW VALUE TO ZERO
    1839/  5.204 : 324 262 003          IOA2    CNC     RCC             ; IF CARRY SET, FIRST CHARACTER IS IN ACC
    1840/  5.207 : 376 060                      CPI     '0'             ; MAKE SURE CHARACTER IS OCTAL
    1841/  5.211 : 332 242 005                  JC      IOA3            ; IF < OCTAL
    1842/  5.214 :                      
    1843/  5.214 : 376 070                      CPI     '8'
    1844/  5.216 : 322 242 005                  JNC     IOA3            ; IF > OCTAL
    1845/  5.221 :                      
    1846/  5.221 : 315 302 003                  CALL    WCC             ; ECHO OCTAL CHARACTER
    1847/  5.224 : 346 007                      ANI     00000111B       ; GET BINARY VALUE
    1848/  5.226 : 365                          PUSH    PSW             ; SAVE NEW CHARACTER VALUE
    1849/  5.227 : 051                          DAD     H               ; SHIFT THREE TO MAKE ROOM FOR NEW CHARACTER
    1850/  5.230 : 051                          DAD     H
    1851/  5.231 : 051                          DAD     H
    1852/  5.232 : 365                          PUSH    PSW             ; SAVE CARRY FORM DAD
    1853/  5.233 : 321                          POP     D               ; SAVE FLAG RESULT IN E
    1854/  5.234 : 361                          POP     PSW             ; RETURN NEW CHARACTER VALUE TO (A)
    1855/  5.235 : 205                          ADD     L
    1856/  5.236 : 157                          MOV     L,A
    1857/  5.237 : 303 204 005                  JMP     IOA2            ; SEE IF MORE CHARACTERS
    1858/  5.242 :                      
    1859/  5.242 : 270                  IOA3    CMP     B               ; TERMINATING CHARACTER?
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 40 - 2024-04-22 06:03:31 PM


    1860/  5.243 : 312 260 005                  JZ      IOA4            ; IF EQUAL
    1861/  5.246 :                      
    1862/  5.246 : 076 007                      MVI     A,A.BEL         ; ELSE, DING BELL
    1863/  5.250 : 315 302 003                  CALL    WCC
    1864/  5.253 : 067                          STC                     ; TRY AGAIN
    1865/  5.254 : 077                          CMC
    1866/  5.255 : 303 204 005                  JMP     IOA2
    1867/  5.260 :                      
    1868/  5.260 :                      ;       END OF INPUT, PUT VALUE IN MEMORY AND EXIT
    1869/  5.260 :                      
    1870/  5.260 : 315 302 003          IOA4    CALL    WCC             ; ECHO CHARACTER
    1871/  5.263 : 127                          MOV     D,A             ; LAST CHARACTER TO D
    1872/  5.264 : 325                          PUSH    D
    1873/  5.265 : 361                          POP     PSW             ; (PSW) = RESULT OF DAD
    1874/  5.266 : 174                          MOV     A,H             ; MAKE (A) INTO SPLIT OCTAL
    1875/  5.267 : 037                          RAR
    1876/  5.270 : 147                          MOV     H,A
    1877/  5.271 : 172                          MOV     A,D             ; RESTORE LAST INPUT CHARACTER
    1878/  5.272 : 353                          XCHG                    ; (D,E) = INPUT ADDRESS
    1879/  5.273 : 341                          POP     H               ; (H,L) = LOCATION TO PLACE THIS ADDRESS
    1880/  5.274 : 162                          MOV     M,D
    1881/  5.275 : 053                          DCX     H
    1882/  5.276 : 163                          MOV     M,E
    1883/  5.277 : 301                          POP     B               ; RESTORE (B,C)
    1884/  5.300 : 311                          RET
    1885/  5.301 :                      
    1886/  5.301 :                      ;       IOC - INPUT OCTAL CHARACTER
    1887/  5.301 :                      ;
    1888/  5.301 :                      ;
    1889/  5.301 :                      ;       ENTRY   NONE
    1890/  5.301 :                      ;       EXIT    (A) = INPUT CHARACTER
    1891/  5.301 :                      ;               'X' SET IF CHARACTER IS NOT OCTAL
    1892/  5.301 :                      ;       USES    A,F
    1893/  5.301 :                      
    1894/  5.301 : 315 262 003          IOC     CALL    RCC             ; INPUT CHARACTER
    1895/  5.304 : 376 060                      CPI     '0'
    1896/  5.306 : 330                          RC                      ; IF CHARACTER < OCTAL
    1897/  5.307 :                      
    1898/  5.307 : 376 070                      CPI     '8'             ; CHARACTER > OCTAL?
    1899/  5.311 : 077                          CMC                     ; 'C' IF GREATER THAN
    1900/  5.312 : 311                          RET
    1901/  5.313 :                      
    1902/  5.313 :                      ;       TOA - TYPE OCTAL ADDRESS
    1903/  5.313 :                      ;
    1904/  5.313 :                      ;       TOA OUTPUTS TO THE CONSOLE A CRLF, THE SPECIFIED ADDRESS AND A SPACE
    1905/  5.313 :                      ;
    1906/  5.313 :                      ;       ENTRY   (H,L) = ADDRESS TO BE DISPLAYED
    1907/  5.313 :                      ;       EXIT    NONE
    1908/  5.313 :                      ;       USES    A,B,C,F
    1909/  5.313 :                      
    1910/  5.313 : 076 015              TOA     MVI     A,A.CR          ; CRLF
    1911/  5.315 : 315 302 003                  CALL    WCC
    1912/  5.320 : 076 012                      MVI     A,A.LF
    1913/  5.322 : 315 302 003                  CALL    WCC
    1914/  5.325 :                      
    1915/  5.325 : 174                  TOA.    MOV     A,H             ; ADDRESS
    1916/  5.326 : 315 343 005                  CALL    TOB
    1917/  5.331 : 175                          MOV     A,L
    1918/  5.332 : 315 343 005                  CALL    TOB
    1919/  5.335 :                      
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 41 - 2024-04-22 06:03:31 PM


    1920/  5.335 : 076 040                      MVI     A,' '           ; SPACE
    1921/  5.337 : 315 302 003                  CALL    WCC
    1922/  5.342 : 311                          RET
    1923/  5.343 :                      
    1924/  5.343 :                      ;       TOB - TYPE OCTAL BYTE
    1925/  5.343 :                      ;
    1926/  5.343 :                      ;       TOB OUTPUTS TO THE CONSOLE IN OCTAL, THE BYTE IN A
    1927/  5.343 :                      ;
    1928/  5.343 :                      ;       ENTRY   (A) = BYTE TO BE OUTPUT
    1929/  5.343 :                      ;       EXIT    NONE
    1930/  5.343 :                      ;       USES    A,F
    1931/  5.343 :                      
    1932/  5.343 : 305                  TOB     PUSH    B
    1933/  5.344 : 006 002                      MVI     B,2             ; NUMBER OF CHARACTERS - 1
    1934/  5.346 : 117                          MOV     C,A             ; SAVE ORIGINAL BYTE
    1935/  5.347 : 267                          ORA     A               ; ASSURE 'C' = ZERO
    1936/  5.350 : 037                          RAR
    1937/  5.351 : 037                          RAR                     ; SHIFT TOP BYTE TO LSB
    1938/  5.352 : 037                          RAR
    1939/  5.353 : 037                  TOB1    RAR                     ; SHIFT MIDDLE BYTE TO LSB
    1940/  5.354 : 037                          RAR
    1941/  5.355 : 037                          RAR
    1942/  5.356 : 346 007                      ANI     00000111B       ; MASK FOR HALF ASCII
    1943/  5.360 : 366 060                      ORI     00110000B       ; MASK FOR WHOLE ASCII
    1944/  5.362 : 315 302 003                  CALL    WCC             ; OUTPUT TO CONSOLE
    1945/  5.365 : 171                          MOV     A,C             ; GET ORIGINAL BYTE
    1946/  5.366 : 005                          DCR     B
    1947/  5.367 : 302 353 005                  JNZ     TOB1            ; IF SECOND BYTE STILL NEEDS TO BE OUTPUT
    1948/  5.372 :                      
    1949/  5.372 : 346 007                      ANI     00000111B       ; ELSE, OUTPUT LAST CHARACTER
    1950/  5.374 : 366 060                      ORI     00110000B
    1951/  5.376 : 315 302 003                  CALL    WCC
    1952/  6.001 : 301                          POP     B
    1953/  6.002 : 311                          RET
    1954/  6.003 :                      
    1955/  6.003 :                      ;       WCR - WAIT FOR A CARRIAGE RETURN
    1956/  6.003 :                      ;
    1957/  6.003 :                      ;       WCR INPUTS CHARACTERS FROM THE CONSOLE UNTIL A CARRIAGE RETURN
    1958/  6.003 :                      ;       IS RECEIVED AND THEN ECHOS A CRLF
    1959/  6.003 :                      ;
    1960/  6.003 :                      ;       ENTRY   NONE
    1961/  6.003 :                      ;       EXIT    NONE
    1962/  6.003 :                      ;       USES    A,F
    1963/  6.003 :                      
    1964/  6.003 : 315 262 003          WCR     CALL    RCC             ; INPUT CHARACTER
    1965/  6.006 : 376 015                      CPI     A.CR
    1966/  6.010 :                              CPU     Z80
    1967/  6.010 : 040 371                      JR      NZ,WCR          ; IF NOT A CR
    1968/  6.012 :                              CPU     8080
    1969/  6.012 :                      
    1970/  6.012 : 315 302 003                  CALL    WCC             ; ELSE ECHO CR
    1971/  6.015 : 076 012                      MVI     A,A.LF          ; LINE FEED
    1972/  6.017 : 315 302 003                  CALL    WCC
    1973/  6.022 : 311                          RET
    1974/  6.023 :                      
    1975/  6.023 :                      
    1976/  6.023 :                      ;       DAT     - DATA BYTE OUTPUT TO Z-47
    1977/  6.023 :                      ;
    1978/  6.023 :                      ;       ENTRY:  (A) = BYTE TO OUTPUT
    1979/  6.023 :                      ;
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 42 - 2024-04-22 06:03:31 PM


    1980/  6.023 :                      ;       EXIT:   (A) = BYTE TO OUTPUT
    1981/  6.023 :                      ;               (D) = S.DTR
    1982/  6.023 :                      ;
    1983/  6.023 :                      ;       USES:   AF, D
    1984/  6.023 :                      
    1985/  6.023 : 026 200              DAT     MVI     D,S.DTR         ; SET MATCH CONDITION TO DATA TRANSFER
    1986/  6.025 :                              CPU     Z80
    1987/  6.025 : 030 002                      JR      COM1            ; REQUEST BIT
    1988/  6.027 :                              CPU     8080
    1989/  6.027 :                      
    1990/  6.027 :                      
    1991/  6.027 :                      ;       COM      - OUTPUT COMMAND BYTE TO Z-47
    1992/  6.027 :                      ;
    1993/  6.027 :                      ;       ENTRY:  (A) = COMMAND BYTE
    1994/  6.027 :                      ;
    1995/  6.027 :                      ;       EXIT:   (A) = COMMAND BYTE
    1996/  6.027 :                      ;               (D) = S.DON
    1997/  6.027 :                      ;
    1998/  6.027 :                      ;       USES:   AF, D
    1999/  6.027 :                      
    2000/  6.027 : 026 040              COM     MVI     D,S.DON         ; SET MATCH CONDITION TO DONE BIT
    2001/  6.031 : 365                  COM1    PUSH    PSW
    2002/  6.032 : 315 170 006          WTDON1  CALL    IN.             ; READ CONTROLLER STATUS REGISTER
    2003/  6.035 : 242                          ANA     D               ; GET MATCH BIT ONLY
    2004/  6.036 :                              CPU     Z80
    2005/  6.036 : 050 372                      JR      Z,WTDON1        ; IF NO MATCH, WAIT
    2006/  6.040 :                              CPU     8080
    2007/  6.040 : 361                          POP     PSW
    2008/  6.041 : 315 146 006                  CALL    OUT1.           ; OUTPUT THE BYTE TO THE DATA PORT
    2009/  6.044 : 311                          RET
    2010/  6.045 :                      
    2011/  6.045 :                      
    2012/  6.045 :                              ORG     3045Q
    2013/  6.045 :                      ;       HRNX - HORN EXTENSION ROUTINE
    2014/  6.045 :                      ;
    2015/  6.045 :                      ;       THIS IS AN EXTENSION TO *HORN* TO MAKE ROOM FOR A JUMP
    2016/  6.045 :                      ;
    2017/  6.045 :                      
    2018/  6.045 : 056 011              HRNX    MVI     L,CTLFLG#256
    2019/  6.047 : 163                          MOV     M,E             ; TURN OFF HORN
    2020/  6.050 : 321                          POP     D
    2021/  6.051 : 341                          POP     H
    2022/  6.052 : 311                          RET
    2023/  6.053 :                      
    2024/  6.053 :                      ;       NOISE - DING BELL ON CONSOLE
    2025/  6.053 :                      ;
    2026/  6.053 :                      ;       THIS IS A MODIFICATION TO ALLOW THE H88/H89 TO USE THE CONSOLE BELL
    2027/  6.053 :                      ;
    2028/  6.053 :                      
    2029/  6.053 : 076 007              NOISE   MVI     A,A.BEL
    2030/  6.055 : 315 302 003                  CALL    WCC
    2031/  6.060 : 303 140 002                  JMP     HORN            ; CONTINUE WITH NORMAL HORN DELAY
    2032/  6.063 :                      
    2033/  6.063 :                      
    2034/  6.063 :                      ;       OUT.    - OUTPUT BYTE TO Z-47
    2035/  6.063 :                      ;
    2036/  6.063 :                      ;       ENTRY:  (A) = OUTPUT BYTE
    2037/  6.063 :                      ;
    2038/  6.063 :                      ;       EXIT:   NONE
    2039/  6.063 :                      ;
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 43 - 2024-04-22 06:03:31 PM


    2040/  6.063 :                      ;       USES:   NONE
    2041/  6.063 :                      
    2042/  6.063 : 305                  OUT.    PUSH    B
    2043/  6.064 : 107                          MOV     B,A             ; SAVE THE OUTPUT DATA
    2044/  6.065 : 072 120 041                  LDA     PRIM            ; GET PORT ADDRESS
    2045/  6.070 : 117                  OUT.1   MOV     C,A             ; SET TO REG C
    2046/  6.071 : 170                          MOV     A,B             ; GET OUTPUT BYTE DATA BACK
    2047/  6.072 :                      ;       OUT     (C),A           ; OUTPUT BYTE
    2048/  6.072 : 355 171                      DB      355Q,171Q
    2049/  6.074 : 301                          POP     B
    2050/  6.075 : 311                          RET
    2051/  6.076 :                      
    2052/  6.076 : 000 000                      DB      0,0             ; UNUSED BYTES
    2053/  6.100 :                      
    2054/  6.100 :                              ORG     3100Q
    2055/  6.100 :                      ;       TYPMSG - TYPE MESSAGE TO CONSOLE
    2056/  6.100 :                      ;
    2057/  6.100 :                      ;       TYPMSG OUTPUTS AN ASCII MESSAGE FROM MEMORY TO THE CONSOLE
    2058/  6.100 :                      ;       UNTIL A NULL IS SENSED
    2059/  6.100 :                      ;
    2060/  6.100 :                      ;       ENTRY   (H,L) = ADDRESS OF MESSAGE
    2061/  6.100 :                      ;       EXIT    NONE
    2062/  6.100 :                      ;       USES    A,H,L,F
    2063/  6.100 :                      
    2064/  6.100 : 176                  TYPMSG  MOV     A,M             ; GET CHARACTER
    2065/  6.101 : 267                          ORA     A               ; SEE IF NULL
    2066/  6.102 : 310                          RZ                      ; IF NULL, EXIT
    2067/  6.103 :                      
    2068/  6.103 : 315 302 003                  CALL    WCC             ; ELSE OUTPUT CHARACTER TO CONSOLE
    2069/  6.106 : 043                          INX     H               ; POINT TO NEXT CHARACTER
    2070/  6.107 :                              CPU     Z80
    2071/  6.107 : 030 367                      JR      TYPMSG          ; OUTPUT IT
    2072/  6.111 :                              CPU     8080
    2073/  6.111 :                      
    2074/  6.111 :                      ;       MSG.PR - MESSAGE FOR MONITOR PROMPT
    2075/  6.111 :                      ;
    2076/  6.111 :                      ;       CRLF, "  H: "
    2077/  6.111 :                      
    2078/  6.111 : 015 012 040 040 110  MSG.PR  DB      A.CR,A.LF,"  H: ",0
           6.116 : 072 040 000        
    2079/  6.121 :                      
    2080/  6.121 :                      
    2081/  6.121 :                      ;       RDBLCK  - INPUT A BLOCK FROM Z-47
    2082/  6.121 :                      ;
    2083/  6.121 :                      ;       RDBLCK READS IN A BLOCK FROM THE DISK CONTROLLER
    2084/  6.121 :                      ;
    2085/  6.121 :                      ;       ENTRY:
    2086/  6.121 :                      ;               HL = LOAD ADDRESS
    2087/  6.121 :                      ;               B  = COUNT
    2088/  6.121 :                      ;               C  = SIDE/UNIT/SECTOR
    2089/  6.121 :                      ;
    2090/  6.121 :                      ;       EXIT:   NONE
    2091/  6.121 :                      ;
    2092/  6.121 :                      ;       USE:    ALL
    2093/  6.121 :                      
    2094/  6.121 :                      RDBLCK
    2095/  6.121 : 076 007              RD1     MVI     A,DC.REAB
    2096/  6.123 : 315 027 006                  CALL    COM             ; SEND THE COMMAND
    2097/  6.126 : 257                          XRA     A               ; FOR TRACK 0
    2098/  6.127 : 315 023 006                  CALL    DAT             ; SEND IT TO DISK
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 44 - 2024-04-22 06:03:31 PM


    2099/  6.132 : 171                          MOV     A,C             ; LOAD SIDE/UNIT/SECTOR
    2100/  6.133 : 315 023 006                  CALL    DAT             ; SEND IT TO DISK
    2101/  6.136 :                      
    2102/  6.136 : 315 067 001          RD2     CALL    PIN             ; INPUT A BYTE FROM DISK
    2103/  6.141 : 167                          MOV     M,A             ; STORE IN BUFFER
    2104/  6.142 : 043                          INX     H               ; BUFFER TO NEXT ADDRESS
    2105/  6.143 :                              CPU     Z80
    2106/  6.143 : 020 371                      DJNZ    RD2
    2107/  6.145 :                              CPU     8080
    2108/  6.145 : 311                          RET                     ; CONTINUE
    2109/  6.146 :                      
    2110/  6.146 :                      
    2111/  6.146 :                      ;       OUT1.   - OUTPUT A BYTE TO PORT (PRIM+1)
    2112/  6.146 :                      ;
    2113/  6.146 :                      ;       ENTRY:  (A) = OUTPUT PORT
    2114/  6.146 :                      ;
    2115/  6.146 :                      ;       EXIT:   NONE
    2116/  6.146 :                      ;
    2117/  6.146 :                      ;       USE:    NONE
    2118/  6.146 :                      
    2119/  6.146 : 305                  OUT1.   PUSH    B
    2120/  6.147 : 107                          MOV     B,A             ; SAVE THE OUTPUT DATA
    2121/  6.150 : 072 120 041                  LDA     PRIM            ; GET PORT ADDRESS
    2122/  6.153 : 074                          INR     A               ; SET TO (PRIM+1)
    2123/  6.154 :                              CPU     Z80
    2124/  6.154 : 030 312                      JR      OUT.1           ; GO TO OUTPUT ROUTINE
    2125/  6.156 :                              CPU     8080
    2126/  6.156 :                      
    2127/  6.156 :                      ;       IN1.    - INPUT BYTE FROM (PRIM+1) PORT
    2128/  6.156 :                      ;
    2129/  6.156 :                      ;       ENTRY:  NONE
    2130/  6.156 :                      ;
    2131/  6.156 :                      ;       EXIT:   (A) = INPUT BYTE
    2132/  6.156 :                      ;
    2133/  6.156 :                      ;       USES:   A
    2134/  6.156 :                      
    2135/  6.156 : 305                  IN1.    PUSH    B
    2136/  6.157 : 072 120 041                  LDA     PRIM            ; GET PORT ADDRESS
    2137/  6.162 : 074                          INR     A               ; SET TO (PRIM+1)
    2138/  6.163 :                              CPU     Z80
    2139/  6.163 : 030 007                      JR      IN.1
    2140/  6.165 :                              CPU     8080
    2141/  6.165 :                      
    2142/  6.165 :                              ORG     3165Q
    2143/  6.165 :                      ;       MSG.GO - (G)O
    2144/  6.165 :                      ;
    2145/  6.165 :                      ;       "GO"
    2146/  6.165 :                      
    2147/  6.165 : 157 040 000          MSG.GO  DB      "o ",0
    2148/  6.170 :                      
    2149/  6.170 :                      ;       IN.     - INPUT BYTE FROM PORT (PRIM)
    2150/  6.170 :                      ;
    2151/  6.170 :                      ;       ENTRY:  NONE
    2152/  6.170 :                      ;
    2153/  6.170 :                      ;       EXIT:   (A) = INPUT BYTE
    2154/  6.170 :                      ;
    2155/  6.170 :                      ;       USES:   A
    2156/  6.170 :                      
    2157/  6.170 : 305                  IN.     PUSH    B
    2158/  6.171 : 072 120 041                  LDA     PRIM            ; GET PORT ADDRESS
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 45 - 2024-04-22 06:03:31 PM


    2159/  6.174 : 117                  IN.1    MOV     C,A             ; SET ADDR. TO REG C.
    2160/  6.175 :                      ;       IN      A,(C)
    2161/  6.175 : 355 170                      DB      355Q,170Q       ; INPUT BYTE
    2162/  6.177 : 301                          POP     B
    2163/  6.200 : 311                          RET
    2164/  6.201 :                      
    2165/  6.201 :                              ORG     3201Q
    2166/  6.201 :                      ;       MSG.SUB - (S)UBSTITUTE
    2167/  6.201 :                      ;
    2168/  6.201 :                      ;       "SUBSTITUTE"
    2169/  6.201 :                      
    2170/  6.201 : 165 142 163 164 151  MSG.SUB DB      "ubstitute ",0
           6.206 : 164 165 164 145 040
           6.213 : 000                
    2171/  6.214 :                      
    2172/  6.214 :                      ;       MSG.PC - (P)ROGRAM COUNTER
    2173/  6.214 :                      ;
    2174/  6.214 :                      ;       "PROGRAM COUNTER"
    2175/  6.214 :                      
    2176/  6.214 : 162 157 147 162 141  MSG.PC  DB       "rogram Counter ",0
           6.221 : 155 040 103 157 165
           6.226 : 156 164 145 162 040
           6.233 : 000                
    2177/  6.234 :                      
    2178/  6.234 :                      ;       MSG.BT - (B)OOT
    2179/  6.234 :                      ;
    2180/  6.234 :                      ;       "BOOT"
    2181/  6.234 :                      
    2182/  6.234 : 157 157 164 000      MSG.BT  DB      "oot",0
    2183/  6.240 :                      
    2184/  6.240 :                      
    2185/  6.240 :                      ;       SPEED - ROTATIONAL SPEED TEST FOR 5.25 INCH DISK DRIVE
    2186/  6.240 :                      ;
    2187/  6.240 :                      ;       *SPEED* IS USED ONLY FOR GROSS ADJUSTMENT OF DRIVE ROTATIONAL
    2188/  6.240 :                      ;       SPEED IF THE FIRST READ/WRITE TEST OF THE UNIT FAILS DURING SETUP.
    2189/  6.240 :                      ;
    2190/  6.240 :                      ;               USE OF *SPEED* IS AS FOLLOWS:
    2191/  6.240 :                      ;
    2192/  6.240 :                      ;                        1.  ENTER 'GO AND THE ENTRY ADDRESS OF *SPEED*
    2193/  6.240 :                      ;                        2.  ADJUST DRIVE SPEED UNTIL DATA AT DISPLAYED
    2194/  6.240 :                      ;                            EQUALS 200
    2195/  6.240 :                      ;                                A,  IF SPEED < 200, TURN ADJUSTMENT CLOCKWISE
    2196/  6.240 :                      ;                                B,  IF SPEED < 200, TURN COUNTERCLOCKWISE
    2197/  6.240 :                      ;
    2198/  6.240 :                      ;       THE ABOVE TEST ADJUSTS SY0:.  TO ADJUST SY1:, USE HDOS
    2199/  6.240 :                      
    2200/  6.240 :                      ;       LABLE EQUIVALENCES
    2201/  6.240 :                      ;
    2202/  6.240 :                      ;       I/O PORTS
    2203/  6.240 : =177O                OP.DC   EQU     177Q            ; DRIVE CONTROL OUTPUT PORT
    2204/  6.240 : =177O                IP.DS   EQU     177Q            ; DRIVE STATUS INPUT PORT
    2205/  6.240 :                      
    2206/  6.240 :                      ;       MASKS
    2207/  6.240 :                      ;
    2208/  6.240 : =1O                  DS.HOLE EQU     00000001B       ; DRIVE STATUS SECTOR/INDEX HOLD
    2209/  6.240 :                      
    2210/  6.240 :                      ;       CONSTANTS
    2211/  6.240 :                      ;
    2212/  6.240 : =22O                 ONDR0   EQU     022Q            ; TURN ON SY0:
    2213/  6.240 :                      
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 46 - 2024-04-22 06:03:31 PM


    2214/  6.240 :                      
    2215/  6.240 : 041 371 006          SPEED   LXI     H,MSG.SPD       ; OUTPUT SPEED MESSAGE
    2216/  6.243 : 315 100 006                  CALL    TYPMSG
    2217/  6.246 : 076 000                      MVI     A,0             ; SET FLAG AT IOWRK FOR "WORKING" MESSAGE
    2218/  6.250 : 062 002 040                  STA     IOWRK
    2219/  6.253 : 076 022                      MVI     A,ONDR0         ; TURN ON DRIVE ZERO
    2220/  6.255 : 323 177                      OUT     OP.DC
    2221/  6.257 : 052 033 040          SPEED1  LHLD    TICCNT          ; GET TICK COUNTER
    2222/  6.262 : 174                          MOV     A,H             ; FORM TWO'S COMPLEMENT OF TICK COUNTER
    2223/  6.263 : 057                          CMA
    2224/  6.264 : 127                          MOV     D,A             ; (D,E) = NEGATIVE TICK COUNTER
    2225/  6.265 : 175                          MOV     A,L
    2226/  6.266 : 057                          CMA
    2227/  6.267 : 074                          INR     A
    2228/  6.270 : 137                          MOV     E,A
    2229/  6.271 : 322 275 006                  JNC     SPEED2          ; IF NO CARRY FROM LSB
    2230/  6.274 :                      
    2231/  6.274 : 024                          INR     D               ; ELSE, INCREMENT MSB
    2232/  6.275 : 001 000 000          SPEED2  LXI     B,0             ; ZERO REV COUNTERS
    2233/  6.300 : 333 177              SPEED3  IN      IP.DS           ; INPUT DISK STATUS
    2234/  6.302 : 346 001                      ANI     DS.HOLE         ; MASK FOR SECTOR/INDEX PULSES
    2235/  6.304 : 312 300 006                  JZ      SPEED3          ; IF NO HOLE PRESENT
    2236/  6.307 :                      
    2237/  6.307 :                      ; HOLE PRESENT, WAIT FOR IT TO LEAVE
    2238/  6.307 :                      ;
    2239/  6.307 : 333 177              SPEED4  IN      IP.DS           ; GET DISK STATUS
    2240/  6.311 : 346 001                      ANI     DS.HOLE         ; GET HOLE PULSES
    2241/  6.313 : 302 307 006                  JNZ     SPEED4          ; WAIT UNTIL HOLE IS GONE AND WE HAVE MEDIA
    2242/  6.316 :                      
    2243/  6.316 : 004                          INR     B               ; INCREMENT HOLE COUNTER
    2244/  6.317 : 170                          MOV     A,B             ; TEST FOR FIVE REVOLUTIONS
    2245/  6.320 : 376 070                      CPI     56
    2246/  6.322 : 302 300 006                  JNZ     SPEED3          ; NOT FIVE, WAIT FOR MORE HOLES
    2247/  6.325 :                      
    2248/  6.325 :                      ;       HAVE FIVE REVS, DISPLAY DIFFERENCE OF TICK COUNTER AND EXPECTED TIME DIF
    2249/  6.325 :                      
    2250/  6.325 : 052 033 040                  LHLD    TICCNT          ; GET CURRENT TICK VALUE
    2251/  6.330 : 031                          DAD     D               ; SUBTRACT START VALUE
    2252/  6.331 : 021 214 376                  LXI     D,177777Q-500+1+200Q ; SUBTRACT 500 FOR REVS, +200Q FOR OFFSET
    2253/  6.334 : 031                          DAD     D               ; (H,L) = OFFSET RESULT
    2254/  6.335 : 345                          PUSH    H               ; SAVE RESULT
    2255/  6.336 : 041 062 007                  LXI     H,MSG.WRK       ; POINT TO 'WORKING' MESSAGE
    2256/  6.341 : 072 002 040                  LDA     IOWRK           ; GET 'WORKING' FLAG
    2257/  6.344 : 356 001                      XRI     1               ; INVERT LOWER BIT
    2258/  6.346 : 062 002 040                  STA     IOWRK           ; SAVE NEW VALUE
    2259/  6.351 : 302 357 006                  JNZ     SPEED5          ; IF TO DISPLAY 'WORKING'
    2260/  6.354 :                      
    2261/  6.354 : 041 100 007                  LXI     H,MSG.HSS       ; POINT TO 'HOME', 'SPACES', AND SPEED MSG
    2262/  6.357 : 315 100 006          SPEED5  CALL    TYPMSG          ; OUTPUT MESSAGE
    2263/  6.362 : 341                          POP     H               ; GET TEST RESULT
    2264/  6.363 : 315 325 005                  CALL    TOA.            ; OUTPUT RESULT TO CONSOLE
    2265/  6.366 : 303 257 006                  JMP     SPEED1          ; PERFORM ANOTHER SAMPLE
    2266/  6.371 :                      
    2267/  6.371 :                      ;       MSG.SPD - SPEED TEST MESSAGE
    2268/  6.371 :                      ;
    2269/  6.371 :                      ;       '       Disk drive rotational speed test.
    2270/  6.371 :                      ;
    2271/  6.371 :                      ;
    2272/  6.371 :                      ;                       Drive speed = '
    2273/  6.371 : 033 105 012          MSG.SPD DB      A.ESC,'E',A.LF
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 47 - 2024-04-22 06:03:31 PM


    2274/  6.374 : 011 104 151 163 153          DB      '	Disk drive rotational speed test.',A.CR,A.LF,A.LF
           7.001 : 040 144 162 151 166
           7.006 : 145 040 162 157 164
           7.013 : 141 164 151 157 156
           7.020 : 141 154 040 163 160
           7.025 : 145 145 144 040 164
           7.032 : 145 163 164 056 015
           7.037 : 012 012            
    2275/  7.041 : 011 011 104 162 151          DB      '		Drive speed = '
           7.046 : 166 145 040 163 160
           7.053 : 145 145 144 040 075
           7.060 : 040                
    2276/  7.061 : 000                          DB      0
    2277/  7.062 :                      
    2278/  7.062 :                      ;       MSG.WRK - 'WORKING' MESSAGE FOR SPEED TEST
    2279/  7.062 :                      ;
    2280/  7.062 :                      ;       DISPLAYS 'WORKING' AT HOME POSITION AND RETURNS CURSOR TO SPEED =
    2281/  7.062 :                      
    2282/  7.062 : 033 110              MSG.WRK DB      A.ESC,'H'       ; CURSOR HOME
    2283/  7.064 : 127 157 162 153 151          DB      'Working'
           7.071 : 156 147            
    2284/  7.073 : 033 131 043 076              DB      A.ESC,'Y#>'     ; CURSOR ADDRESS OF SPEED = VALUE
    2285/  7.077 : 000                          DB      0               ; END MESSAGE
    2286/  7.100 :                      
    2287/  7.100 :                      ;       MSG.HSS - BLANKS 'WORKING' MESSAGE
    2288/  7.100 :                      ;
    2289/  7.100 :                      
    2290/  7.100 : 033 110              MSG.HSS DB      A.ESC,'H'       ; CURSOR HOME
    2291/  7.102 : 040 040 040 040 040          DB      '       '       ; BLANKS
           7.107 : 040 040            
    2292/  7.111 : 033 131 043 076              DB      A.ESC,'Y#>'     ; CURSOR ADDRESS OF SPEED = VALUE
    2293/  7.115 : 000                          DB      0               ; END MESSAGE
    2294/  7.116 :                      
    2295/  7.116 :                      
    2296/  7.116 :                      ;       DYMEM - DYNAMIC MEMORY TEST
    2297/  7.116 :                      ;
    2298/  7.116 :                      ;       DYMEM TEST THE DYNAMIC MEMORY IN THE H88/H89 BY PLACING
    2299/  7.116 :                      ;       A KNOWN PATTERN IN EACH DYNAMIC MEMORY CELL AND THEN
    2300/  7.116 :                      ;       PERFORMING A READ, INCREMENT, READ SEQUENCE WITH A DELAY
    2301/  7.116 :                      ;       BETWEEN EACH PASS OF THE TEST.
    2302/  7.116 :                      ;
    2303/  7.116 :                      ;       ENTRY:  NONE
    2304/  7.116 :                      ;
    2305/  7.116 :                      ;       EXIT:   ON RESET
    2306/  7.116 :                      ;
    2307/  7.116 :                      ;       USES:   A,B,C,D,E,H,L,F,A',F',IX,IY
    2308/  7.116 :                      
    2309/  7.116 : 076 000              DYMEM   MVI     A,0             ; MAKE SURE CLOCK AND SINGLE STEP ARE OFF
    2310/  7.120 : 323 362                      OUT     H88.CTL
    2311/  7.122 :                      
    2312/  7.122 :                      ;       DETERMINE END OF MEMORY
    2313/  7.122 :                      
    2314/  7.122 : =>FALSE                      IF      RAM
    2315/  7.122 : =>TRUE                       ELSE
    2316/  7.122 : 041 000 040          DYMEM1  LXI     H,START
    2317/  7.125 : [9.010]                      ENDIF
    2318/  7.125 : 076 001                      MVI     A,1
    2319/  7.127 : 066 000              DYMEM2  MVI     M,0             ; SET RAM TO ZERO
    2320/  7.131 : 064                          INR     M               ; SET MEMORY TO ONE
    2321/  7.132 : 276                          CMP     M               ; SEE IF (A) = ((H,L))
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 48 - 2024-04-22 06:03:31 PM


    2322/  7.133 :                              CPU     Z80
    2323/  7.133 : 040 003                      JR      NZ,DYMEM3       ; IF NOT EQUAL, THE END OF RAM HAS BEEN REACHED
    2324/  7.135 :                              CPU     8080     
    2325/  7.135 :                      
    2326/  7.135 : 043                          INX     H               ; ELSE, POINT TO NEXT LOCATION IN RAM
    2327/  7.136 :                              CPU     Z80
    2328/  7.136 : 030 367                      JR      DYMEM2
    2329/  7.140 :                              CPU     8080
    2330/  7.140 :                      
    2331/  7.140 : 053                  DYMEM3  DCX     H               ; POINT TO LAST GOOD LOCATION
    2332/  7.141 : 353                          XCHG                    ; PUT ENDING ADDRESS IN D,E
    2333/  7.142 : 041 324 007                  LXI     H,MSG.RAM       ; OUTPUT ENDING ADDRESS
    2334/  7.145 :                      
    2335/  7.145 :                              CPU     Z80
    2336/  7.145 : 335 041 153 007              LD      IX,DY3.3        ; RETURN ADDRESS
    2337/  7.151 :                      
    2338/  7.151 : 030 133                      JR      DYMSG
    2339/  7.153 :                              CPU     8080
    2340/  7.153 :                      
    2341/  7.153 : 172                  DY3.3   MOV     A,D             ; OUTPUT ADDRESS MSB
    2342/  7.154 :                      
    2343/  7.154 :                              CPU     Z80
    2344/  7.154 : 335 041 163 007              LD      IX,DY3.5        ; RETURN ADDRESS
    2345/  7.160 :                              CPU     8080
    2346/  7.160 :                      
    2347/  7.160 : 303 160 003                  JMP     DYBYT
    2348/  7.163 :                      
    2349/  7.163 : 173                  DY3.5   MOV     A,E             ; LSB
    2350/  7.164 :                      
    2351/  7.164 :                              CPU     Z80
    2352/  7.164 : 335 041 173 007              LD      IX,DY3.7        ; RETURN ADDRESS
    2353/  7.170 :                              CPU     8080
    2354/  7.170 :                      
    2355/  7.170 : 303 160 003                  JMP     DYBYT
    2356/  7.173 :                      
    2357/  7.173 : 023                  DY3.7   INX     D               ; (D,E) = LAST BYTE OF RAM + 1
    2358/  7.174 :                      
    2359/  7.174 :                      ;       TEST MEMORY
    2360/  7.174 :                      ;
    2361/  7.174 : 006 001                      MVI     B,1             ; (B) = CONTENTS OF RAM AFTER SIZING
    2362/  7.176 : 041 237 003                  LXI     H,MSG.PAS       ; OUTPUT PASS MESSAGE
    2363/  7.201 :                      
    2364/  7.201 :                              CPU     Z80
    2365/  7.201 : 335 041 207 007              LD      IX,DYMEM4       ; RETURN ADDRESS
    2366/  7.205 :                      
    2367/  7.205 : 030 077                      JR      DYMSG
    2368/  7.207 :                              CPU     8080
    2369/  7.207 :                      
    2370/  7.207 : =>FALSE                      IF      RAM
    2371/  7.207 : =>TRUE                       ELSE
    2372/  7.207 : 041 000 040          DYMEM4  LXI     H,START         ; POINT BACK TO BEGINNING OF RAM
    2373/  7.212 : [9.066]                      ENDIF
    2374/  7.212 : 176                  DYMEM5  MOV     A,M             ; READ CURRENT CONTENTS
    2375/  7.213 : 270                          CMP     B               ; SEE IF CURRENT CONTENTS STILL REMAIN
    2376/  7.214 : 302 307 000                  JNZ     DYMEM9          ; FAILURE, SEE IF AT END OF RAM
    2377/  7.217 :                      
    2378/  7.217 : 074                          INR     A
    2379/  7.220 : 167                          MOV     M,A             ; INCREMENT RAM
    2380/  7.221 : 276                          CMP     M               ; SEE OF WRITE WAS SUCCESSFUL
    2381/  7.222 : 302 307 000                  JNZ     DYMEM9
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 49 - 2024-04-22 06:03:31 PM


    2382/  7.225 :                      
    2383/  7.225 : 043                          INX     H
    2384/  7.226 : 175                          MOV     A,L             ; GET LSB AND TEST FOR REACHING END OF RAM
    2385/  7.227 : 273                          CMP     E
    2386/  7.230 :                              CPU     Z80
    2387/  7.230 : 040 360                      JR      NZ,DYMEM5       ; IF LSB NOT EQUAL
    2388/  7.232 :                              CPU     8080
    2389/  7.232 :                      
    2390/  7.232 : 174                          MOV     A,H             ; CHECK LSB
    2391/  7.233 : 272                          CMP     D
    2392/  7.234 :                              CPU     Z80
    2393/  7.234 : 040 354                      JR      NZ,DYMEM5
    2394/  7.236 :                              CPU     8080
    2395/  7.236 :                      
    2396/  7.236 :                      ;       HAVE REACHED THE END OF MEMORY!
    2397/  7.236 :                      ;       OUTPUT LAST VALUE TESTED
    2398/  7.236 :                      ;
    2399/  7.236 : 046 003                      MVI     H,3             ; OUTPUT 3 BACKSPACES
    2400/  7.240 : 076 010                      MVI     A,A.BKS
    2401/  7.242 :                      
    2402/  7.242 :                      DYME5.5
    2403/  7.242 :                              CPU     Z80
    2404/  7.242 : 375 041 251 007              LD      IY,DY5.53       ; RETURN ADDRESS
    2405/  7.246 :                              CPU     8080
    2406/  7.246 :                      
    2407/  7.246 : 303 143 003                  JMP     DYASC
    2408/  7.251 :                      
    2409/  7.251 : 045                  DY5.53  DCR     H
    2410/  7.252 :                              CPU     Z80
    2411/  7.252 : 040 366                      JR      NZ,DYME5.5
    2412/  7.254 :                              CPU     8080
    2413/  7.254 : 004                          INR     B               ; SHOW NEXT PASS VALUE
    2414/  7.255 : 170                          MOV     A,B             ; VALUE TESTED
    2415/  7.256 :                      
    2416/  7.256 :                              CPU     Z80
    2417/  7.256 : 335 041 273 000              LD      IX,DYMEM6       ; RETURN ADDRESS
    2418/  7.262 :                              CPU     8080
    2419/  7.262 :                      
    2420/  7.262 : 303 160 003                  JMP     DYBYT
    2421/  7.265 :                      
    2422/  7.265 :                      ;       THE DYNAMIC RAM TEST CONTINUES ELSEWHERE!!
    2423/  7.265 :                      ;       AND THEN RETURNS TO HERE!!!!!!!!!!!!!!!!!!
    2424/  7.265 :                      
    2425/  7.265 : 041 000 000          DY10.5  LXI      H,0            ; DELAY AND DING BELL AGAIN
    2426/  7.270 : 006 002                      MVI      B,2            ; 2 LOOPS
    2427/  7.272 : 045                  DYMEM11 DCR      H
    2428/  7.273 :                              CPU      Z80
    2429/  7.273 : 040 375                      JR       NZ,DYMEM11
    2430/  7.275 :                              CPU      8080
    2431/  7.275 :                      
    2432/  7.275 : 055                          DCR      L
    2433/  7.276 :                              CPU      Z80
    2434/  7.276 : 040 372                      JR       NZ,DYMEM11
    2435/  7.300 :                              CPU      8080
    2436/  7.300 :                      
    2437/  7.300 : 005                          DCR      B
    2438/  7.301 :                              CPU      Z80
    2439/  7.301 : 040 367                      JR       NZ,DYMEM11
    2440/  7.303 :                              CPU      8080
    2441/  7.303 :                      
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 50 - 2024-04-22 06:03:31 PM


    2442/  7.303 : 303 360 003                  JMP      DYMEM10        ; AGAIN
    2443/  7.306 :                      
    2444/  7.306 :                      ;       DYMSG - DYNAMIC RAM TEST MESSAGE OUTPUT ROUTINE
    2445/  7.306 :                      ;
    2446/  7.306 :                      ;       ENTRY:  (H,L) = MESSAGE ADDRESS
    2447/  7.306 :                      ;               (IX) = RETURN ADDRESS
    2448/  7.306 :                      ;
    2449/  7.306 :                      ;       EXIT:   TI (IX)
    2450/  7.306 :                      ;
    2451/  7.306 :                      ;       USES:   A,H,L,F,IY
    2452/  7.306 :                      
    2453/  7.306 : 176                  DYMSG   MOV     A,M             ; GET MESSAGE BYTE
    2454/  7.307 :                      
    2455/  7.307 :                              CPU      Z80
    2456/  7.307 : 375 041 316 007              LD      IY,DYMSG.5      ; RETURN ADDRESS
    2457/  7.313 :                              CPU      8080
    2458/  7.313 :                      
    2459/  7.313 : 303 143 003                  JMP     DYASC           ; OUTPUT ASCII
    2460/  7.316 :                      
    2461/  7.316 : 267                  DYMSG.5 ORA     A               ; SEE IF NULL TO END STRING
    2462/  7.317 : 043                          INX     H               ; POINT TO NEXT CHARACTER
    2463/  7.320 :                              CPU     Z80
    2464/  7.320 : 040 364                      JR      NZ,DYMSG        ; IF NOT DONE YET
    2465/  7.322 :                      
    2466/  7.322 : 335 351                      JP      (IX)            ; RETURN TO CALLER
    2467/  7.324 :                              CPU     8080
    2468/  7.324 :                      
    2469/  7.324 :                      
    2470/  7.324 :                      ;       MSG.RAM - RAM TEST MESSAGE
    2471/  7.324 :                      ;
    2472/  7.324 :                      
    2473/  7.324 : 033 105              MSG.RAM DB      A.ESC,'E'
    2474/  7.326 : 104 171 156 141 155          DB      'Dynamic RAM test'
           7.333 : 151 143 040 122 101
           7.340 : 115 040 164 145 163
           7.345 : 164                
    2475/  7.346 : 015 012 012                  DB      A.CR,A.LF,A.LF
    2476/  7.351 : 011 040 114 127 101          DB      '	 LWA = '
           7.356 : 040 075 040        
    2477/  7.361 : 000                          DB      0
    2478/  7.362 :                      
    2479/  7.362 :                      ;       MSG.EQ - EQUALS MESSAGE
    2480/  7.362 :                      ;
    2481/  7.362 :                      
    2482/  7.362 : 040 075 040          MSG.EQ  DB      ' = '
    2483/  7.365 : 000                          DB      0
    2484/  7.366 :                      
    2485/  7.366 : 107 101 103 056              DB      'GAC.'
    2486/  7.372 :                      
    2487/  7.372 :                      ;       ENTRY POINT FOR FLOPPY DISK ROTATIONAL SPEED TEST
    2488/  7.372 :                      ;
    2489/  7.372 : =>FALSE                      IF      RAM
    2490/  7.372 : =>TRUE                       ELSE
    2491/  7.372 : (MACRO)                      ERRNZ   10000A-6-*      ; MUST BE 6 BYTES BEFORE END
    2491/  7.372 :                      ;       IF (10000A-6-*) != 0
    2491/  7.372 :                      ;         ERROR Expression is not zero
    2491/  7.372 :                      ;       ENDIF
    2492/  7.372 : [9.185]                      ENDIF
    2493/  7.372 :                      
    2494/  7.372 : 303 240 006          ESPEED  JMP     SPEED
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 51 - 2024-04-22 06:03:31 PM


    2495/  7.375 :                      
    2496/  7.375 :                      ;       ENTRY POINT FOR DYNAMIC MEMORY TEST
    2497/  7.375 :                      ;
    2498/  7.375 : =>FALSE                      IF      RAM
    2499/  7.375 : =>TRUE                       ELSE
    2500/  7.375 : (MACRO)                      ERRNZ   10000A-3-*      ; MUST BE 3 BYTES BEFORE END
    2500/  7.375 :                      ;       IF (10000A-3-*) != 0
    2500/  7.375 :                      ;         ERROR Expression is not zero
    2500/  7.375 :                      ;       ENDIF
    2501/  7.375 : [9.194]                      ENDIF
    2502/  7.375 :                      
    2503/  7.375 : 303 116 007          EDTMEM  JMP     DYMEM
    2504/ 10.000 :                      
    2505/ 10.000 : =>FALSE                      IF      RAM
    2506/ 10.000 : =>TRUE                       ELSE
    2507/ 10.000 : (MACRO)                      ERRNZ   *-10000A        ; MUST NOT EXCEED 2K BYTES
    2507/ 10.000 :                      ;       IF (*-10000A) != 0
    2507/ 10.000 :                      ;         ERROR Expression is not zero
    2507/ 10.000 :                      ;       ENDIF
    2508/ 10.000 : [9.201]                      ENDIF
    2509/ 10.000 :                      
    2510/ 10.000 :                      ;       THE FOLLOWING ARE CONTROL CELLS AND FLAGS USED BY THE KEYSET
    2511/ 10.000 :                      ;       MONITOR.
    2512/ 10.000 :                      
    2513/ 40.000 :                              ORG     20000Q          ; 8192
    2514/ 40.000 :                      
    2515/ 40.000 :                      START   DS      2               ; DUMP STARTING ADDRESS
    2516/ 40.002 :                      IOWRK   DS      2               ; IN OUR OUT INSTRUCTION
    2517/ 40.004 :                      PRSRAM                          ; FOLLOWING CELLS INITIALIZED FROM ROM
    2518/ 40.004 :                              DS      1               ; RET
    2519/ 40.005 :                      REGI    DS      1               ; INDEX OF REGISTER UNDER DISPLAY
    2520/ 40.006 :                      DSPROT  DS      1               ; PERIOD FLAG BYTE
    2521/ 40.007 :                      DSPMOD  DS      1               ; DISPLAY MODE
    2522/ 40.010 :                      
    2523/ 40.010 :                      MFLAG   DS      1               ; USER FLAG OPTIONS
    2524/ 40.011 :                                                      ; SEE *UO.XXX* BITS DESCRIBED AT FRONT
    2525/ 40.011 :                      
    2526/ 40.011 :                      CTLFLG  DS      1               ; FRONT PANEL CONTROL BITS
    2527/ 40.012 :                      REFIND  DS      1               ; REFRESH INDEX (0 TO 7)
    2528/ 40.013 : =7O                  PRSL    EQU     7               ; END OF AREA INITIALIZED FROM ROM
    2529/ 40.013 :                      
    2530/ 40.013 :                      FPLEDS                          ; FRONT PANEL LEDS PATTERNS
    2531/ 40.013 :                      ALEDS   DS      1               ; ADDR 0
    2532/ 40.014 :                              DS      1               ; ADDR 1
    2533/ 40.015 :                              DS      1               ; ADDR 2
    2534/ 40.016 :                      
    2535/ 40.016 :                              DS      1               ; ADDR 3
    2536/ 40.017 :                              DS      1               ; ADDR 4
    2537/ 40.020 :                              DS      1               ; ADDR 5
    2538/ 40.021 :                      
    2539/ 40.021 :                      DLEDS   DS      1               ; DATA 0
    2540/ 40.022 :                              DS      1               ; DATA 1
    2541/ 40.023 :                              DS      1               ; DATA 2
    2542/ 40.024 :                      
    2543/ 40.024 :                      ABUSS   DS      2               ; ADDRESS BUSS
    2544/ 40.026 :                      RCCA    DS      1               ; RCC SAVE AREA
    2545/ 40.027 :                      CRCSUM  DS      2               ; CRC-16 CHECKSUM
    2546/ 40.031 :                      TPERRX  DS      2               ; TAPE ERROR EXIT ADDRESS
    2547/ 40.033 :                      TICCNT  DS      2               ; CLOCK TIC COUNTER
    2548/ 40.035 :                      
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 52 - 2024-04-22 06:03:31 PM


    2549/ 40.035 :                      REGPTR  DS      2               ; REGISTER CONTENTS POINTER
    2550/ 40.037 :                      
    2551/ 40.037 :                      ;UIVEC                          ; USER INTERRUPT VECTORS
    2552/ 40.037 :                              DS      3               ; JUMP TO CLOCK PROCESSOR
    2553/ 40.042 :                              DS      3               ; JUMP TO SINGLE STEP PROCESSOR
    2554/ 40.045 :                              DS      3               ; JUMP TO I/O 3
    2555/ 40.050 :                              DS      3               ; JUMP TO I/O 3
    2556/ 40.053 :                              DS      3               ; JUMP TO I/O 5
    2557/ 40.056 :                              DS      3               ; JUMP TO I/O 6
    2558/ 40.061 :                              DS      3               ; JUMP TO I/O 7
    2559/ 40.064 :                      
    2560/ 40.064 :                      ;       H88/H89 RAM USAGE BEYOND THAT OF H8MTRF
    2561/ 40.064 :                      ;
    2562/ 40.064 :                      NMIRET  DS      2
    2563/ 40.066 :                      
    2564/ 41.120 :                              ORG     20520Q
    2565/ 41.120 :                      PRIM    DS      1               ; PRIMARY DEVICE ADDR. PORT
    2566/ 41.121 :                      TMFG    DS      1               ; TIMER INTERRUPT FLAG, =1 FOR Z47, =0 FOR H17
    2567/ 41.122 :                      MYCNT   DS      1               ; COUNTER FOR TIMER INTERRUPT
    2568/ 41.123 :                      AUTOB   DS      1               ; AUTO BOOT FLAG
    2569/ 41.124 :                      STK     DS      1               ; STACK POINTER FOR RE-BOOT
    2570/ 41.125 :                      
    2571/ 40.066 :                              ORG     20066Q
    2572/ 40.066 :                      DATA    DS      1               ; OUTPUT 362Q DATA SAVE AREA
    2573/ 40.067 :                              END
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 53 - 2024-04-22 06:03:31 PM


  Symbol Table (* = unused):
  --------------------------

 A.BEL :                          7 - |  A.BKS :                         10 - |
 A.CR :                          15 - |  A.DEL :                        177 - |
 A.ESC :                         33 - |  A.LF :                          12 - |
*A.STX :                          2 - | *A.SYN :                         26 - |
 ABUSS :                     40.024 C | *AC.DLY :                       156 - |
 AIO.UNI :                   41.061 - |  ALARM :                      2.136 C |
 ALARMB :                     2.166 C | *ALEDS :                     40.013 C |
*ARCHITECTURE :                                      "x86_64-unknown-linux" - |
 AS.0DD :                       100 - | *AS.1DD :                        40 - |
*AS.S1A :                        20 - | *AS.SWL :                         3 - |
 ATB :                        4.243 C |  AUTOB :                     41.123 C |
 AUTOBO :                     1.212 C |  B170 :                       3.040 C |
 B174 :                       3.012 C |  BH17 :                       3.030 C |
*BLKSIZ :                     2.000 - |  BOOT :                       4.256 C |
 BOOT0 :                      1.336 C |  BOOT2 :                      2.335 C |
 BOOT5 :                      1.341 C |  BOOT6 :                      1.353 C |
 BOOTA :                     37.132 - |  BOOTAL :                       130 - |
 BOOTX :                      4.274 C | *BR19.2 :                     4.103 C |
*BR96 :                       4.101 C |  BRTAB :                      4.101 C |
*BSEC :                       1.325 C |  BSMSG :                      1.041 C |
*C.128 :                        200 - | *C.256 :                      1.000 - |
*C.DSYN :                       375 - | *CASESENSITIVE :                  0 - |
 CB.CLI :                       100 - |  CB.MTL :                        40 - |
 CB.SPK :                       200 - |  CB.SSI :                        20 - |
 CHAT2 :                      2.130 C |  CKAUTO :                     2.113 C |
 CLK4 :                         270 C |  CLOCK :                        201 C |
 CLOCK17 :                   34.031 - |  COM :                        6.027 C |
 COM1 :                       6.031 C | *CONSTPI :        3.141592653589793 - |
*CRCSUM :                    40.027 C | *CS.UNR :                       200 - |
*CS.WPD :                       100 - |  CTLFLG :                    40.011 C |
 CUI1 :                         165 C |  D.CON :                     40.110 C |
*D.DAT :                        171 - |  D.OECNT :                   40.264 - |
 D.RAM :                     40.240 C |  D.RAML :                        37 - |
 D.SDP :                     40.206 - |  D.STA :                        170 - |
*D.VEC :                     40.130 C |  DAT :                        6.023 C |
 DATA :                      40.066 C | *DATE :                "2024-04-22" - |
*DC.BOOT :                        0 - | *DC.CPY :                        13 - |
*DC.FRM0 :                       14 - | *DC.FRM1 :                       15 - |
*DC.FRM2 :                       16 - | *DC.FRM3 :                       17 - |
*DC.LSC :                         3 - | *DC.RAD :                         4 - |
 DC.RAS :                         2 - | *DC.REA :                         5 - |
 DC.REAB :                        7 - | *DC.RST :                         1 - |
*DC.WRD :                        11 - | *DC.WRDB :                       12 - |
*DC.WRI :                         6 - | *DC.WRIB :                       10 - |
 DEV2 :                       3.025 C |  DEVICE :                     2.301 C |
*DF.DI :                         40 - | *DF.DS0 :                         2 - |
*DF.DS1 :                         4 - | *DF.DS2 :                        10 - |
*DF.HD :                          1 - | *DF.MO :                         20 - |
*DF.SD :                         10 - | *DF.ST :                        100 - |
*DF.T0 :                          2 - | *DF.WP :                          4 - |
*DF.WQ :                          1 - | *DF.WR :                        200 - |
*DLEDS :                     40.021 C | *DLY :                           53 C |
*DM.MR :                          0 - | *DM.MW :                          1 - |
*DM.RR :                          2 - | *DM.RW :                          3 - |
 DMOVE :                     30.252 - | *DOD :                        3.122 C |
 DP.DC :                        177 - |  DS.HOLE :                        1 - |
*DSPMOD :                    40.007 C | *DSPROT :                    40.006 C |
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 54 - 2024-04-22 06:03:31 PM


 DY10.5 :                     7.265 C |  DY3.3 :                      7.153 C |
 DY3.5 :                      7.163 C |  DY3.7 :                      7.173 C |
 DY5.53 :                     7.251 C |  DY9.3 :                      3.315 C |
 DY9.4 :                      3.326 C |  DY9.5 :                      3.335 C |
 DY9.8 :                      3.350 C |  DYASC :                      3.143 C |
 DYASC1 :                     3.144 C |  DYBYT :                      3.160 C |
 DYBYT.2 :                    3.202 C |  DYBYT.4 :                    3.221 C |
 DYBYT.6 :                    3.235 C |  DYME5.5 :                    7.242 C |
 DYMEM :                      7.116 C | *DYMEM1 :                     7.122 C |
 DYMEM10 :                    3.360 C |  DYMEM11 :                    7.272 C |
 DYMEM2 :                     7.127 C |  DYMEM3 :                     7.140 C |
 DYMEM4 :                     7.207 C |  DYMEM5 :                     7.212 C |
 DYMEM6 :                       273 C |  DYMEM7 :                       276 C |
 DYMEM9 :                       307 C |  DYMSG :                      7.306 C |
 DYMSG.5 :                    7.316 C |  DZERO :                     31.212 - |
*EDTMEM :                     7.375 C |  EIXIT :                     34.027 - |
 ERPTCNT :                       12 - |  ERRMSG :                     1.045 C |
 ERROR :                        322 C | *ESPEED :                     7.372 C |
*FALSE :                          0 - | *FPLEDS :                    40.013 C |
 GO :                         1.222 C |  GO. :                           63 C |
 GO88 :                       1.146 C |  GO88.1 :                     1.177 C |
 H17 :                        2.207 C |  H17A :                       2.237 C |
 H88.CTL :                      362 - |  H88.SW :                       362 - |
*H88B.CK :                        2 - | *H88B.SS :                        1 - |
 H88S.0 :                        14 - |  H88S.4 :                         3 - |
 H88S.AT :                      200 - |  H88S.BR :                      100 - |
 H88S.DV :                       20 - |  H88S.M :                        40 - |
*HAS64 :                          1 - |  HORN :                       2.140 C |
 HRN0 :                       2.143 C |  HRN2 :                       2.160 C |
 HRNX :                       6.045 C |  IN. :                        6.170 C |
 IN.1 :                       6.174 C |  IN1. :                       6.156 C |
 INIT :                          73 C | *INIT0 :                          0 C |
 INIT0.0 :                        3 C |  INIT0X :                     4.000 C |
 INIT0X1 :                    4.050 C |  INIT1 :                        107 C |
*INIT2 :                        117 C | *INT1 :                          10 - |
*INT2 :                          20 - | *INT3 :                          30 C |
*INT4 :                          40 C | *INT5 :                          50 C |
*INT6 :                          60 C | *INT7 :                          70 C |
 INTXIT :                       172 C |  IOA :                        3.062 C |
 IOA1 :                       5.176 C |  IOA2 :                       5.204 C |
 IOA3 :                       5.242 C |  IOA4 :                       5.260 C |
*IOB :                        3.066 C |  IOB1 :                       3.070 C |
 IOB1.5 :                     3.126 C |  IOB2 :                       3.135 C |
 IOC :                        5.301 C |  IOWRK :                     40.002 C |
 IP.DS :                        177 - | *IP.PAD :                       360 - |
*IP.TPC :                       371 - | *IP.TPD :                       370 - |
 IROC :                       5.150 C |  IROC1 :                      5.166 C |
*LISTON :                         1 - | *LRA :                        3.047 C |
 LRA. :                       3.052 C | *MACEXP :                         7 - |
 MFLAG :                     40.010 C | *MI.ANI :                       346 - |
*MI.EXAF :                       10 - |  MI.HLT :                       166 - |
 MI.IN :                        333 - | *MI.JIXA :                      335 - |
*MI.JIXB :                      351 - | *MI.JIYA :                      375 - |
*MI.JIYB :                      351 - |  MI.JMP :                       303 - |
*MI.LDA :                        72 - | *MI.LDXA :                      335 - |
*MI.LDXB :                       41 - | *MI.LDYA :                      375 - |
*MI.LDYB :                       41 - | *MI.LXID :                       21 - |
 MI.OUT :                       323 - |  MI.RET :                       311 - |
*MOMCPU :                   200.200 - | *MOMCPUNAME :                "8080" - |
 MSG.BT :                     6.234 C |  MSG.EQ :                     7.362 C |
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 55 - 2024-04-22 06:03:31 PM


 MSG.ERR :                    1.047 C |  MSG.GO :                     6.165 C |
 MSG.HSS :                    7.100 C |  MSG.PAS :                    3.237 C |
 MSG.PC :                     6.214 C |  MSG.PR :                     6.111 C |
 MSG.RAM :                    7.324 C |  MSG.SPD :                    6.371 C |
 MSG.SUB :                    6.201 C |  MSG.WRK :                    7.062 C |
 MTR :                          344 C |  MTR.15 :                       354 C |
 MTR.2 :                        357 C |  MTR.3 :                        371 C |
 MTR.4 :                      1.014 C |  MTR1 :                         345 C |
 MTRA :                       1.025 C |  MTRAL :                          4 - |
 MYCNT :                     41.122 C |  NB7 :                        1.316 C |
 NBOOT :                      1.261 C |  NBOOT0 :                     1.262 C |
*NESTMAX :                    1.000 - |  NMI :                        4.116 C |
 NMI0.5 :                     4.154 C |  NMI1 :                       4.173 C |
 NMI1.5 :                     4.206 C | *NMI2 :                       4.212 C |
 NMI2.2 :                     4.225 C |  NMI2.5 :                     4.236 C |
 NMI3 :                       4.237 C | *NMIENT :                       146 C |
 NMIRET :                    40.064 C |  NODEV :                      2.171 C |
 NOISE :                      6.053 C |  ONDR0 :                         22 - |
 OP.CTL :                       360 - |  OP.DC :                        177 - |
*OP.DIG :                       360 - | *OP.SEQ :                       361 - |
 OP.TPC :                       371 - | *OP.TPD :                       370 - |
 OUT. :                       6.063 C |  OUT.1 :                      6.070 C |
 OUT1. :                      6.146 C |  PCA :                        1.103 C |
 PCA1 :                       1.137 C |  PIN :                        1.067 C |
 PRIM :                      41.120 C |  PRSL :                           7 - |
 PRSRAM :                    40.004 C |  PRSROM :                     3.371 C |
 R.ABORT :                   33.366 - |  R.READ :                    34.077 - |
 R.SDP :                      2.071 C |  R.SDP1 :                     2.110 C |
 RAM :                            0 - |  RCC :                        3.262 C |
 RCC1 :                       3.262 C | *RCCA :                      40.026 C |
*RCK :                        3.260 C | *RD1 :                        6.121 C |
 RD2 :                        6.136 C |  RDBLCK :                     6.121 C |
*REFIND :                    40.012 C |  REGI :                      40.005 C |
 REGPTR :                    40.035 C | *RELAXED :                        0 - |
*RESET :                      2.003 C |  RETRY :                      2.063 C |
*ROMBOOT :                   30.000 - | *RT.BP :                          2 - |
*RT.CT :                          3 - | *RT.MI :                          1 - |
 S.DON :                         40 - |  S.DTR :                        200 - |
 S.ERR :                          1 - | *S.GRT :                     24.000 - |
*S.GRT1 :                    25.000 - | *S.INT :                     40.343 C |
*S.OVR :                     41.146 C | *S.VAL :                     40.277 C |
*SAE :                        1.063 C |  SAVALL :                       132 C |
 SAVALLR :                      151 C |  SAVALLX :                    4.105 C |
 SC.ACE :                       350 - | *SC.UART :                      372 - |
 SDP3 :                      36.073 - |  SECOND :                     3.007 C |
*SECSCR :                    26.000 - |  SINCR :                      4.000 - |
 SPEED :                      6.240 C |  SPEED1 :                     6.257 C |
 SPEED2 :                     6.275 C |  SPEED3 :                     6.300 C |
 SPEED4 :                     6.307 C |  SPEED5 :                     6.357 C |
 SST1 :                       1.235 C | *SSTEP :                      1.225 C |
*STACK :                     42.200 C | *STACKL :                     1.032 - |
 START :                     40.000 C |  START1 :                     1.265 C |
 STK :                       41.124 C |  STPRTN :                     1.244 C |
 SUBM :                       4.370 C |  SUBM1 :                      5.013 C |
 SUBM2 :                      5.027 C |  SUBM3 :                      5.042 C |
 SUBM4 :                      5.046 C |  SUBM5 :                      5.053 C |
 SUBM6 :                      5.062 C |  SUBM7 :                      5.075 C |
 SUBM8 :                      5.077 C |  SUBM9 :                      5.115 C |
*SYDD :                      40.130 C |  TICCNT :                    40.033 C |
*TIME :               "06:03:31 PM" - |  TMFG :                      41.121 C |
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 56 - 2024-04-22 06:03:31 PM


 TMOUT :                      4.302 C |  TMOUT1 :                     4.345 C |
 TMOUT2 :                     4.361 C |  TMOUT3 :                     4.363 C |
 TMOUT4 :                     4.321 C |  TOA :                        5.313 C |
 TOA. :                       5.325 C |  TOB :                        5.343 C |
 TOB1 :                       5.353 C | *TPERRX :                    40.031 C |
*TRUE :                           1 - |  TYPMSG :                     6.100 C |
*UBR :                            1 - | *UC.2SB :                         4 - |
*UC.5BW :                         0 - | *UC.6BW :                         1 - |
*UC.7BW :                         2 - |  UC.8BW :                         3 - |
*UC.BI :                         20 - | *UC.CTS :                        20 - |
*UC.DCS :                         1 - | *UC.DDR :                         2 - |
 UC.DLA :                       200 - |  UC.DR :                          1 - |
*UC.DRL :                        10 - | *UC.DSR :                        40 - |
*UC.DTR :                         1 - | *UC.EDA :                         1 - |
*UC.EPS :                        20 - | *UC.FE :                         10 - |
*UC.IID :                         6 - | *UC.IIP :                         1 - |
*UC.LOO :                        20 - | *UC.MSI :                        10 - |
*UC.OR :                          2 - | *UC.OU1 :                         4 - |
*UC.OU2 :                        10 - | *UC.PE :                          4 - |
*UC.PEN :                        10 - | *UC.RI :                        100 - |
*UC.RLS :                       200 - | *UC.RSI :                         4 - |
*UC.RTS :                         2 - | *UC.SB :                        100 - |
*UC.SKP :                        40 - | *UC.TER :                         4 - |
 UC.THE :                        40 - | *UC.TRE :                         2 - |
*UC.TSE :                       100 - | *UCI.ER :                        20 - |
*UCI.IE :                         2 - | *UCI.IR :                       100 - |
*UCI.RE :                         4 - | *UCI.RO :                        40 - |
*UCI.TE :                         1 - | *UDR :                            0 - |
*UF.FCT :                       100 - | *UF.RDA :                         1 - |
*UF.ROR :                         2 - | *UF.RPE :                         4 - |
*UF.TB :                        200 - |  UIVEC :                     40.037 - |
 UMI.16X :                        2 - |  UMI.1B :                       100 - |
*UMI.1X :                         1 - | *UMI.2B :                       300 - |
*UMI.64X :                        3 - | *UMI.HB :                       200 - |
*UMI.L5 :                         0 - | *UMI.L6 :                         4 - |
*UMI.L7 :                        10 - |  UMI.L8 :                        14 - |
*UMI.PA :                        20 - | *UMI.PE :                        40 - |
*UNT.0 :                          0 - | *UNT.1 :                         40 - |
*UNT.2 :                        100 - | *UNT.3 :                        140 - |
*UO.CLK :                         1 - |  UO.DDU :                         2 - |
*UO.HLT :                       200 - |  UO.NFR :                       100 - |
 UP.DP :                        174 - | *UP.FC :                        175 - |
*UP.SC :                        176 - | *UP.SR :                        176 - |
*UP.ST :                        175 - |  UR.DLL :                         0 - |
 UR.DLM :                         1 - |  UR.IER :                         1 - |
*UR.IIR :                         2 - |  UR.LCR :                         3 - |
 UR.LSR :                         5 - | *UR.MCR :                         4 - |
*UR.MSR :                         6 - |  UR.RBR :                         0 - |
 UR.THR :                         0 - |  USERFWA :                   42.200 C |
*USR.FE :                        40 - | *USR.OE :                        20 - |
*USR.PE :                        10 - | *USR.RXR :                        2 - |
*USR.TXE :                        4 - | *USR.TXR :                        1 - |
*VERSION :                   24.057 - |  W.RES :                          2 - |
 WCC :                        3.302 C |  WCC1 :                       3.303 C |
 WCR :                        6.003 C |  WHD :                       36.235 - |
 WNH :                       36.271 - |  WRONG :                      1.307 C |
 WTDON1 :                     6.032 C |  Z47 :                        1.364 C |
 Z47A :                       1.370 C | *Z80SYNTAX :                      0 - |

  1.213 symbols
 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 57 - 2024-04-22 06:03:31 PM


    202 unused symbols

 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 58 - 2024-04-22 06:03:31 PM


  Defined Macros:
  ---------------

ERRMI                                 | ERRNZ                                
ERRPL                                 | ERRZR                                

      4 macros

 AS V1.42 Beta [Bld 266] - Source File mtr89.asm - Page 59 - 2024-04-22 06:03:31 PM


  Code Pages:
  ----------

STANDARD (0 changed characters)

1 code page

0.03 seconds assembly time

 11.131 lines source file
 11.245 lines incl. macro expansions
      2 passes
      0 errors
      0 warnings
